<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (1 samples, 0.04%)</title><rect x="1121.6" y="197" width="0.5" height="15.0" fill="rgb(207,1,2)" rx="2" ry="2" />
<text  x="1124.58" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1131.0" y="197" width="0.5" height="15.0" fill="rgb(214,146,25)" rx="2" ry="2" />
<text  x="1134.00" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="723.9" y="165" width="1.0" height="15.0" fill="rgb(231,163,2)" rx="2" ry="2" />
<text  x="726.95" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (2 samples, 0.08%)</title><rect x="1018.5" y="149" width="0.9" height="15.0" fill="rgb(243,97,54)" rx="2" ry="2" />
<text  x="1021.45" y="159.5" ></text>
</g>
<g >
<title>mergesort (1,321 samples, 55.50%)</title><rect x="510.3" y="373" width="654.9" height="15.0" fill="rgb(235,197,6)" rx="2" ry="2" />
<text  x="513.26" y="383.5" >mergesort</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="716.5" y="213" width="1.0" height="15.0" fill="rgb(239,169,50)" rx="2" ry="2" />
<text  x="719.51" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="661.0" y="181" width="0.5" height="15.0" fill="rgb(245,104,52)" rx="2" ry="2" />
<text  x="663.98" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="1085.4" y="149" width="0.5" height="15.0" fill="rgb(224,91,34)" rx="2" ry="2" />
<text  x="1088.39" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (2 samples, 0.08%)</title><rect x="1062.6" y="165" width="1.0" height="15.0" fill="rgb(252,159,29)" rx="2" ry="2" />
<text  x="1065.58" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (4 samples, 0.17%)</title><rect x="619.8" y="277" width="2.0" height="15.0" fill="rgb(215,87,41)" rx="2" ry="2" />
<text  x="622.83" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="884.1" y="69" width="0.5" height="15.0" fill="rgb(226,82,5)" rx="2" ry="2" />
<text  x="887.09" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (1 samples, 0.04%)</title><rect x="1079.4" y="133" width="0.5" height="15.0" fill="rgb(227,180,26)" rx="2" ry="2" />
<text  x="1082.44" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (1 samples, 0.04%)</title><rect x="1129.5" y="165" width="0.5" height="15.0" fill="rgb(246,4,5)" rx="2" ry="2" />
<text  x="1132.51" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.04%)</title><rect x="1123.6" y="181" width="0.5" height="15.0" fill="rgb(214,195,39)" rx="2" ry="2" />
<text  x="1126.56" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (28 samples, 1.18%)</title><rect x="879.1" y="117" width="13.9" height="15.0" fill="rgb(246,114,2)" rx="2" ry="2" />
<text  x="882.13" y="127.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="27.8" y="389" width="0.5" height="15.0" fill="rgb(252,71,15)" rx="2" ry="2" />
<text  x="30.85" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (4 samples, 0.17%)</title><rect x="1152.3" y="293" width="2.0" height="15.0" fill="rgb(245,154,49)" rx="2" ry="2" />
<text  x="1155.32" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (1 samples, 0.04%)</title><rect x="968.4" y="85" width="0.5" height="15.0" fill="rgb(221,108,38)" rx="2" ry="2" />
<text  x="971.38" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (6 samples, 0.25%)</title><rect x="1113.6" y="149" width="3.0" height="15.0" fill="rgb(212,183,43)" rx="2" ry="2" />
<text  x="1116.65" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (1 samples, 0.04%)</title><rect x="666.4" y="197" width="0.5" height="15.0" fill="rgb(208,92,36)" rx="2" ry="2" />
<text  x="669.44" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="444.3" y="325" width="0.5" height="15.0" fill="rgb(247,4,30)" rx="2" ry="2" />
<text  x="447.32" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="21.9" y="261" width="0.5" height="15.0" fill="rgb(249,195,42)" rx="2" ry="2" />
<text  x="24.90" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="25.9" y="405" width="0.5" height="15.0" fill="rgb(231,59,54)" rx="2" ry="2" />
<text  x="28.87" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (4 samples, 0.17%)</title><rect x="603.5" y="277" width="2.0" height="15.0" fill="rgb(248,195,19)" rx="2" ry="2" />
<text  x="606.47" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (3 samples, 0.13%)</title><rect x="604.0" y="261" width="1.5" height="15.0" fill="rgb(218,46,25)" rx="2" ry="2" />
<text  x="606.97" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="1155.3" y="309" width="0.5" height="15.0" fill="rgb(219,63,36)" rx="2" ry="2" />
<text  x="1158.29" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1164.2" y="325" width="0.5" height="15.0" fill="rgb(216,78,1)" rx="2" ry="2" />
<text  x="1167.22" y="335.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="1110.2" y="149" width="0.5" height="15.0" fill="rgb(238,110,20)" rx="2" ry="2" />
<text  x="1113.18" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="308.5" y="341" width="0.5" height="15.0" fill="rgb(253,121,33)" rx="2" ry="2" />
<text  x="311.47" y="351.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (6 samples, 0.25%)</title><rect x="1055.1" y="117" width="3.0" height="15.0" fill="rgb(225,159,4)" rx="2" ry="2" />
<text  x="1058.14" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (6 samples, 0.25%)</title><rect x="919.8" y="117" width="3.0" height="15.0" fill="rgb(244,0,13)" rx="2" ry="2" />
<text  x="922.79" y="127.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="852.9" y="85" width="0.5" height="15.0" fill="rgb(232,18,25)" rx="2" ry="2" />
<text  x="855.86" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="640.7" y="245" width="0.5" height="15.0" fill="rgb(241,74,44)" rx="2" ry="2" />
<text  x="643.66" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.04%)</title><rect x="300.0" y="373" width="0.5" height="15.0" fill="rgb(225,185,14)" rx="2" ry="2" />
<text  x="303.04" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="595.5" y="213" width="0.5" height="15.0" fill="rgb(231,122,36)" rx="2" ry="2" />
<text  x="598.54" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="626.8" y="261" width="0.5" height="15.0" fill="rgb(250,209,11)" rx="2" ry="2" />
<text  x="629.77" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (4 samples, 0.17%)</title><rect x="819.1" y="117" width="2.0" height="15.0" fill="rgb(253,110,40)" rx="2" ry="2" />
<text  x="822.14" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="512.2" y="309" width="0.5" height="15.0" fill="rgb(251,229,36)" rx="2" ry="2" />
<text  x="515.24" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1157.8" y="309" width="0.5" height="15.0" fill="rgb(226,124,0)" rx="2" ry="2" />
<text  x="1160.77" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="544.5" y="325" width="0.5" height="15.0" fill="rgb(218,117,19)" rx="2" ry="2" />
<text  x="547.47" y="335.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (118 samples, 4.96%)</title><rect x="448.3" y="325" width="58.5" height="15.0" fill="rgb(226,165,40)" rx="2" ry="2" />
<text  x="451.29" y="335.5" >std::m..</text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (3 samples, 0.13%)</title><rect x="728.9" y="149" width="1.5" height="15.0" fill="rgb(208,174,34)" rx="2" ry="2" />
<text  x="731.91" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="859.3" y="85" width="0.5" height="15.0" fill="rgb(220,112,40)" rx="2" ry="2" />
<text  x="862.30" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="875.2" y="101" width="1.0" height="15.0" fill="rgb(231,170,31)" rx="2" ry="2" />
<text  x="878.17" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="541.0" y="261" width="0.5" height="15.0" fill="rgb(221,92,48)" rx="2" ry="2" />
<text  x="544.00" y="271.5" ></text>
</g>
<g >
<title>mergesort (1,175 samples, 49.37%)</title><rect x="578.2" y="341" width="582.5" height="15.0" fill="rgb(239,154,11)" rx="2" ry="2" />
<text  x="581.18" y="351.5" >mergesort</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (2 samples, 0.08%)</title><rect x="999.1" y="117" width="1.0" height="15.0" fill="rgb(222,16,29)" rx="2" ry="2" />
<text  x="1002.12" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1161.2" y="309" width="1.0" height="15.0" fill="rgb(250,168,25)" rx="2" ry="2" />
<text  x="1164.24" y="319.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (1 samples, 0.04%)</title><rect x="1153.8" y="229" width="0.5" height="15.0" fill="rgb(245,14,14)" rx="2" ry="2" />
<text  x="1156.81" y="239.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="891.0" y="69" width="0.5" height="15.0" fill="rgb(243,207,7)" rx="2" ry="2" />
<text  x="894.03" y="79.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (5 samples, 0.21%)</title><rect x="705.1" y="165" width="2.5" height="15.0" fill="rgb(239,170,54)" rx="2" ry="2" />
<text  x="708.11" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (3 samples, 0.13%)</title><rect x="977.8" y="133" width="1.5" height="15.0" fill="rgb(214,107,47)" rx="2" ry="2" />
<text  x="980.80" y="143.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (4 samples, 0.17%)</title><rect x="842.4" y="117" width="2.0" height="15.0" fill="rgb(247,193,8)" rx="2" ry="2" />
<text  x="845.45" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (3 samples, 0.13%)</title><rect x="709.6" y="213" width="1.5" height="15.0" fill="rgb(237,189,51)" rx="2" ry="2" />
<text  x="712.57" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (4 samples, 0.17%)</title><rect x="1064.1" y="165" width="2.0" height="15.0" fill="rgb(210,96,50)" rx="2" ry="2" />
<text  x="1067.07" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (1 samples, 0.04%)</title><rect x="1047.7" y="85" width="0.5" height="15.0" fill="rgb(209,157,52)" rx="2" ry="2" />
<text  x="1050.71" y="95.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (1 samples, 0.04%)</title><rect x="943.1" y="37" width="0.5" height="15.0" fill="rgb(240,91,32)" rx="2" ry="2" />
<text  x="946.09" y="47.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="661.5" y="181" width="0.5" height="15.0" fill="rgb(232,94,6)" rx="2" ry="2" />
<text  x="664.48" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (1 samples, 0.04%)</title><rect x="437.9" y="341" width="0.5" height="15.0" fill="rgb(206,183,16)" rx="2" ry="2" />
<text  x="440.87" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (1 samples, 0.04%)</title><rect x="772.5" y="117" width="0.5" height="15.0" fill="rgb(222,139,29)" rx="2" ry="2" />
<text  x="775.54" y="127.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="662.0" y="213" width="0.5" height="15.0" fill="rgb(206,74,38)" rx="2" ry="2" />
<text  x="664.97" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (7 samples, 0.29%)</title><rect x="545.5" y="325" width="3.4" height="15.0" fill="rgb(244,149,53)" rx="2" ry="2" />
<text  x="548.46" y="335.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (3 samples, 0.13%)</title><rect x="1056.6" y="101" width="1.5" height="15.0" fill="rgb(225,81,3)" rx="2" ry="2" />
<text  x="1059.63" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.04%)</title><rect x="1160.3" y="293" width="0.4" height="15.0" fill="rgb(209,126,47)" rx="2" ry="2" />
<text  x="1163.25" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (1 samples, 0.04%)</title><rect x="1091.8" y="165" width="0.5" height="15.0" fill="rgb(212,4,19)" rx="2" ry="2" />
<text  x="1094.83" y="175.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="505.3" y="293" width="0.5" height="15.0" fill="rgb(253,11,39)" rx="2" ry="2" />
<text  x="508.30" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="621.8" y="277" width="0.5" height="15.0" fill="rgb(237,12,25)" rx="2" ry="2" />
<text  x="624.82" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="606.4" y="261" width="0.5" height="15.0" fill="rgb(226,51,44)" rx="2" ry="2" />
<text  x="609.45" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (2 samples, 0.08%)</title><rect x="1047.2" y="101" width="1.0" height="15.0" fill="rgb(213,192,35)" rx="2" ry="2" />
<text  x="1050.21" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="665.9" y="229" width="0.5" height="15.0" fill="rgb(246,151,12)" rx="2" ry="2" />
<text  x="668.94" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="1087.4" y="165" width="1.5" height="15.0" fill="rgb(217,148,53)" rx="2" ry="2" />
<text  x="1090.37" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (28 samples, 1.18%)</title><rect x="765.1" y="181" width="13.9" height="15.0" fill="rgb(241,164,34)" rx="2" ry="2" />
<text  x="768.10" y="191.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (24 samples, 1.01%)</title><rect x="584.1" y="277" width="11.9" height="15.0" fill="rgb(228,80,21)" rx="2" ry="2" />
<text  x="587.13" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="764.6" y="165" width="0.5" height="15.0" fill="rgb(249,170,37)" rx="2" ry="2" />
<text  x="767.61" y="175.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="824.6" y="85" width="0.5" height="15.0" fill="rgb(253,120,37)" rx="2" ry="2" />
<text  x="827.60" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="625.8" y="261" width="1.0" height="15.0" fill="rgb(232,2,34)" rx="2" ry="2" />
<text  x="628.78" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="25.9" y="389" width="0.5" height="15.0" fill="rgb(251,133,11)" rx="2" ry="2" />
<text  x="28.87" y="399.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (1 samples, 0.04%)</title><rect x="21.9" y="389" width="0.5" height="15.0" fill="rgb(243,142,46)" rx="2" ry="2" />
<text  x="24.90" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (4 samples, 0.17%)</title><rect x="925.2" y="101" width="2.0" height="15.0" fill="rgb(229,123,53)" rx="2" ry="2" />
<text  x="928.24" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (4 samples, 0.17%)</title><rect x="1104.2" y="181" width="2.0" height="15.0" fill="rgb(216,48,33)" rx="2" ry="2" />
<text  x="1107.23" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (1 samples, 0.04%)</title><rect x="970.9" y="69" width="0.5" height="15.0" fill="rgb(250,101,42)" rx="2" ry="2" />
<text  x="973.86" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="872.2" y="133" width="0.5" height="15.0" fill="rgb(223,70,15)" rx="2" ry="2" />
<text  x="875.19" y="143.5" ></text>
</g>
<g >
<title>std::__do_alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (1 samples, 0.04%)</title><rect x="966.4" y="117" width="0.5" height="15.0" fill="rgb(215,39,8)" rx="2" ry="2" />
<text  x="969.39" y="127.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="728.4" y="149" width="0.5" height="15.0" fill="rgb(221,121,46)" rx="2" ry="2" />
<text  x="731.41" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (6 samples, 0.25%)</title><rect x="988.2" y="133" width="3.0" height="15.0" fill="rgb(239,150,32)" rx="2" ry="2" />
<text  x="991.21" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1166.2" y="373" width="0.5" height="15.0" fill="rgb(217,94,31)" rx="2" ry="2" />
<text  x="1169.20" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (7 samples, 0.29%)</title><rect x="545.5" y="341" width="3.4" height="15.0" fill="rgb(245,33,47)" rx="2" ry="2" />
<text  x="548.46" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="673.9" y="213" width="0.5" height="15.0" fill="rgb(231,213,24)" rx="2" ry="2" />
<text  x="676.87" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (1 samples, 0.04%)</title><rect x="746.8" y="117" width="0.5" height="15.0" fill="rgb(234,70,35)" rx="2" ry="2" />
<text  x="749.76" y="127.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.13%)</title><rect x="773.0" y="117" width="1.5" height="15.0" fill="rgb(239,47,20)" rx="2" ry="2" />
<text  x="776.03" y="127.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="21.9" y="197" width="0.5" height="15.0" fill="rgb(233,109,50)" rx="2" ry="2" />
<text  x="24.90" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="809.7" y="165" width="0.5" height="15.0" fill="rgb(224,171,10)" rx="2" ry="2" />
<text  x="812.72" y="175.5" ></text>
</g>
<g >
<title>mergesort (176 samples, 7.39%)</title><rect x="869.7" y="165" width="87.3" height="15.0" fill="rgb(216,163,36)" rx="2" ry="2" />
<text  x="872.71" y="175.5" >mergesort</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (14 samples, 0.59%)</title><rect x="1073.0" y="181" width="6.9" height="15.0" fill="rgb(230,52,42)" rx="2" ry="2" />
<text  x="1075.99" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="1104.2" y="149" width="0.5" height="15.0" fill="rgb(209,80,25)" rx="2" ry="2" />
<text  x="1107.23" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="640.7" y="261" width="0.5" height="15.0" fill="rgb(246,168,47)" rx="2" ry="2" />
<text  x="643.66" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="1151.8" y="293" width="0.5" height="15.0" fill="rgb(217,213,51)" rx="2" ry="2" />
<text  x="1154.82" y="303.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.13%)</title><rect x="659.5" y="197" width="1.5" height="15.0" fill="rgb(241,102,44)" rx="2" ry="2" />
<text  x="662.50" y="207.5" ></text>
</g>
<g >
<title>mergesort (1,760 samples, 73.95%)</title><rect x="297.1" y="405" width="872.6" height="15.0" fill="rgb(251,10,26)" rx="2" ry="2" />
<text  x="300.07" y="415.5" >mergesort</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="515.2" y="293" width="1.0" height="15.0" fill="rgb(217,173,14)" rx="2" ry="2" />
<text  x="518.22" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (6 samples, 0.25%)</title><rect x="1094.8" y="149" width="3.0" height="15.0" fill="rgb(206,156,53)" rx="2" ry="2" />
<text  x="1097.81" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (1 samples, 0.04%)</title><rect x="945.6" y="133" width="0.5" height="15.0" fill="rgb(230,139,15)" rx="2" ry="2" />
<text  x="948.57" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.17%)</title><rect x="656.5" y="181" width="2.0" height="15.0" fill="rgb(226,99,32)" rx="2" ry="2" />
<text  x="659.52" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (13 samples, 0.55%)</title><rect x="1004.1" y="149" width="6.4" height="15.0" fill="rgb(213,33,11)" rx="2" ry="2" />
<text  x="1007.08" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (16 samples, 0.67%)</title><rect x="836.5" y="133" width="7.9" height="15.0" fill="rgb(233,140,44)" rx="2" ry="2" />
<text  x="839.50" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (4 samples, 0.17%)</title><rect x="576.2" y="309" width="2.0" height="15.0" fill="rgb(238,229,10)" rx="2" ry="2" />
<text  x="579.20" y="319.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (2 samples, 0.08%)</title><rect x="1096.8" y="117" width="1.0" height="15.0" fill="rgb(219,211,54)" rx="2" ry="2" />
<text  x="1099.79" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (2 samples, 0.08%)</title><rect x="778.0" y="165" width="1.0" height="15.0" fill="rgb(216,161,16)" rx="2" ry="2" />
<text  x="780.99" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1170.2" y="373" width="0.5" height="15.0" fill="rgb(220,174,19)" rx="2" ry="2" />
<text  x="1173.17" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (4 samples, 0.17%)</title><rect x="1058.1" y="149" width="2.0" height="15.0" fill="rgb(237,10,36)" rx="2" ry="2" />
<text  x="1061.12" y="159.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (3 samples, 0.13%)</title><rect x="1099.8" y="101" width="1.5" height="15.0" fill="rgb(245,169,42)" rx="2" ry="2" />
<text  x="1102.76" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="867.7" y="117" width="0.5" height="15.0" fill="rgb(228,152,0)" rx="2" ry="2" />
<text  x="870.73" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="636.2" y="229" width="0.5" height="15.0" fill="rgb(227,129,24)" rx="2" ry="2" />
<text  x="639.19" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (6 samples, 0.25%)</title><rect x="734.4" y="213" width="2.9" height="15.0" fill="rgb(253,181,52)" rx="2" ry="2" />
<text  x="737.36" y="223.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.04%)</title><rect x="437.9" y="229" width="0.5" height="15.0" fill="rgb(244,60,42)" rx="2" ry="2" />
<text  x="440.87" y="239.5" ></text>
</g>
<g >
<title>merge (48 samples, 2.02%)</title><rect x="643.1" y="277" width="23.8" height="15.0" fill="rgb(235,105,43)" rx="2" ry="2" />
<text  x="646.13" y="287.5" >m..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_nothrow_relocate (3 samples, 0.13%)</title><rect x="1050.7" y="149" width="1.5" height="15.0" fill="rgb(217,55,51)" rx="2" ry="2" />
<text  x="1053.68" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (4 samples, 0.17%)</title><rect x="1120.1" y="213" width="2.0" height="15.0" fill="rgb(247,89,5)" rx="2" ry="2" />
<text  x="1123.09" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.08%)</title><rect x="826.1" y="165" width="1.0" height="15.0" fill="rgb(240,73,44)" rx="2" ry="2" />
<text  x="829.08" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="899.0" y="117" width="0.5" height="15.0" fill="rgb(227,44,41)" rx="2" ry="2" />
<text  x="901.97" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="725.4" y="165" width="0.5" height="15.0" fill="rgb(234,210,17)" rx="2" ry="2" />
<text  x="728.44" y="175.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="1117.1" y="133" width="0.5" height="15.0" fill="rgb(242,99,50)" rx="2" ry="2" />
<text  x="1120.12" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="433.9" y="293" width="0.5" height="15.0" fill="rgb(250,5,41)" rx="2" ry="2" />
<text  x="436.91" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (20 samples, 0.84%)</title><rect x="740.3" y="197" width="9.9" height="15.0" fill="rgb(244,93,28)" rx="2" ry="2" />
<text  x="743.31" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="843.9" y="69" width="0.5" height="15.0" fill="rgb(230,44,46)" rx="2" ry="2" />
<text  x="846.93" y="79.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1 samples, 0.04%)</title><rect x="1150.8" y="213" width="0.5" height="15.0" fill="rgb(215,118,7)" rx="2" ry="2" />
<text  x="1153.83" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (3 samples, 0.13%)</title><rect x="930.7" y="133" width="1.5" height="15.0" fill="rgb(233,78,20)" rx="2" ry="2" />
<text  x="933.70" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="307.5" y="325" width="1.0" height="15.0" fill="rgb(237,13,1)" rx="2" ry="2" />
<text  x="310.48" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (1 samples, 0.04%)</title><rect x="1041.3" y="117" width="0.5" height="15.0" fill="rgb(241,181,8)" rx="2" ry="2" />
<text  x="1044.26" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (1 samples, 0.04%)</title><rect x="1146.9" y="213" width="0.5" height="15.0" fill="rgb(235,220,41)" rx="2" ry="2" />
<text  x="1149.87" y="223.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="756.7" y="133" width="0.5" height="15.0" fill="rgb(217,7,47)" rx="2" ry="2" />
<text  x="759.67" y="143.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="687.8" y="165" width="0.5" height="15.0" fill="rgb(250,192,24)" rx="2" ry="2" />
<text  x="690.76" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (1 samples, 0.04%)</title><rect x="789.9" y="133" width="0.5" height="15.0" fill="rgb(213,13,31)" rx="2" ry="2" />
<text  x="792.89" y="143.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (10 samples, 0.42%)</title><rect x="1066.1" y="165" width="4.9" height="15.0" fill="rgb(234,110,19)" rx="2" ry="2" />
<text  x="1069.05" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (1 samples, 0.04%)</title><rect x="1135.5" y="229" width="0.5" height="15.0" fill="rgb(238,183,3)" rx="2" ry="2" />
<text  x="1138.46" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.08%)</title><rect x="788.4" y="133" width="1.0" height="15.0" fill="rgb(207,23,4)" rx="2" ry="2" />
<text  x="791.40" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="741.3" y="181" width="0.5" height="15.0" fill="rgb(227,17,54)" rx="2" ry="2" />
<text  x="744.30" y="191.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="1151.3" y="197" width="0.5" height="15.0" fill="rgb(233,20,33)" rx="2" ry="2" />
<text  x="1154.33" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="1125.1" y="213" width="0.4" height="15.0" fill="rgb(248,195,29)" rx="2" ry="2" />
<text  x="1128.05" y="223.5" ></text>
</g>
<g >
<title>std::__alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (2 samples, 0.08%)</title><rect x="1032.3" y="149" width="1.0" height="15.0" fill="rgb(253,13,18)" rx="2" ry="2" />
<text  x="1035.34" y="159.5" ></text>
</g>
<g >
<title>merge (535 samples, 22.48%)</title><rect x="31.8" y="405" width="265.3" height="15.0" fill="rgb(232,199,48)" rx="2" ry="2" />
<text  x="34.82" y="415.5" >merge</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.04%)</title><rect x="1065.6" y="149" width="0.5" height="15.0" fill="rgb(238,184,9)" rx="2" ry="2" />
<text  x="1068.55" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (1 samples, 0.04%)</title><rect x="771.1" y="149" width="0.4" height="15.0" fill="rgb(240,172,34)" rx="2" ry="2" />
<text  x="774.05" y="159.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="598.5" y="277" width="1.0" height="15.0" fill="rgb(241,38,23)" rx="2" ry="2" />
<text  x="601.51" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="918.3" y="117" width="1.0" height="15.0" fill="rgb(228,60,4)" rx="2" ry="2" />
<text  x="921.30" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="507.3" y="309" width="0.5" height="15.0" fill="rgb(228,166,27)" rx="2" ry="2" />
<text  x="510.29" y="319.5" ></text>
</g>
<g >
<title>__set_task_comm (1 samples, 0.04%)</title><rect x="1187.0" y="325" width="0.5" height="15.0" fill="rgb(244,123,51)" rx="2" ry="2" />
<text  x="1190.03" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (24 samples, 1.01%)</title><rect x="721.0" y="213" width="11.9" height="15.0" fill="rgb(241,1,19)" rx="2" ry="2" />
<text  x="723.97" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (1 samples, 0.04%)</title><rect x="896.5" y="149" width="0.5" height="15.0" fill="rgb(227,92,51)" rx="2" ry="2" />
<text  x="899.49" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (7 samples, 0.29%)</title><rect x="821.6" y="133" width="3.5" height="15.0" fill="rgb(240,106,43)" rx="2" ry="2" />
<text  x="824.62" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (2 samples, 0.08%)</title><rect x="1061.1" y="165" width="1.0" height="15.0" fill="rgb(237,12,11)" rx="2" ry="2" />
<text  x="1064.09" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (2 samples, 0.08%)</title><rect x="1068.0" y="69" width="1.0" height="15.0" fill="rgb(239,223,21)" rx="2" ry="2" />
<text  x="1071.03" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (4 samples, 0.17%)</title><rect x="937.6" y="117" width="2.0" height="15.0" fill="rgb(246,19,44)" rx="2" ry="2" />
<text  x="940.64" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (6 samples, 0.25%)</title><rect x="639.2" y="277" width="2.9" height="15.0" fill="rgb(244,2,44)" rx="2" ry="2" />
<text  x="642.17" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="37.3" y="309" width="0.5" height="15.0" fill="rgb(249,63,43)" rx="2" ry="2" />
<text  x="40.27" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1156.3" y="277" width="0.5" height="15.0" fill="rgb(246,151,44)" rx="2" ry="2" />
<text  x="1159.29" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.04%)</title><rect x="790.9" y="149" width="0.5" height="15.0" fill="rgb(218,157,53)" rx="2" ry="2" />
<text  x="793.88" y="159.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (12 samples, 0.50%)</title><rect x="609.9" y="261" width="6.0" height="15.0" fill="rgb(215,194,46)" rx="2" ry="2" />
<text  x="612.92" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="662.5" y="213" width="0.5" height="15.0" fill="rgb(252,28,34)" rx="2" ry="2" />
<text  x="665.47" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="927.2" y="117" width="0.5" height="15.0" fill="rgb(230,176,46)" rx="2" ry="2" />
<text  x="930.23" y="127.5" ></text>
</g>
<g >
<title>mergesort (1,074 samples, 45.13%)</title><rect x="622.8" y="309" width="532.5" height="15.0" fill="rgb(207,27,22)" rx="2" ry="2" />
<text  x="625.81" y="319.5" >mergesort</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (1 samples, 0.04%)</title><rect x="736.8" y="181" width="0.5" height="15.0" fill="rgb(241,108,46)" rx="2" ry="2" />
<text  x="739.84" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="817.7" y="133" width="0.5" height="15.0" fill="rgb(221,132,27)" rx="2" ry="2" />
<text  x="820.66" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="802.3" y="133" width="0.5" height="15.0" fill="rgb(238,149,2)" rx="2" ry="2" />
<text  x="805.29" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (31 samples, 1.30%)</title><rect x="912.4" y="133" width="15.3" height="15.0" fill="rgb(254,46,53)" rx="2" ry="2" />
<text  x="915.35" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="1095.8" y="117" width="0.5" height="15.0" fill="rgb(251,195,35)" rx="2" ry="2" />
<text  x="1098.80" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.08%)</title><rect x="1147.9" y="277" width="0.9" height="15.0" fill="rgb(221,215,51)" rx="2" ry="2" />
<text  x="1150.86" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (2 samples, 0.08%)</title><rect x="1068.0" y="85" width="1.0" height="15.0" fill="rgb(254,154,4)" rx="2" ry="2" />
<text  x="1071.03" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="1101.7" y="165" width="0.5" height="15.0" fill="rgb(232,14,25)" rx="2" ry="2" />
<text  x="1104.75" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="1102.2" y="165" width="0.5" height="15.0" fill="rgb(246,145,8)" rx="2" ry="2" />
<text  x="1105.24" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="770.1" y="149" width="1.0" height="15.0" fill="rgb(221,100,48)" rx="2" ry="2" />
<text  x="773.06" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="517.7" y="277" width="0.5" height="15.0" fill="rgb(236,212,34)" rx="2" ry="2" />
<text  x="520.70" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1111.2" y="181" width="1.0" height="15.0" fill="rgb(244,184,6)" rx="2" ry="2" />
<text  x="1114.17" y="191.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (1 samples, 0.04%)</title><rect x="987.7" y="85" width="0.5" height="15.0" fill="rgb(232,97,27)" rx="2" ry="2" />
<text  x="990.71" y="95.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (1 samples, 0.04%)</title><rect x="1071.0" y="165" width="0.5" height="15.0" fill="rgb(233,26,49)" rx="2" ry="2" />
<text  x="1074.01" y="175.5" ></text>
</g>
<g >
<title>mergesort (406 samples, 17.06%)</title><rect x="827.6" y="181" width="201.3" height="15.0" fill="rgb(236,134,14)" rx="2" ry="2" />
<text  x="830.57" y="191.5" >mergesort</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="751.2" y="181" width="1.0" height="15.0" fill="rgb(228,74,49)" rx="2" ry="2" />
<text  x="754.22" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="688.7" y="213" width="0.5" height="15.0" fill="rgb(225,229,4)" rx="2" ry="2" />
<text  x="691.75" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (1 samples, 0.04%)</title><rect x="1027.4" y="101" width="0.5" height="15.0" fill="rgb(205,169,53)" rx="2" ry="2" />
<text  x="1030.38" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (2 samples, 0.08%)</title><rect x="1161.2" y="341" width="1.0" height="15.0" fill="rgb(215,216,43)" rx="2" ry="2" />
<text  x="1164.24" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.04%)</title><rect x="938.6" y="101" width="0.5" height="15.0" fill="rgb(240,145,20)" rx="2" ry="2" />
<text  x="941.63" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (1 samples, 0.04%)</title><rect x="783.4" y="117" width="0.5" height="15.0" fill="rgb(215,185,3)" rx="2" ry="2" />
<text  x="786.45" y="127.5" ></text>
</g>
<g >
<title>all (2,380 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(233,83,6)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="749.7" y="165" width="0.5" height="15.0" fill="rgb(243,191,17)" rx="2" ry="2" />
<text  x="752.73" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::get_allocator (1 samples, 0.04%)</title><rect x="902.9" y="117" width="0.5" height="15.0" fill="rgb(239,158,13)" rx="2" ry="2" />
<text  x="905.93" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.04%)</title><rect x="21.9" y="405" width="0.5" height="15.0" fill="rgb(234,41,43)" rx="2" ry="2" />
<text  x="24.90" y="415.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="786.4" y="133" width="0.5" height="15.0" fill="rgb(244,113,26)" rx="2" ry="2" />
<text  x="789.42" y="143.5" ></text>
</g>
<g >
<title>load_elf_binary (6 samples, 0.25%)</title><rect x="1187.0" y="357" width="3.0" height="15.0" fill="rgb(228,5,43)" rx="2" ry="2" />
<text  x="1190.03" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (3 samples, 0.13%)</title><rect x="946.6" y="133" width="1.5" height="15.0" fill="rgb(249,113,20)" rx="2" ry="2" />
<text  x="949.56" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (3 samples, 0.13%)</title><rect x="853.4" y="117" width="1.4" height="15.0" fill="rgb(222,7,36)" rx="2" ry="2" />
<text  x="856.35" y="127.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="856.8" y="101" width="1.0" height="15.0" fill="rgb(254,50,23)" rx="2" ry="2" />
<text  x="859.82" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="714.5" y="213" width="0.5" height="15.0" fill="rgb(207,69,47)" rx="2" ry="2" />
<text  x="717.53" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (4 samples, 0.17%)</title><rect x="955.0" y="101" width="2.0" height="15.0" fill="rgb(213,6,50)" rx="2" ry="2" />
<text  x="957.99" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="711.6" y="197" width="0.5" height="15.0" fill="rgb(246,147,6)" rx="2" ry="2" />
<text  x="714.55" y="207.5" ></text>
</g>
<g >
<title>[merSort] (1 samples, 0.04%)</title><rect x="1086.4" y="133" width="0.5" height="15.0" fill="rgb(213,133,43)" rx="2" ry="2" />
<text  x="1089.38" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (1 samples, 0.04%)</title><rect x="1033.8" y="117" width="0.5" height="15.0" fill="rgb(254,216,4)" rx="2" ry="2" />
<text  x="1036.82" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (2 samples, 0.08%)</title><rect x="816.7" y="133" width="1.0" height="15.0" fill="rgb(223,192,42)" rx="2" ry="2" />
<text  x="819.66" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="546.0" y="309" width="1.4" height="15.0" fill="rgb(223,113,42)" rx="2" ry="2" />
<text  x="548.96" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (2 samples, 0.08%)</title><rect x="842.9" y="85" width="1.0" height="15.0" fill="rgb(236,107,41)" rx="2" ry="2" />
<text  x="845.94" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="868.2" y="117" width="0.5" height="15.0" fill="rgb(226,197,44)" rx="2" ry="2" />
<text  x="871.23" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="756.2" y="149" width="0.5" height="15.0" fill="rgb(248,132,19)" rx="2" ry="2" />
<text  x="759.18" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="630.2" y="213" width="0.5" height="15.0" fill="rgb(237,184,7)" rx="2" ry="2" />
<text  x="633.24" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (1 samples, 0.04%)</title><rect x="1151.3" y="213" width="0.5" height="15.0" fill="rgb(214,202,35)" rx="2" ry="2" />
<text  x="1154.33" y="223.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="1143.4" y="181" width="0.5" height="15.0" fill="rgb(236,100,27)" rx="2" ry="2" />
<text  x="1146.39" y="191.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (11 samples, 0.46%)</title><rect x="629.7" y="245" width="5.5" height="15.0" fill="rgb(239,10,18)" rx="2" ry="2" />
<text  x="632.75" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="906.9" y="101" width="0.5" height="15.0" fill="rgb(215,179,47)" rx="2" ry="2" />
<text  x="909.90" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (3 samples, 0.13%)</title><rect x="967.4" y="133" width="1.5" height="15.0" fill="rgb(253,0,38)" rx="2" ry="2" />
<text  x="970.39" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3 samples, 0.13%)</title><rect x="712.1" y="229" width="1.4" height="15.0" fill="rgb(206,9,10)" rx="2" ry="2" />
<text  x="715.05" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (7 samples, 0.29%)</title><rect x="680.8" y="181" width="3.5" height="15.0" fill="rgb(205,33,27)" rx="2" ry="2" />
<text  x="683.82" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (2 samples, 0.08%)</title><rect x="749.2" y="181" width="1.0" height="15.0" fill="rgb(236,209,32)" rx="2" ry="2" />
<text  x="752.24" y="191.5" ></text>
</g>
<g >
<title>mergesort (1,124 samples, 47.23%)</title><rect x="601.0" y="325" width="557.3" height="15.0" fill="rgb(227,115,28)" rx="2" ry="2" />
<text  x="603.99" y="335.5" >mergesort</text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (3 samples, 0.13%)</title><rect x="986.7" y="101" width="1.5" height="15.0" fill="rgb(212,172,3)" rx="2" ry="2" />
<text  x="989.72" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="775.5" y="101" width="0.5" height="15.0" fill="rgb(237,215,45)" rx="2" ry="2" />
<text  x="778.51" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="293.1" y="309" width="0.5" height="15.0" fill="rgb(237,94,43)" rx="2" ry="2" />
<text  x="296.10" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (11 samples, 0.46%)</title><rect x="1045.2" y="149" width="5.5" height="15.0" fill="rgb(226,125,5)" rx="2" ry="2" />
<text  x="1048.23" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (4 samples, 0.17%)</title><rect x="723.0" y="181" width="1.9" height="15.0" fill="rgb(211,198,42)" rx="2" ry="2" />
<text  x="725.96" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (1 samples, 0.04%)</title><rect x="790.9" y="181" width="0.5" height="15.0" fill="rgb(246,85,35)" rx="2" ry="2" />
<text  x="793.88" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (21 samples, 0.88%)</title><rect x="766.6" y="165" width="10.4" height="15.0" fill="rgb(245,146,32)" rx="2" ry="2" />
<text  x="769.59" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.25%)</title><rect x="1187.0" y="437" width="3.0" height="15.0" fill="rgb(214,68,14)" rx="2" ry="2" />
<text  x="1190.03" y="447.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (32 samples, 1.34%)</title><rect x="558.4" y="277" width="15.8" height="15.0" fill="rgb(239,78,49)" rx="2" ry="2" />
<text  x="561.35" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (8 samples, 0.34%)</title><rect x="713.5" y="229" width="4.0" height="15.0" fill="rgb(241,82,28)" rx="2" ry="2" />
<text  x="716.54" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (3 samples, 0.13%)</title><rect x="909.4" y="69" width="1.5" height="15.0" fill="rgb(250,180,6)" rx="2" ry="2" />
<text  x="912.38" y="79.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="865.7" y="69" width="0.5" height="15.0" fill="rgb(250,179,13)" rx="2" ry="2" />
<text  x="868.75" y="79.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (1 samples, 0.04%)</title><rect x="437.9" y="309" width="0.5" height="15.0" fill="rgb(236,73,30)" rx="2" ry="2" />
<text  x="440.87" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="958.5" y="149" width="0.5" height="15.0" fill="rgb(230,126,8)" rx="2" ry="2" />
<text  x="961.46" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (2 samples, 0.08%)</title><rect x="931.2" y="117" width="1.0" height="15.0" fill="rgb(229,44,15)" rx="2" ry="2" />
<text  x="934.19" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (2 samples, 0.08%)</title><rect x="596.0" y="277" width="1.0" height="15.0" fill="rgb(239,60,34)" rx="2" ry="2" />
<text  x="599.03" y="287.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.04%)</title><rect x="1173.6" y="453" width="0.5" height="15.0" fill="rgb(219,31,34)" rx="2" ry="2" />
<text  x="1176.64" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (19 samples, 0.80%)</title><rect x="606.9" y="277" width="9.5" height="15.0" fill="rgb(228,88,52)" rx="2" ry="2" />
<text  x="609.94" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (8 samples, 0.34%)</title><rect x="980.8" y="117" width="3.9" height="15.0" fill="rgb(250,45,26)" rx="2" ry="2" />
<text  x="983.77" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="765.1" y="165" width="0.5" height="15.0" fill="rgb(222,2,38)" rx="2" ry="2" />
<text  x="768.10" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="979.8" y="133" width="1.0" height="15.0" fill="rgb(234,175,18)" rx="2" ry="2" />
<text  x="982.78" y="143.5" ></text>
</g>
<g >
<title>_int_malloc (2 samples, 0.08%)</title><rect x="1172.6" y="453" width="1.0" height="15.0" fill="rgb(214,168,1)" rx="2" ry="2" />
<text  x="1175.65" y="463.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1 samples, 0.04%)</title><rect x="434.4" y="309" width="0.5" height="15.0" fill="rgb(254,121,17)" rx="2" ry="2" />
<text  x="437.40" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="775.0" y="101" width="0.5" height="15.0" fill="rgb(238,21,27)" rx="2" ry="2" />
<text  x="778.02" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (7 samples, 0.29%)</title><rect x="1102.7" y="197" width="3.5" height="15.0" fill="rgb(208,100,49)" rx="2" ry="2" />
<text  x="1105.74" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1167.2" y="357" width="1.0" height="15.0" fill="rgb(249,2,14)" rx="2" ry="2" />
<text  x="1170.19" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="806.3" y="69" width="0.4" height="15.0" fill="rgb(213,142,29)" rx="2" ry="2" />
<text  x="809.25" y="79.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (25 samples, 1.05%)</title><rect x="558.8" y="261" width="12.4" height="15.0" fill="rgb(207,172,40)" rx="2" ry="2" />
<text  x="561.85" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (6 samples, 0.25%)</title><rect x="985.2" y="133" width="3.0" height="15.0" fill="rgb(235,200,21)" rx="2" ry="2" />
<text  x="988.24" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (30 samples, 1.26%)</title><rect x="582.2" y="293" width="14.8" height="15.0" fill="rgb(211,140,49)" rx="2" ry="2" />
<text  x="585.15" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_nothrow_relocate (1 samples, 0.04%)</title><rect x="889.5" y="101" width="0.5" height="15.0" fill="rgb(228,40,27)" rx="2" ry="2" />
<text  x="892.55" y="111.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1 samples, 0.04%)</title><rect x="1121.6" y="165" width="0.5" height="15.0" fill="rgb(239,98,50)" rx="2" ry="2" />
<text  x="1124.58" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="744.8" y="165" width="0.5" height="15.0" fill="rgb(229,112,40)" rx="2" ry="2" />
<text  x="747.77" y="175.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (9 samples, 0.38%)</title><rect x="941.1" y="85" width="4.5" height="15.0" fill="rgb(249,75,50)" rx="2" ry="2" />
<text  x="944.11" y="95.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="716.0" y="181" width="0.5" height="15.0" fill="rgb(215,172,10)" rx="2" ry="2" />
<text  x="719.02" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.08%)</title><rect x="1171.2" y="421" width="1.0" height="15.0" fill="rgb(231,210,30)" rx="2" ry="2" />
<text  x="1174.16" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (2 samples, 0.08%)</title><rect x="1106.2" y="197" width="1.0" height="15.0" fill="rgb(234,220,43)" rx="2" ry="2" />
<text  x="1109.21" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="617.4" y="261" width="0.9" height="15.0" fill="rgb(216,90,31)" rx="2" ry="2" />
<text  x="620.35" y="271.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="437.4" y="341" width="0.5" height="15.0" fill="rgb(254,45,16)" rx="2" ry="2" />
<text  x="440.38" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="710.6" y="197" width="0.5" height="15.0" fill="rgb(237,195,29)" rx="2" ry="2" />
<text  x="713.56" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="576.7" y="293" width="1.5" height="15.0" fill="rgb(235,19,4)" rx="2" ry="2" />
<text  x="579.70" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="674.4" y="229" width="1.0" height="15.0" fill="rgb(254,10,43)" rx="2" ry="2" />
<text  x="677.37" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (2 samples, 0.08%)</title><rect x="1041.3" y="133" width="1.0" height="15.0" fill="rgb(212,189,33)" rx="2" ry="2" />
<text  x="1044.26" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (2 samples, 0.08%)</title><rect x="35.3" y="341" width="1.0" height="15.0" fill="rgb(227,145,16)" rx="2" ry="2" />
<text  x="38.29" y="351.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1 samples, 0.04%)</title><rect x="615.4" y="229" width="0.5" height="15.0" fill="rgb(207,200,41)" rx="2" ry="2" />
<text  x="618.37" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.55%)</title><rect x="586.6" y="229" width="6.5" height="15.0" fill="rgb(248,220,46)" rx="2" ry="2" />
<text  x="589.61" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (1 samples, 0.04%)</title><rect x="958.0" y="165" width="0.5" height="15.0" fill="rgb(241,8,24)" rx="2" ry="2" />
<text  x="960.97" y="175.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="856.3" y="85" width="0.5" height="15.0" fill="rgb(206,27,28)" rx="2" ry="2" />
<text  x="859.33" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="545.0" y="341" width="0.5" height="15.0" fill="rgb(240,57,40)" rx="2" ry="2" />
<text  x="547.97" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="1086.4" y="149" width="0.5" height="15.0" fill="rgb(219,142,26)" rx="2" ry="2" />
<text  x="1089.38" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (1 samples, 0.04%)</title><rect x="1153.8" y="261" width="0.5" height="15.0" fill="rgb(245,151,27)" rx="2" ry="2" />
<text  x="1156.81" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1170.2" y="357" width="0.5" height="15.0" fill="rgb(236,197,5)" rx="2" ry="2" />
<text  x="1173.17" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.04%)</title><rect x="1160.3" y="277" width="0.4" height="15.0" fill="rgb(249,68,19)" rx="2" ry="2" />
<text  x="1163.25" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.08%)</title><rect x="779.0" y="181" width="1.0" height="15.0" fill="rgb(243,217,42)" rx="2" ry="2" />
<text  x="781.98" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (1 samples, 0.04%)</title><rect x="1018.0" y="133" width="0.5" height="15.0" fill="rgb(217,225,5)" rx="2" ry="2" />
<text  x="1020.96" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="979.3" y="117" width="0.5" height="15.0" fill="rgb(254,62,30)" rx="2" ry="2" />
<text  x="982.29" y="127.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="756.2" y="117" width="0.5" height="15.0" fill="rgb(215,22,35)" rx="2" ry="2" />
<text  x="759.18" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="979.8" y="117" width="1.0" height="15.0" fill="rgb(253,167,20)" rx="2" ry="2" />
<text  x="982.78" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (32 samples, 1.34%)</title><rect x="810.2" y="165" width="15.9" height="15.0" fill="rgb(231,140,51)" rx="2" ry="2" />
<text  x="813.22" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="1162.2" y="309" width="0.5" height="15.0" fill="rgb(210,69,53)" rx="2" ry="2" />
<text  x="1165.24" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (3 samples, 0.13%)</title><rect x="1158.8" y="325" width="1.5" height="15.0" fill="rgb(215,95,2)" rx="2" ry="2" />
<text  x="1161.76" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="556.4" y="293" width="0.5" height="15.0" fill="rgb(216,164,3)" rx="2" ry="2" />
<text  x="559.37" y="303.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (9 samples, 0.38%)</title><rect x="725.9" y="181" width="4.5" height="15.0" fill="rgb(205,133,18)" rx="2" ry="2" />
<text  x="728.93" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (528 samples, 22.18%)</title><rect x="33.8" y="373" width="261.8" height="15.0" fill="rgb(245,202,18)" rx="2" ry="2" />
<text  x="36.80" y="383.5" >std::vector&lt;int, std::allocator&lt;in..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (5 samples, 0.21%)</title><rect x="1166.7" y="389" width="2.5" height="15.0" fill="rgb(245,44,54)" rx="2" ry="2" />
<text  x="1169.70" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="803.3" y="101" width="0.5" height="15.0" fill="rgb(220,117,40)" rx="2" ry="2" />
<text  x="806.28" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="618.3" y="293" width="0.5" height="15.0" fill="rgb(238,63,30)" rx="2" ry="2" />
<text  x="621.34" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="1122.6" y="197" width="0.5" height="15.0" fill="rgb(238,52,5)" rx="2" ry="2" />
<text  x="1125.57" y="207.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="986.2" y="101" width="0.5" height="15.0" fill="rgb(248,73,38)" rx="2" ry="2" />
<text  x="989.23" y="111.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.13%)</title><rect x="22.4" y="421" width="1.5" height="15.0" fill="rgb(237,24,20)" rx="2" ry="2" />
<text  x="25.39" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (4 samples, 0.17%)</title><rect x="969.9" y="117" width="1.9" height="15.0" fill="rgb(210,110,9)" rx="2" ry="2" />
<text  x="972.87" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (3 samples, 0.13%)</title><rect x="1142.4" y="213" width="1.5" height="15.0" fill="rgb(230,162,45)" rx="2" ry="2" />
<text  x="1145.40" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (3 samples, 0.13%)</title><rect x="996.6" y="149" width="1.5" height="15.0" fill="rgb(240,156,32)" rx="2" ry="2" />
<text  x="999.64" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="1160.3" y="309" width="0.4" height="15.0" fill="rgb(243,226,40)" rx="2" ry="2" />
<text  x="1163.25" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (2 samples, 0.08%)</title><rect x="1026.9" y="117" width="1.0" height="15.0" fill="rgb(249,38,21)" rx="2" ry="2" />
<text  x="1029.88" y="127.5" ></text>
</g>
<g >
<title>mergesort (1,469 samples, 61.72%)</title><rect x="438.4" y="389" width="728.3" height="15.0" fill="rgb(239,227,20)" rx="2" ry="2" />
<text  x="441.37" y="399.5" >mergesort</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="598.5" y="293" width="1.0" height="15.0" fill="rgb(234,60,1)" rx="2" ry="2" />
<text  x="601.51" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (1 samples, 0.04%)</title><rect x="1105.2" y="149" width="0.5" height="15.0" fill="rgb(218,129,12)" rx="2" ry="2" />
<text  x="1108.22" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (9 samples, 0.38%)</title><rect x="980.8" y="133" width="4.4" height="15.0" fill="rgb(215,187,9)" rx="2" ry="2" />
<text  x="983.77" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="446.8" y="309" width="0.5" height="15.0" fill="rgb(241,120,0)" rx="2" ry="2" />
<text  x="449.80" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="781.5" y="149" width="1.0" height="15.0" fill="rgb(234,45,13)" rx="2" ry="2" />
<text  x="784.46" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (25 samples, 1.05%)</title><rect x="959.5" y="149" width="12.3" height="15.0" fill="rgb(228,60,52)" rx="2" ry="2" />
<text  x="962.45" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (4 samples, 0.17%)</title><rect x="616.4" y="277" width="1.9" height="15.0" fill="rgb(220,216,8)" rx="2" ry="2" />
<text  x="619.36" y="287.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="21.9" y="277" width="0.5" height="15.0" fill="rgb(218,27,37)" rx="2" ry="2" />
<text  x="24.90" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="1101.7" y="181" width="0.5" height="15.0" fill="rgb(205,208,0)" rx="2" ry="2" />
<text  x="1104.75" y="191.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (3 samples, 0.13%)</title><rect x="865.3" y="85" width="1.4" height="15.0" fill="rgb(220,124,6)" rx="2" ry="2" />
<text  x="868.25" y="95.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (3 samples, 0.13%)</title><rect x="1099.8" y="117" width="1.5" height="15.0" fill="rgb(250,179,40)" rx="2" ry="2" />
<text  x="1102.76" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (2 samples, 0.08%)</title><rect x="754.7" y="165" width="1.0" height="15.0" fill="rgb(237,210,29)" rx="2" ry="2" />
<text  x="757.69" y="175.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.04%)</title><rect x="11.0" y="437" width="0.5" height="15.0" fill="rgb(238,62,38)" rx="2" ry="2" />
<text  x="13.99" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="1139.9" y="197" width="0.5" height="15.0" fill="rgb(235,77,22)" rx="2" ry="2" />
<text  x="1142.92" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="1136.0" y="245" width="0.5" height="15.0" fill="rgb(237,64,16)" rx="2" ry="2" />
<text  x="1138.96" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="824.1" y="85" width="0.5" height="15.0" fill="rgb(228,9,53)" rx="2" ry="2" />
<text  x="827.10" y="95.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1081.4" y="181" width="1.0" height="15.0" fill="rgb(205,64,23)" rx="2" ry="2" />
<text  x="1084.42" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (5 samples, 0.21%)</title><rect x="1067.5" y="101" width="2.5" height="15.0" fill="rgb(215,93,15)" rx="2" ry="2" />
<text  x="1070.54" y="111.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="437.9" y="245" width="0.5" height="15.0" fill="rgb(244,172,10)" rx="2" ry="2" />
<text  x="440.87" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="1156.8" y="245" width="0.5" height="15.0" fill="rgb(206,54,53)" rx="2" ry="2" />
<text  x="1159.78" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="740.8" y="165" width="0.5" height="15.0" fill="rgb(229,92,9)" rx="2" ry="2" />
<text  x="743.81" y="175.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (1 samples, 0.04%)</title><rect x="1146.9" y="197" width="0.5" height="15.0" fill="rgb(217,48,0)" rx="2" ry="2" />
<text  x="1149.87" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (2 samples, 0.08%)</title><rect x="1069.0" y="69" width="1.0" height="15.0" fill="rgb(221,46,31)" rx="2" ry="2" />
<text  x="1072.03" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="1129.5" y="181" width="0.5" height="15.0" fill="rgb(229,97,53)" rx="2" ry="2" />
<text  x="1132.51" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="698.2" y="213" width="0.5" height="15.0" fill="rgb(230,189,21)" rx="2" ry="2" />
<text  x="701.17" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (2 samples, 0.08%)</title><rect x="866.7" y="117" width="1.0" height="15.0" fill="rgb(244,129,48)" rx="2" ry="2" />
<text  x="869.74" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (1 samples, 0.04%)</title><rect x="1121.1" y="181" width="0.5" height="15.0" fill="rgb(250,6,15)" rx="2" ry="2" />
<text  x="1124.08" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.25%)</title><rect x="681.3" y="165" width="3.0" height="15.0" fill="rgb(230,203,21)" rx="2" ry="2" />
<text  x="684.31" y="175.5" ></text>
</g>
<g >
<title>merge (145 samples, 6.09%)</title><rect x="438.4" y="373" width="71.9" height="15.0" fill="rgb(229,65,17)" rx="2" ry="2" />
<text  x="441.37" y="383.5" >merge</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="751.2" y="165" width="1.0" height="15.0" fill="rgb(209,109,14)" rx="2" ry="2" />
<text  x="754.22" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="669.4" y="229" width="0.5" height="15.0" fill="rgb(244,28,45)" rx="2" ry="2" />
<text  x="672.41" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="1107.2" y="213" width="0.5" height="15.0" fill="rgb(247,65,22)" rx="2" ry="2" />
<text  x="1110.20" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (7 samples, 0.29%)</title><rect x="981.3" y="101" width="3.4" height="15.0" fill="rgb(208,10,32)" rx="2" ry="2" />
<text  x="984.27" y="111.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="1048.2" y="101" width="0.5" height="15.0" fill="rgb(254,112,6)" rx="2" ry="2" />
<text  x="1051.20" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (2 samples, 0.08%)</title><rect x="754.7" y="149" width="1.0" height="15.0" fill="rgb(248,64,20)" rx="2" ry="2" />
<text  x="757.69" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="615.9" y="261" width="0.5" height="15.0" fill="rgb(250,93,6)" rx="2" ry="2" />
<text  x="618.87" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="512.7" y="325" width="1.0" height="15.0" fill="rgb(238,204,9)" rx="2" ry="2" />
<text  x="515.74" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="948.1" y="133" width="0.4" height="15.0" fill="rgb(238,218,36)" rx="2" ry="2" />
<text  x="951.05" y="143.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (254 samples, 10.67%)</title><rect x="309.0" y="341" width="125.9" height="15.0" fill="rgb(212,228,11)" rx="2" ry="2" />
<text  x="311.97" y="351.5" >std::move&lt;__gnu..</text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.08%)</title><rect x="23.9" y="437" width="1.0" height="15.0" fill="rgb(209,203,52)" rx="2" ry="2" />
<text  x="26.88" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (528 samples, 22.18%)</title><rect x="33.8" y="389" width="261.8" height="15.0" fill="rgb(207,201,12)" rx="2" ry="2" />
<text  x="36.80" y="399.5" >std::vector&lt;int, std::allocator&lt;in..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (3 samples, 0.13%)</title><rect x="830.5" y="149" width="1.5" height="15.0" fill="rgb(230,51,17)" rx="2" ry="2" />
<text  x="833.55" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1146.4" y="213" width="0.5" height="15.0" fill="rgb(254,113,22)" rx="2" ry="2" />
<text  x="1149.37" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1156.8" y="293" width="0.5" height="15.0" fill="rgb(216,189,18)" rx="2" ry="2" />
<text  x="1159.78" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (1 samples, 0.04%)</title><rect x="1090.8" y="133" width="0.5" height="15.0" fill="rgb(215,16,25)" rx="2" ry="2" />
<text  x="1093.84" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (2 samples, 0.08%)</title><rect x="1130.0" y="197" width="1.0" height="15.0" fill="rgb(219,195,40)" rx="2" ry="2" />
<text  x="1133.01" y="207.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="1167.7" y="341" width="0.5" height="15.0" fill="rgb(217,100,35)" rx="2" ry="2" />
<text  x="1170.69" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (2 samples, 0.08%)</title><rect x="1009.0" y="85" width="1.0" height="15.0" fill="rgb(215,118,0)" rx="2" ry="2" />
<text  x="1012.03" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (3 samples, 0.13%)</title><rect x="665.4" y="261" width="1.5" height="15.0" fill="rgb(234,112,20)" rx="2" ry="2" />
<text  x="668.45" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1164.7" y="341" width="0.5" height="15.0" fill="rgb(247,45,7)" rx="2" ry="2" />
<text  x="1167.71" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="1086.9" y="165" width="0.5" height="15.0" fill="rgb(232,126,43)" rx="2" ry="2" />
<text  x="1089.87" y="175.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 1.81%)</title><rect x="10.0" y="453" width="21.3" height="15.0" fill="rgb(249,198,3)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >[..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="552.9" y="309" width="0.5" height="15.0" fill="rgb(238,60,33)" rx="2" ry="2" />
<text  x="555.90" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.08%)</title><rect x="509.3" y="357" width="1.0" height="15.0" fill="rgb(206,167,21)" rx="2" ry="2" />
<text  x="512.27" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="437.9" y="357" width="0.5" height="15.0" fill="rgb(236,33,34)" rx="2" ry="2" />
<text  x="440.87" y="367.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="937.1" y="69" width="0.5" height="15.0" fill="rgb(244,27,38)" rx="2" ry="2" />
<text  x="940.14" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="1034.8" y="165" width="0.5" height="15.0" fill="rgb(246,136,22)" rx="2" ry="2" />
<text  x="1037.82" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (1 samples, 0.04%)</title><rect x="817.2" y="101" width="0.5" height="15.0" fill="rgb(213,160,53)" rx="2" ry="2" />
<text  x="820.16" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="687.8" y="149" width="0.5" height="15.0" fill="rgb(237,119,35)" rx="2" ry="2" />
<text  x="690.76" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="1090.8" y="149" width="0.5" height="15.0" fill="rgb(239,148,54)" rx="2" ry="2" />
<text  x="1093.84" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (8 samples, 0.34%)</title><rect x="923.3" y="117" width="3.9" height="15.0" fill="rgb(237,121,9)" rx="2" ry="2" />
<text  x="926.26" y="127.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (1 samples, 0.04%)</title><rect x="1121.6" y="117" width="0.5" height="15.0" fill="rgb(211,206,25)" rx="2" ry="2" />
<text  x="1124.58" y="127.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (44 samples, 1.85%)</title><rect x="518.2" y="261" width="21.8" height="15.0" fill="rgb(235,111,41)" rx="2" ry="2" />
<text  x="521.19" y="271.5" >_..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="1151.3" y="229" width="0.5" height="15.0" fill="rgb(254,151,16)" rx="2" ry="2" />
<text  x="1154.33" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="596.5" y="261" width="0.5" height="15.0" fill="rgb(249,157,52)" rx="2" ry="2" />
<text  x="599.53" y="271.5" ></text>
</g>
<g >
<title>merge (44 samples, 1.85%)</title><rect x="871.7" y="149" width="21.8" height="15.0" fill="rgb(228,223,5)" rx="2" ry="2" />
<text  x="874.70" y="159.5" >m..</text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (1 samples, 0.04%)</title><rect x="803.8" y="101" width="0.5" height="15.0" fill="rgb(219,21,20)" rx="2" ry="2" />
<text  x="806.77" y="111.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (12 samples, 0.50%)</title><rect x="656.0" y="213" width="6.0" height="15.0" fill="rgb(210,115,11)" rx="2" ry="2" />
<text  x="659.03" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (514 samples, 21.60%)</title><rect x="37.8" y="309" width="254.8" height="15.0" fill="rgb(254,172,39)" rx="2" ry="2" />
<text  x="40.76" y="319.5" >__memmove_avx_unaligned_erms</text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="24.9" y="421" width="0.5" height="15.0" fill="rgb(226,45,23)" rx="2" ry="2" />
<text  x="27.87" y="431.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (2 samples, 0.08%)</title><rect x="29.8" y="405" width="1.0" height="15.0" fill="rgb(239,169,26)" rx="2" ry="2" />
<text  x="32.83" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="1028.9" y="181" width="0.5" height="15.0" fill="rgb(251,215,8)" rx="2" ry="2" />
<text  x="1031.87" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.13%)</title><rect x="1006.6" y="53" width="1.4" height="15.0" fill="rgb(227,145,39)" rx="2" ry="2" />
<text  x="1009.55" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="302.0" y="357" width="1.0" height="15.0" fill="rgb(240,201,16)" rx="2" ry="2" />
<text  x="305.03" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="816.2" y="133" width="0.5" height="15.0" fill="rgb(232,198,14)" rx="2" ry="2" />
<text  x="819.17" y="143.5" ></text>
</g>
<g >
<title>std::__numpunct_cache&lt;char&gt;::~__numpunct_cache (3 samples, 0.13%)</title><rect x="22.4" y="437" width="1.5" height="15.0" fill="rgb(215,122,19)" rx="2" ry="2" />
<text  x="25.39" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="1104.2" y="165" width="0.5" height="15.0" fill="rgb(218,41,0)" rx="2" ry="2" />
<text  x="1107.23" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="665.9" y="245" width="1.0" height="15.0" fill="rgb(208,171,2)" rx="2" ry="2" />
<text  x="668.94" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1161.7" y="293" width="0.5" height="15.0" fill="rgb(222,110,3)" rx="2" ry="2" />
<text  x="1164.74" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="637.2" y="245" width="1.0" height="15.0" fill="rgb(229,130,2)" rx="2" ry="2" />
<text  x="640.18" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (1 samples, 0.04%)</title><rect x="434.9" y="357" width="0.5" height="15.0" fill="rgb(239,4,15)" rx="2" ry="2" />
<text  x="437.90" y="367.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2 samples, 0.08%)</title><rect x="28.3" y="389" width="1.0" height="15.0" fill="rgb(227,228,23)" rx="2" ry="2" />
<text  x="31.34" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="917.3" y="117" width="0.5" height="15.0" fill="rgb(241,146,32)" rx="2" ry="2" />
<text  x="920.31" y="127.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (1 samples, 0.04%)</title><rect x="1187.0" y="277" width="0.5" height="15.0" fill="rgb(211,116,52)" rx="2" ry="2" />
<text  x="1190.03" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="514.2" y="309" width="0.5" height="15.0" fill="rgb(219,175,0)" rx="2" ry="2" />
<text  x="517.23" y="319.5" ></text>
</g>
<g >
<title>main (2,301 samples, 96.68%)</title><rect x="31.3" y="437" width="1140.9" height="15.0" fill="rgb(239,28,17)" rx="2" ry="2" />
<text  x="34.32" y="447.5" >main</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (2 samples, 0.08%)</title><rect x="916.3" y="101" width="1.0" height="15.0" fill="rgb(210,11,29)" rx="2" ry="2" />
<text  x="919.32" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="932.2" y="133" width="0.5" height="15.0" fill="rgb(249,89,46)" rx="2" ry="2" />
<text  x="935.18" y="143.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="436.9" y="325" width="0.5" height="15.0" fill="rgb(210,94,45)" rx="2" ry="2" />
<text  x="439.88" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (3 samples, 0.13%)</title><rect x="756.7" y="165" width="1.5" height="15.0" fill="rgb(232,147,19)" rx="2" ry="2" />
<text  x="759.67" y="175.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1 samples, 0.04%)</title><rect x="1121.6" y="149" width="0.5" height="15.0" fill="rgb(246,96,15)" rx="2" ry="2" />
<text  x="1124.58" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (3 samples, 0.13%)</title><rect x="598.0" y="309" width="1.5" height="15.0" fill="rgb(248,107,11)" rx="2" ry="2" />
<text  x="601.02" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (1 samples, 0.04%)</title><rect x="966.9" y="133" width="0.5" height="15.0" fill="rgb(226,170,53)" rx="2" ry="2" />
<text  x="969.89" y="143.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (4 samples, 0.17%)</title><rect x="1099.8" y="133" width="1.9" height="15.0" fill="rgb(228,126,28)" rx="2" ry="2" />
<text  x="1102.76" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (6 samples, 0.25%)</title><rect x="886.6" y="85" width="2.9" height="15.0" fill="rgb(211,87,46)" rx="2" ry="2" />
<text  x="889.57" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="910.9" y="149" width="0.5" height="15.0" fill="rgb(236,137,25)" rx="2" ry="2" />
<text  x="913.87" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (1 samples, 0.04%)</title><rect x="931.7" y="101" width="0.5" height="15.0" fill="rgb(215,91,17)" rx="2" ry="2" />
<text  x="934.69" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (1 samples, 0.04%)</title><rect x="1123.6" y="197" width="0.5" height="15.0" fill="rgb(218,139,23)" rx="2" ry="2" />
<text  x="1126.56" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="876.2" y="101" width="0.5" height="15.0" fill="rgb(222,106,52)" rx="2" ry="2" />
<text  x="879.16" y="111.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1 samples, 0.04%)</title><rect x="946.1" y="133" width="0.5" height="15.0" fill="rgb(214,152,42)" rx="2" ry="2" />
<text  x="949.07" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (43 samples, 1.81%)</title><rect x="669.9" y="245" width="21.3" height="15.0" fill="rgb(242,1,52)" rx="2" ry="2" />
<text  x="672.91" y="255.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (3 samples, 0.13%)</title><rect x="647.1" y="245" width="1.5" height="15.0" fill="rgb(222,165,53)" rx="2" ry="2" />
<text  x="650.10" y="255.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (2 samples, 0.08%)</title><rect x="1055.6" y="101" width="1.0" height="15.0" fill="rgb(254,53,33)" rx="2" ry="2" />
<text  x="1058.64" y="111.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (2 samples, 0.08%)</title><rect x="1017.0" y="133" width="1.0" height="15.0" fill="rgb(232,105,22)" rx="2" ry="2" />
<text  x="1019.97" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (1 samples, 0.04%)</title><rect x="971.4" y="101" width="0.4" height="15.0" fill="rgb(212,135,25)" rx="2" ry="2" />
<text  x="974.35" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="1110.2" y="165" width="0.5" height="15.0" fill="rgb(219,56,42)" rx="2" ry="2" />
<text  x="1113.18" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="845.4" y="117" width="0.5" height="15.0" fill="rgb(250,65,16)" rx="2" ry="2" />
<text  x="848.42" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (1 samples, 0.04%)</title><rect x="922.8" y="117" width="0.5" height="15.0" fill="rgb(213,167,4)" rx="2" ry="2" />
<text  x="925.76" y="127.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2 samples, 0.08%)</title><rect x="820.1" y="85" width="1.0" height="15.0" fill="rgb(252,83,28)" rx="2" ry="2" />
<text  x="823.13" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (4 samples, 0.17%)</title><rect x="915.3" y="117" width="2.0" height="15.0" fill="rgb(251,192,36)" rx="2" ry="2" />
<text  x="918.33" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (1 samples, 0.04%)</title><rect x="1151.3" y="245" width="0.5" height="15.0" fill="rgb(231,48,19)" rx="2" ry="2" />
<text  x="1154.33" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="714.0" y="213" width="0.5" height="15.0" fill="rgb(236,78,11)" rx="2" ry="2" />
<text  x="717.03" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="692.7" y="229" width="0.5" height="15.0" fill="rgb(246,64,25)" rx="2" ry="2" />
<text  x="695.71" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="754.2" y="149" width="0.5" height="15.0" fill="rgb(245,149,25)" rx="2" ry="2" />
<text  x="757.19" y="159.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.04%)</title><rect x="1186.5" y="453" width="0.5" height="15.0" fill="rgb(235,134,25)" rx="2" ry="2" />
<text  x="1189.53" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (3 samples, 0.13%)</title><rect x="553.4" y="309" width="1.5" height="15.0" fill="rgb(253,102,54)" rx="2" ry="2" />
<text  x="556.39" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="554.9" y="309" width="1.0" height="15.0" fill="rgb(211,122,4)" rx="2" ry="2" />
<text  x="557.88" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="729.9" y="133" width="0.5" height="15.0" fill="rgb(252,140,11)" rx="2" ry="2" />
<text  x="732.90" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="608.4" y="261" width="1.0" height="15.0" fill="rgb(249,213,16)" rx="2" ry="2" />
<text  x="611.43" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (1 samples, 0.04%)</title><rect x="558.4" y="261" width="0.4" height="15.0" fill="rgb(211,65,42)" rx="2" ry="2" />
<text  x="561.35" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (69 samples, 2.90%)</title><rect x="510.8" y="341" width="34.2" height="15.0" fill="rgb(205,93,6)" rx="2" ry="2" />
<text  x="513.76" y="351.5" >st..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (1 samples, 0.04%)</title><rect x="638.2" y="261" width="0.5" height="15.0" fill="rgb(205,153,23)" rx="2" ry="2" />
<text  x="641.18" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (9 samples, 0.38%)</title><rect x="725.9" y="165" width="4.5" height="15.0" fill="rgb(221,152,37)" rx="2" ry="2" />
<text  x="728.93" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (5 samples, 0.21%)</title><rect x="579.2" y="309" width="2.5" height="15.0" fill="rgb(232,176,40)" rx="2" ry="2" />
<text  x="582.18" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1140.4" y="213" width="0.5" height="15.0" fill="rgb(229,37,15)" rx="2" ry="2" />
<text  x="1143.42" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="688.7" y="197" width="0.5" height="15.0" fill="rgb(226,102,0)" rx="2" ry="2" />
<text  x="691.75" y="207.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (7 samples, 0.29%)</title><rect x="1067.5" y="117" width="3.5" height="15.0" fill="rgb(217,83,10)" rx="2" ry="2" />
<text  x="1070.54" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1081.4" y="165" width="1.0" height="15.0" fill="rgb(220,46,36)" rx="2" ry="2" />
<text  x="1084.42" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (2 samples, 0.08%)</title><rect x="1042.3" y="133" width="0.9" height="15.0" fill="rgb(216,142,36)" rx="2" ry="2" />
<text  x="1045.25" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="701.1" y="197" width="1.0" height="15.0" fill="rgb(214,25,18)" rx="2" ry="2" />
<text  x="704.14" y="207.5" ></text>
</g>
<g >
<title>merge (53 samples, 2.23%)</title><rect x="666.9" y="261" width="26.3" height="15.0" fill="rgb(237,47,25)" rx="2" ry="2" />
<text  x="669.93" y="271.5" >m..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="293.6" y="309" width="0.5" height="15.0" fill="rgb(253,187,36)" rx="2" ry="2" />
<text  x="296.60" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="748.7" y="181" width="0.5" height="15.0" fill="rgb(232,90,9)" rx="2" ry="2" />
<text  x="751.74" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="1061.6" y="149" width="0.5" height="15.0" fill="rgb(247,169,10)" rx="2" ry="2" />
<text  x="1064.59" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="1152.3" y="261" width="1.5" height="15.0" fill="rgb(216,89,37)" rx="2" ry="2" />
<text  x="1155.32" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_nothrow_relocate (2 samples, 0.08%)</title><rect x="1141.4" y="213" width="1.0" height="15.0" fill="rgb(214,63,23)" rx="2" ry="2" />
<text  x="1144.41" y="223.5" ></text>
</g>
<g >
<title>perf (6 samples, 0.25%)</title><rect x="1187.0" y="469" width="3.0" height="15.0" fill="rgb(219,10,48)" rx="2" ry="2" />
<text  x="1190.03" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.13%)</title><rect x="516.2" y="309" width="1.5" height="15.0" fill="rgb(212,2,0)" rx="2" ry="2" />
<text  x="519.21" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (1 samples, 0.04%)</title><rect x="1135.5" y="197" width="0.5" height="15.0" fill="rgb(209,15,19)" rx="2" ry="2" />
<text  x="1138.46" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (1 samples, 0.04%)</title><rect x="655.5" y="229" width="0.5" height="15.0" fill="rgb(205,17,32)" rx="2" ry="2" />
<text  x="658.53" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="991.7" y="149" width="0.5" height="15.0" fill="rgb(246,163,29)" rx="2" ry="2" />
<text  x="994.68" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="825.6" y="149" width="0.5" height="15.0" fill="rgb(214,221,19)" rx="2" ry="2" />
<text  x="828.59" y="159.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1 samples, 0.04%)</title><rect x="293.6" y="325" width="0.5" height="15.0" fill="rgb(206,120,11)" rx="2" ry="2" />
<text  x="296.60" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (33 samples, 1.39%)</title><rect x="1081.4" y="197" width="16.4" height="15.0" fill="rgb(243,160,18)" rx="2" ry="2" />
<text  x="1084.42" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="782.0" y="133" width="0.5" height="15.0" fill="rgb(248,1,4)" rx="2" ry="2" />
<text  x="784.96" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="739.8" y="197" width="0.5" height="15.0" fill="rgb(224,185,26)" rx="2" ry="2" />
<text  x="742.82" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (1 samples, 0.04%)</title><rect x="1140.9" y="213" width="0.5" height="15.0" fill="rgb(226,47,19)" rx="2" ry="2" />
<text  x="1143.92" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="1150.8" y="229" width="0.5" height="15.0" fill="rgb(221,9,28)" rx="2" ry="2" />
<text  x="1153.83" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="1135.5" y="213" width="0.5" height="15.0" fill="rgb(246,173,36)" rx="2" ry="2" />
<text  x="1138.46" y="223.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.04%)</title><rect x="10.5" y="421" width="0.5" height="15.0" fill="rgb(217,136,9)" rx="2" ry="2" />
<text  x="13.50" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (2 samples, 0.08%)</title><rect x="816.7" y="117" width="1.0" height="15.0" fill="rgb(235,217,21)" rx="2" ry="2" />
<text  x="819.66" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="1156.8" y="261" width="0.5" height="15.0" fill="rgb(222,148,46)" rx="2" ry="2" />
<text  x="1159.78" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (4 samples, 0.17%)</title><rect x="1162.7" y="341" width="2.0" height="15.0" fill="rgb(211,114,34)" rx="2" ry="2" />
<text  x="1165.73" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (7 samples, 0.29%)</title><rect x="907.4" y="101" width="3.5" height="15.0" fill="rgb(242,49,13)" rx="2" ry="2" />
<text  x="910.39" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (3 samples, 0.13%)</title><rect x="636.7" y="261" width="1.5" height="15.0" fill="rgb(224,192,9)" rx="2" ry="2" />
<text  x="639.69" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="1110.7" y="181" width="0.5" height="15.0" fill="rgb(227,176,22)" rx="2" ry="2" />
<text  x="1113.67" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (1 samples, 0.04%)</title><rect x="853.8" y="85" width="0.5" height="15.0" fill="rgb(213,134,47)" rx="2" ry="2" />
<text  x="856.85" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="21.9" y="437" width="0.5" height="15.0" fill="rgb(227,173,15)" rx="2" ry="2" />
<text  x="24.90" y="447.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (2 samples, 0.08%)</title><rect x="1128.5" y="181" width="1.0" height="15.0" fill="rgb(226,32,2)" rx="2" ry="2" />
<text  x="1131.52" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_execve (6 samples, 0.25%)</title><rect x="1187.0" y="405" width="3.0" height="15.0" fill="rgb(214,143,32)" rx="2" ry="2" />
<text  x="1190.03" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.04%)</title><rect x="1098.8" y="165" width="0.5" height="15.0" fill="rgb(224,151,26)" rx="2" ry="2" />
<text  x="1101.77" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="728.4" y="133" width="0.5" height="15.0" fill="rgb(211,12,41)" rx="2" ry="2" />
<text  x="731.41" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (2 samples, 0.08%)</title><rect x="1165.2" y="373" width="1.0" height="15.0" fill="rgb(219,148,2)" rx="2" ry="2" />
<text  x="1168.21" y="383.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.25%)</title><rect x="1187.0" y="453" width="3.0" height="15.0" fill="rgb(241,209,16)" rx="2" ry="2" />
<text  x="1190.03" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (11 samples, 0.46%)</title><rect x="858.3" y="117" width="5.5" height="15.0" fill="rgb(249,148,42)" rx="2" ry="2" />
<text  x="861.31" y="127.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (4 samples, 0.17%)</title><rect x="982.8" y="85" width="1.9" height="15.0" fill="rgb(222,151,39)" rx="2" ry="2" />
<text  x="985.76" y="95.5" ></text>
</g>
<g >
<title>malloc (24 samples, 1.01%)</title><rect x="1174.1" y="453" width="11.9" height="15.0" fill="rgb(219,174,53)" rx="2" ry="2" />
<text  x="1177.13" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (2 samples, 0.08%)</title><rect x="852.4" y="117" width="1.0" height="15.0" fill="rgb(212,20,24)" rx="2" ry="2" />
<text  x="855.36" y="127.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (1 samples, 0.04%)</title><rect x="905.4" y="69" width="0.5" height="15.0" fill="rgb(220,135,24)" rx="2" ry="2" />
<text  x="908.41" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="832.0" y="149" width="0.5" height="15.0" fill="rgb(249,154,32)" rx="2" ry="2" />
<text  x="835.03" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="867.2" y="101" width="0.5" height="15.0" fill="rgb(242,210,39)" rx="2" ry="2" />
<text  x="870.24" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (18 samples, 0.76%)</title><rect x="1109.7" y="197" width="8.9" height="15.0" fill="rgb(245,18,19)" rx="2" ry="2" />
<text  x="1112.68" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.04%)</title><rect x="893.0" y="101" width="0.5" height="15.0" fill="rgb(210,27,18)" rx="2" ry="2" />
<text  x="896.02" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (8 samples, 0.34%)</title><rect x="1054.2" y="133" width="3.9" height="15.0" fill="rgb(236,225,39)" rx="2" ry="2" />
<text  x="1057.15" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (2 samples, 0.08%)</title><rect x="720.0" y="213" width="1.0" height="15.0" fill="rgb(218,138,26)" rx="2" ry="2" />
<text  x="722.98" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="437.9" y="261" width="0.5" height="15.0" fill="rgb(223,120,54)" rx="2" ry="2" />
<text  x="440.87" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="295.6" y="373" width="1.5" height="15.0" fill="rgb(212,3,24)" rx="2" ry="2" />
<text  x="298.58" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1 samples, 0.04%)</title><rect x="1170.2" y="405" width="0.5" height="15.0" fill="rgb(244,96,25)" rx="2" ry="2" />
<text  x="1173.17" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="695.7" y="213" width="1.0" height="15.0" fill="rgb(209,105,32)" rx="2" ry="2" />
<text  x="698.69" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="10.0" y="421" width="0.5" height="15.0" fill="rgb(223,18,33)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="615.4" y="213" width="0.5" height="15.0" fill="rgb(250,155,3)" rx="2" ry="2" />
<text  x="618.37" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (1 samples, 0.04%)</title><rect x="690.7" y="229" width="0.5" height="15.0" fill="rgb(217,207,50)" rx="2" ry="2" />
<text  x="693.73" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="880.6" y="101" width="0.5" height="15.0" fill="rgb(247,67,53)" rx="2" ry="2" />
<text  x="883.62" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="991.2" y="133" width="0.5" height="15.0" fill="rgb(220,158,17)" rx="2" ry="2" />
<text  x="994.18" y="143.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (2 samples, 0.08%)</title><rect x="658.5" y="181" width="1.0" height="15.0" fill="rgb(243,37,7)" rx="2" ry="2" />
<text  x="661.50" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="662.5" y="229" width="0.5" height="15.0" fill="rgb(227,125,26)" rx="2" ry="2" />
<text  x="665.47" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (1 samples, 0.04%)</title><rect x="1160.3" y="325" width="0.4" height="15.0" fill="rgb(205,84,43)" rx="2" ry="2" />
<text  x="1163.25" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (252 samples, 10.59%)</title><rect x="309.0" y="309" width="124.9" height="15.0" fill="rgb(216,25,6)" rx="2" ry="2" />
<text  x="311.97" y="319.5" >std::__copy_mov..</text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="21.9" y="165" width="0.5" height="15.0" fill="rgb(249,3,5)" rx="2" ry="2" />
<text  x="24.90" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (11 samples, 0.46%)</title><rect x="951.5" y="133" width="5.5" height="15.0" fill="rgb(239,49,29)" rx="2" ry="2" />
<text  x="954.52" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (7 samples, 0.29%)</title><rect x="886.1" y="101" width="3.4" height="15.0" fill="rgb(232,127,22)" rx="2" ry="2" />
<text  x="889.08" y="111.5" ></text>
</g>
<g >
<title>std::__do_alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (1 samples, 0.04%)</title><rect x="1032.8" y="133" width="0.5" height="15.0" fill="rgb(217,23,40)" rx="2" ry="2" />
<text  x="1035.83" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="1034.3" y="181" width="0.5" height="15.0" fill="rgb(249,3,20)" rx="2" ry="2" />
<text  x="1037.32" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (3 samples, 0.13%)</title><rect x="950.0" y="133" width="1.5" height="15.0" fill="rgb(219,24,30)" rx="2" ry="2" />
<text  x="953.03" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (1 samples, 0.04%)</title><rect x="828.6" y="165" width="0.5" height="15.0" fill="rgb(219,210,46)" rx="2" ry="2" />
<text  x="831.56" y="175.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="857.8" y="117" width="0.5" height="15.0" fill="rgb(239,125,16)" rx="2" ry="2" />
<text  x="860.82" y="127.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::~num_put (8 samples, 0.34%)</title><rect x="25.9" y="437" width="3.9" height="15.0" fill="rgb(249,91,0)" rx="2" ry="2" />
<text  x="28.87" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="736.3" y="165" width="0.5" height="15.0" fill="rgb(247,167,31)" rx="2" ry="2" />
<text  x="739.34" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="736.3" y="181" width="0.5" height="15.0" fill="rgb(239,204,31)" rx="2" ry="2" />
<text  x="739.34" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (1 samples, 0.04%)</title><rect x="1105.7" y="165" width="0.5" height="15.0" fill="rgb(250,63,36)" rx="2" ry="2" />
<text  x="1108.71" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (2 samples, 0.08%)</title><rect x="584.6" y="245" width="1.0" height="15.0" fill="rgb(230,131,5)" rx="2" ry="2" />
<text  x="587.63" y="255.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1 samples, 0.04%)</title><rect x="707.6" y="181" width="0.5" height="15.0" fill="rgb(254,191,43)" rx="2" ry="2" />
<text  x="710.59" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (1 samples, 0.04%)</title><rect x="899.5" y="117" width="0.5" height="15.0" fill="rgb(226,41,4)" rx="2" ry="2" />
<text  x="902.46" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="868.2" y="133" width="0.5" height="15.0" fill="rgb(225,71,41)" rx="2" ry="2" />
<text  x="871.23" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (45 samples, 1.89%)</title><rect x="992.2" y="165" width="22.3" height="15.0" fill="rgb(246,105,18)" rx="2" ry="2" />
<text  x="995.18" y="175.5" >s..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (3 samples, 0.13%)</title><rect x="1079.9" y="181" width="1.5" height="15.0" fill="rgb(230,120,2)" rx="2" ry="2" />
<text  x="1082.93" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="861.8" y="69" width="0.5" height="15.0" fill="rgb(211,1,0)" rx="2" ry="2" />
<text  x="864.78" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (2 samples, 0.08%)</title><rect x="819.1" y="101" width="1.0" height="15.0" fill="rgb(210,98,24)" rx="2" ry="2" />
<text  x="822.14" y="111.5" ></text>
</g>
<g >
<title>clear_user (1 samples, 0.04%)</title><rect x="21.9" y="341" width="0.5" height="15.0" fill="rgb(238,100,43)" rx="2" ry="2" />
<text  x="24.90" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="772.5" y="101" width="0.5" height="15.0" fill="rgb(228,126,45)" rx="2" ry="2" />
<text  x="775.54" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (41 samples, 1.72%)</title><rect x="928.2" y="149" width="20.3" height="15.0" fill="rgb(246,111,11)" rx="2" ry="2" />
<text  x="931.22" y="159.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="980.3" y="101" width="0.5" height="15.0" fill="rgb(246,101,53)" rx="2" ry="2" />
<text  x="983.28" y="111.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (2 samples, 0.08%)</title><rect x="891.5" y="53" width="1.0" height="15.0" fill="rgb(250,47,10)" rx="2" ry="2" />
<text  x="894.53" y="63.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="1098.8" y="181" width="0.5" height="15.0" fill="rgb(213,164,18)" rx="2" ry="2" />
<text  x="1101.77" y="191.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="1008.5" y="69" width="0.5" height="15.0" fill="rgb(206,90,32)" rx="2" ry="2" />
<text  x="1011.54" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (2 samples, 0.08%)</title><rect x="764.1" y="181" width="1.0" height="15.0" fill="rgb(229,192,44)" rx="2" ry="2" />
<text  x="767.11" y="191.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (2 samples, 0.08%)</title><rect x="824.1" y="101" width="1.0" height="15.0" fill="rgb(251,224,53)" rx="2" ry="2" />
<text  x="827.10" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="633.2" y="197" width="0.5" height="15.0" fill="rgb(223,119,37)" rx="2" ry="2" />
<text  x="636.22" y="207.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="999.6" y="85" width="0.5" height="15.0" fill="rgb(220,46,53)" rx="2" ry="2" />
<text  x="1002.61" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="447.3" y="325" width="0.5" height="15.0" fill="rgb(213,157,24)" rx="2" ry="2" />
<text  x="450.29" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="654.5" y="229" width="1.0" height="15.0" fill="rgb(225,180,53)" rx="2" ry="2" />
<text  x="657.54" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (1 samples, 0.04%)</title><rect x="978.3" y="101" width="0.5" height="15.0" fill="rgb(230,33,35)" rx="2" ry="2" />
<text  x="981.29" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="856.3" y="101" width="0.5" height="15.0" fill="rgb(213,42,9)" rx="2" ry="2" />
<text  x="859.33" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="1132.5" y="213" width="0.5" height="15.0" fill="rgb(246,45,47)" rx="2" ry="2" />
<text  x="1135.49" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="680.3" y="181" width="0.5" height="15.0" fill="rgb(251,188,7)" rx="2" ry="2" />
<text  x="683.32" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (8 samples, 0.34%)</title><rect x="933.7" y="117" width="3.9" height="15.0" fill="rgb(209,54,19)" rx="2" ry="2" />
<text  x="936.67" y="127.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="688.3" y="197" width="0.4" height="15.0" fill="rgb(231,30,10)" rx="2" ry="2" />
<text  x="691.25" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="642.1" y="277" width="0.5" height="15.0" fill="rgb(214,137,1)" rx="2" ry="2" />
<text  x="645.14" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (17 samples, 0.71%)</title><rect x="585.6" y="245" width="8.5" height="15.0" fill="rgb(218,200,4)" rx="2" ry="2" />
<text  x="588.62" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="815.7" y="133" width="0.5" height="15.0" fill="rgb(211,16,5)" rx="2" ry="2" />
<text  x="818.67" y="143.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1165.7" y="341" width="0.5" height="15.0" fill="rgb(231,170,2)" rx="2" ry="2" />
<text  x="1168.71" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (10 samples, 0.42%)</title><rect x="610.9" y="245" width="5.0" height="15.0" fill="rgb(219,151,52)" rx="2" ry="2" />
<text  x="613.91" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (2 samples, 0.08%)</title><rect x="894.5" y="117" width="1.0" height="15.0" fill="rgb(207,20,51)" rx="2" ry="2" />
<text  x="897.50" y="127.5" ></text>
</g>
<g >
<title>merge (39 samples, 1.64%)</title><rect x="718.0" y="229" width="19.3" height="15.0" fill="rgb(245,77,10)" rx="2" ry="2" />
<text  x="721.00" y="239.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (521 samples, 21.89%)</title><rect x="36.3" y="357" width="258.3" height="15.0" fill="rgb(225,84,54)" rx="2" ry="2" />
<text  x="39.28" y="367.5" >std::move&lt;__gnu_cxx::__normal_iter..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="859.8" y="85" width="0.5" height="15.0" fill="rgb(243,152,6)" rx="2" ry="2" />
<text  x="862.80" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.08%)</title><rect x="971.8" y="165" width="1.0" height="15.0" fill="rgb(216,2,29)" rx="2" ry="2" />
<text  x="974.85" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="1063.6" y="165" width="0.5" height="15.0" fill="rgb(218,25,46)" rx="2" ry="2" />
<text  x="1066.57" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (15 samples, 0.63%)</title><rect x="1021.4" y="149" width="7.5" height="15.0" fill="rgb(236,51,40)" rx="2" ry="2" />
<text  x="1024.43" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (27 samples, 1.13%)</title><rect x="832.5" y="149" width="13.4" height="15.0" fill="rgb(245,75,16)" rx="2" ry="2" />
<text  x="835.53" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (3 samples, 0.13%)</title><rect x="695.2" y="229" width="1.5" height="15.0" fill="rgb(249,184,28)" rx="2" ry="2" />
<text  x="698.19" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="615.9" y="245" width="0.5" height="15.0" fill="rgb(244,203,46)" rx="2" ry="2" />
<text  x="618.87" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (10 samples, 0.42%)</title><rect x="940.6" y="101" width="5.0" height="15.0" fill="rgb(234,68,42)" rx="2" ry="2" />
<text  x="943.61" y="111.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (3 samples, 0.13%)</title><rect x="503.8" y="277" width="1.5" height="15.0" fill="rgb(244,143,29)" rx="2" ry="2" />
<text  x="506.82" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="881.1" y="101" width="0.5" height="15.0" fill="rgb(219,30,28)" rx="2" ry="2" />
<text  x="884.12" y="111.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="752.2" y="181" width="0.5" height="15.0" fill="rgb(243,141,16)" rx="2" ry="2" />
<text  x="755.21" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (4 samples, 0.17%)</title><rect x="1048.7" y="133" width="2.0" height="15.0" fill="rgb(242,209,48)" rx="2" ry="2" />
<text  x="1051.70" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="715.5" y="197" width="1.0" height="15.0" fill="rgb(233,78,27)" rx="2" ry="2" />
<text  x="718.52" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (2 samples, 0.08%)</title><rect x="959.9" y="133" width="1.0" height="15.0" fill="rgb(224,92,13)" rx="2" ry="2" />
<text  x="962.95" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (3 samples, 0.13%)</title><rect x="594.5" y="229" width="1.5" height="15.0" fill="rgb(252,223,21)" rx="2" ry="2" />
<text  x="597.55" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (1 samples, 0.04%)</title><rect x="597.5" y="293" width="0.5" height="15.0" fill="rgb(220,116,43)" rx="2" ry="2" />
<text  x="600.52" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="881.1" y="85" width="0.5" height="15.0" fill="rgb(243,29,11)" rx="2" ry="2" />
<text  x="884.12" y="95.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (7 samples, 0.29%)</title><rect x="656.0" y="197" width="3.5" height="15.0" fill="rgb(247,145,0)" rx="2" ry="2" />
<text  x="659.03" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (3 samples, 0.13%)</title><rect x="773.0" y="101" width="1.5" height="15.0" fill="rgb(216,111,42)" rx="2" ry="2" />
<text  x="776.03" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (2 samples, 0.08%)</title><rect x="1020.4" y="149" width="1.0" height="15.0" fill="rgb(249,47,47)" rx="2" ry="2" />
<text  x="1023.44" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (4 samples, 0.17%)</title><rect x="576.2" y="325" width="2.0" height="15.0" fill="rgb(243,148,54)" rx="2" ry="2" />
<text  x="579.20" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (113 samples, 4.75%)</title><rect x="449.3" y="293" width="56.0" height="15.0" fill="rgb(223,225,42)" rx="2" ry="2" />
<text  x="452.28" y="303.5" >std::..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (1 samples, 0.04%)</title><rect x="936.6" y="69" width="0.5" height="15.0" fill="rgb(222,99,29)" rx="2" ry="2" />
<text  x="939.65" y="79.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (7 samples, 0.29%)</title><rect x="684.8" y="181" width="3.5" height="15.0" fill="rgb(213,220,7)" rx="2" ry="2" />
<text  x="687.78" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="575.2" y="309" width="0.5" height="15.0" fill="rgb(249,107,32)" rx="2" ry="2" />
<text  x="578.21" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (36 samples, 1.51%)</title><rect x="973.8" y="149" width="17.9" height="15.0" fill="rgb(232,221,9)" rx="2" ry="2" />
<text  x="976.83" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="641.2" y="229" width="0.4" height="15.0" fill="rgb(214,158,46)" rx="2" ry="2" />
<text  x="644.15" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="765.6" y="165" width="0.5" height="15.0" fill="rgb(249,157,4)" rx="2" ry="2" />
<text  x="768.60" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="842.4" y="85" width="0.5" height="15.0" fill="rgb(218,193,2)" rx="2" ry="2" />
<text  x="845.45" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="841.0" y="101" width="0.9" height="15.0" fill="rgb(223,228,45)" rx="2" ry="2" />
<text  x="843.96" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (3 samples, 0.13%)</title><rect x="708.1" y="181" width="1.5" height="15.0" fill="rgb(236,175,35)" rx="2" ry="2" />
<text  x="711.08" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="943.6" y="37" width="0.5" height="15.0" fill="rgb(238,90,30)" rx="2" ry="2" />
<text  x="946.59" y="47.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.04%)</title><rect x="644.6" y="261" width="0.5" height="15.0" fill="rgb(205,7,17)" rx="2" ry="2" />
<text  x="647.62" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (3 samples, 0.13%)</title><rect x="731.4" y="197" width="1.5" height="15.0" fill="rgb(211,135,42)" rx="2" ry="2" />
<text  x="734.39" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.04%)</title><rect x="790.9" y="133" width="0.5" height="15.0" fill="rgb(220,4,35)" rx="2" ry="2" />
<text  x="793.88" y="143.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_put (1 samples, 0.04%)</title><rect x="26.4" y="405" width="0.5" height="15.0" fill="rgb(227,34,16)" rx="2" ry="2" />
<text  x="29.36" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1168.2" y="357" width="1.0" height="15.0" fill="rgb(236,106,47)" rx="2" ry="2" />
<text  x="1171.18" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1149.8" y="245" width="1.0" height="15.0" fill="rgb(236,131,52)" rx="2" ry="2" />
<text  x="1152.84" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (15 samples, 0.63%)</title><rect x="1136.5" y="245" width="7.4" height="15.0" fill="rgb(217,119,41)" rx="2" ry="2" />
<text  x="1139.45" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="844.9" y="117" width="0.5" height="15.0" fill="rgb(210,136,16)" rx="2" ry="2" />
<text  x="847.92" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (1 samples, 0.04%)</title><rect x="999.1" y="85" width="0.5" height="15.0" fill="rgb(223,139,13)" rx="2" ry="2" />
<text  x="1002.12" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (15 samples, 0.63%)</title><rect x="799.8" y="149" width="7.4" height="15.0" fill="rgb(235,94,53)" rx="2" ry="2" />
<text  x="802.81" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="505.8" y="277" width="1.0" height="15.0" fill="rgb(210,84,52)" rx="2" ry="2" />
<text  x="508.80" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1145.4" y="245" width="0.5" height="15.0" fill="rgb(235,22,46)" rx="2" ry="2" />
<text  x="1148.38" y="255.5" ></text>
</g>
<g >
<title>mergesort (970 samples, 40.76%)</title><rect x="666.9" y="277" width="481.0" height="15.0" fill="rgb(215,40,45)" rx="2" ry="2" />
<text  x="669.93" y="287.5" >mergesort</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (2 samples, 0.08%)</title><rect x="1104.7" y="165" width="1.0" height="15.0" fill="rgb(213,100,35)" rx="2" ry="2" />
<text  x="1107.72" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (3 samples, 0.13%)</title><rect x="705.6" y="149" width="1.5" height="15.0" fill="rgb(215,47,32)" rx="2" ry="2" />
<text  x="708.61" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (2 samples, 0.08%)</title><rect x="967.9" y="101" width="1.0" height="15.0" fill="rgb(231,197,0)" rx="2" ry="2" />
<text  x="970.88" y="111.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (11 samples, 0.46%)</title><rect x="771.5" y="133" width="5.5" height="15.0" fill="rgb(224,131,43)" rx="2" ry="2" />
<text  x="774.55" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1062.1" y="181" width="0.5" height="15.0" fill="rgb(240,60,41)" rx="2" ry="2" />
<text  x="1065.08" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (1 samples, 0.04%)</title><rect x="507.8" y="341" width="0.5" height="15.0" fill="rgb(242,93,47)" rx="2" ry="2" />
<text  x="510.78" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="649.6" y="229" width="0.5" height="15.0" fill="rgb(225,205,53)" rx="2" ry="2" />
<text  x="652.58" y="239.5" ></text>
</g>
<g >
<title>search_binary_handler (6 samples, 0.25%)</title><rect x="1187.0" y="373" width="3.0" height="15.0" fill="rgb(240,77,48)" rx="2" ry="2" />
<text  x="1190.03" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1035.3" y="165" width="1.0" height="15.0" fill="rgb(213,108,1)" rx="2" ry="2" />
<text  x="1038.31" y="175.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (5 samples, 0.21%)</title><rect x="774.5" y="117" width="2.5" height="15.0" fill="rgb(222,89,6)" rx="2" ry="2" />
<text  x="777.52" y="127.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (2 samples, 0.08%)</title><rect x="891.5" y="69" width="1.0" height="15.0" fill="rgb(236,1,30)" rx="2" ry="2" />
<text  x="894.53" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (5 samples, 0.21%)</title><rect x="860.3" y="85" width="2.5" height="15.0" fill="rgb(240,99,45)" rx="2" ry="2" />
<text  x="863.29" y="95.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2 samples, 0.08%)</title><rect x="1115.6" y="133" width="1.0" height="15.0" fill="rgb(235,31,49)" rx="2" ry="2" />
<text  x="1118.63" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (5 samples, 0.21%)</title><rect x="671.9" y="229" width="2.5" height="15.0" fill="rgb(220,194,47)" rx="2" ry="2" />
<text  x="674.89" y="239.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="1024.9" y="101" width="0.5" height="15.0" fill="rgb(214,126,8)" rx="2" ry="2" />
<text  x="1027.90" y="111.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="707.1" y="149" width="0.5" height="15.0" fill="rgb(237,117,53)" rx="2" ry="2" />
<text  x="710.09" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="748.2" y="165" width="0.5" height="15.0" fill="rgb(206,110,17)" rx="2" ry="2" />
<text  x="751.24" y="175.5" ></text>
</g>
<g >
<title>mergesort (4 samples, 0.17%)</title><rect x="893.5" y="149" width="2.0" height="15.0" fill="rgb(225,184,32)" rx="2" ry="2" />
<text  x="896.51" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="1145.9" y="229" width="0.5" height="15.0" fill="rgb(236,20,44)" rx="2" ry="2" />
<text  x="1148.87" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="641.6" y="229" width="0.5" height="15.0" fill="rgb(218,218,48)" rx="2" ry="2" />
<text  x="644.65" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1155.8" y="293" width="1.0" height="15.0" fill="rgb(239,207,21)" rx="2" ry="2" />
<text  x="1158.79" y="303.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (13 samples, 0.55%)</title><rect x="656.0" y="229" width="6.5" height="15.0" fill="rgb(224,108,39)" rx="2" ry="2" />
<text  x="659.03" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (4 samples, 0.17%)</title><rect x="1155.8" y="309" width="2.0" height="15.0" fill="rgb(244,7,39)" rx="2" ry="2" />
<text  x="1158.79" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3 samples, 0.13%)</title><rect x="732.9" y="213" width="1.5" height="15.0" fill="rgb(225,57,18)" rx="2" ry="2" />
<text  x="735.87" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.21%)</title><rect x="611.4" y="213" width="2.5" height="15.0" fill="rgb(221,127,21)" rx="2" ry="2" />
<text  x="614.40" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (8 samples, 0.34%)</title><rect x="1112.7" y="165" width="3.9" height="15.0" fill="rgb(211,98,26)" rx="2" ry="2" />
<text  x="1115.66" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="541.5" y="261" width="1.0" height="15.0" fill="rgb(205,38,41)" rx="2" ry="2" />
<text  x="544.50" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (6 samples, 0.25%)</title><rect x="305.5" y="341" width="3.0" height="15.0" fill="rgb(236,113,31)" rx="2" ry="2" />
<text  x="308.50" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="885.1" y="85" width="1.0" height="15.0" fill="rgb(228,14,47)" rx="2" ry="2" />
<text  x="888.08" y="95.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (107 samples, 4.50%)</title><rect x="450.8" y="277" width="53.0" height="15.0" fill="rgb(248,193,22)" rx="2" ry="2" />
<text  x="453.76" y="287.5" >__mem..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (9 samples, 0.38%)</title><rect x="858.3" y="101" width="4.5" height="15.0" fill="rgb(236,212,52)" rx="2" ry="2" />
<text  x="861.31" y="111.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (6 samples, 0.25%)</title><rect x="745.3" y="165" width="2.9" height="15.0" fill="rgb(241,153,51)" rx="2" ry="2" />
<text  x="748.27" y="175.5" ></text>
</g>
<g >
<title>do_writev (1 samples, 0.04%)</title><rect x="10.0" y="373" width="0.5" height="15.0" fill="rgb(250,108,16)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (3 samples, 0.13%)</title><rect x="569.8" y="245" width="1.4" height="15.0" fill="rgb(236,23,3)" rx="2" ry="2" />
<text  x="572.76" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="905.4" y="101" width="0.5" height="15.0" fill="rgb(209,105,33)" rx="2" ry="2" />
<text  x="908.41" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (5 samples, 0.21%)</title><rect x="1046.2" y="117" width="2.5" height="15.0" fill="rgb(251,12,15)" rx="2" ry="2" />
<text  x="1049.22" y="127.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (6 samples, 0.25%)</title><rect x="1187.0" y="389" width="3.0" height="15.0" fill="rgb(240,203,18)" rx="2" ry="2" />
<text  x="1190.03" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="811.7" y="149" width="1.0" height="15.0" fill="rgb(232,217,43)" rx="2" ry="2" />
<text  x="814.71" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (3 samples, 0.13%)</title><rect x="708.1" y="197" width="1.5" height="15.0" fill="rgb(231,79,3)" rx="2" ry="2" />
<text  x="711.08" y="207.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="614.9" y="229" width="0.5" height="15.0" fill="rgb(207,227,49)" rx="2" ry="2" />
<text  x="617.87" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (2 samples, 0.08%)</title><rect x="543.5" y="309" width="1.0" height="15.0" fill="rgb(211,58,40)" rx="2" ry="2" />
<text  x="546.48" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (3 samples, 0.13%)</title><rect x="1012.5" y="149" width="1.5" height="15.0" fill="rgb(252,159,35)" rx="2" ry="2" />
<text  x="1015.50" y="159.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (7 samples, 0.29%)</title><rect x="803.3" y="133" width="3.4" height="15.0" fill="rgb(214,156,48)" rx="2" ry="2" />
<text  x="806.28" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="875.2" y="85" width="1.0" height="15.0" fill="rgb(240,120,36)" rx="2" ry="2" />
<text  x="878.17" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (1 samples, 0.04%)</title><rect x="1123.6" y="229" width="0.5" height="15.0" fill="rgb(223,161,31)" rx="2" ry="2" />
<text  x="1126.56" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="874.2" y="101" width="0.5" height="15.0" fill="rgb(229,97,50)" rx="2" ry="2" />
<text  x="877.18" y="111.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (520 samples, 21.85%)</title><rect x="36.3" y="341" width="257.8" height="15.0" fill="rgb(212,53,0)" rx="2" ry="2" />
<text  x="39.28" y="351.5" >std::__copy_move_a2&lt;true, __gnu_cx..</text>
</g>
<g >
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="309.0" y="293" width="0.5" height="15.0" fill="rgb(227,73,0)" rx="2" ry="2" />
<text  x="311.97" y="303.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="1101.3" y="117" width="0.4" height="15.0" fill="rgb(212,154,18)" rx="2" ry="2" />
<text  x="1104.25" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (3 samples, 0.13%)</title><rect x="854.8" y="117" width="1.5" height="15.0" fill="rgb(233,221,43)" rx="2" ry="2" />
<text  x="857.84" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="1074.5" y="165" width="0.5" height="15.0" fill="rgb(253,111,16)" rx="2" ry="2" />
<text  x="1077.48" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (3 samples, 0.13%)</title><rect x="432.4" y="293" width="1.5" height="15.0" fill="rgb(217,160,45)" rx="2" ry="2" />
<text  x="435.42" y="303.5" ></text>
</g>
<g >
<title>mergesort (582 samples, 24.45%)</title><rect x="791.4" y="197" width="288.5" height="15.0" fill="rgb(251,145,28)" rx="2" ry="2" />
<text  x="794.38" y="207.5" >mergesort</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="704.6" y="149" width="0.5" height="15.0" fill="rgb(253,146,48)" rx="2" ry="2" />
<text  x="707.61" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (2 samples, 0.08%)</title><rect x="844.4" y="133" width="1.0" height="15.0" fill="rgb(207,77,43)" rx="2" ry="2" />
<text  x="847.43" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (6 samples, 0.25%)</title><rect x="985.2" y="117" width="3.0" height="15.0" fill="rgb(216,132,41)" rx="2" ry="2" />
<text  x="988.24" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="556.9" y="293" width="0.5" height="15.0" fill="rgb(240,175,47)" rx="2" ry="2" />
<text  x="559.87" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (1 samples, 0.04%)</title><rect x="997.6" y="133" width="0.5" height="15.0" fill="rgb(210,52,23)" rx="2" ry="2" />
<text  x="1000.63" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="798.8" y="149" width="1.0" height="15.0" fill="rgb(221,112,29)" rx="2" ry="2" />
<text  x="801.82" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="680.8" y="165" width="0.5" height="15.0" fill="rgb(227,129,9)" rx="2" ry="2" />
<text  x="683.82" y="175.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.13%)</title><rect x="882.6" y="69" width="1.5" height="15.0" fill="rgb(239,39,22)" rx="2" ry="2" />
<text  x="885.61" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (3 samples, 0.13%)</title><rect x="295.6" y="389" width="1.5" height="15.0" fill="rgb(236,142,45)" rx="2" ry="2" />
<text  x="298.58" y="399.5" ></text>
</g>
<g >
<title>merge (79 samples, 3.32%)</title><rect x="510.3" y="357" width="39.1" height="15.0" fill="rgb(247,129,46)" rx="2" ry="2" />
<text  x="513.26" y="367.5" >merge</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="21.9" y="245" width="0.5" height="15.0" fill="rgb(254,101,35)" rx="2" ry="2" />
<text  x="24.90" y="255.5" ></text>
</g>
<g >
<title>__clear_user (1 samples, 0.04%)</title><rect x="21.9" y="325" width="0.5" height="15.0" fill="rgb(242,227,14)" rx="2" ry="2" />
<text  x="24.90" y="335.5" ></text>
</g>
<g >
<title>__libc_start_main (2,302 samples, 96.72%)</title><rect x="31.3" y="453" width="1141.3" height="15.0" fill="rgb(251,78,0)" rx="2" ry="2" />
<text  x="34.32" y="463.5" >__libc_start_main</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (2 samples, 0.08%)</title><rect x="783.4" y="133" width="1.0" height="15.0" fill="rgb(239,189,14)" rx="2" ry="2" />
<text  x="786.45" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="758.2" y="165" width="0.5" height="15.0" fill="rgb(222,41,18)" rx="2" ry="2" />
<text  x="761.16" y="175.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt; (1 samples, 0.04%)</title><rect x="1172.2" y="437" width="0.4" height="15.0" fill="rgb(230,46,24)" rx="2" ry="2" />
<text  x="1175.15" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="744.3" y="149" width="0.5" height="15.0" fill="rgb(227,48,23)" rx="2" ry="2" />
<text  x="747.28" y="159.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (2 samples, 0.08%)</title><rect x="986.7" y="85" width="1.0" height="15.0" fill="rgb(205,202,10)" rx="2" ry="2" />
<text  x="989.72" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (24 samples, 1.01%)</title><rect x="1107.7" y="213" width="11.9" height="15.0" fill="rgb(214,208,37)" rx="2" ry="2" />
<text  x="1110.70" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="979.3" y="133" width="0.5" height="15.0" fill="rgb(228,97,49)" rx="2" ry="2" />
<text  x="982.29" y="143.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (2 samples, 0.08%)</title><rect x="613.9" y="213" width="1.0" height="15.0" fill="rgb(240,227,1)" rx="2" ry="2" />
<text  x="616.88" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (1 samples, 0.04%)</title><rect x="1154.8" y="277" width="0.5" height="15.0" fill="rgb(253,197,14)" rx="2" ry="2" />
<text  x="1157.80" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.25%)</title><rect x="1187.0" y="421" width="3.0" height="15.0" fill="rgb(243,122,25)" rx="2" ry="2" />
<text  x="1190.03" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (10 samples, 0.42%)</title><rect x="1097.8" y="197" width="4.9" height="15.0" fill="rgb(245,207,51)" rx="2" ry="2" />
<text  x="1100.78" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1165.2" y="341" width="0.5" height="15.0" fill="rgb(223,153,2)" rx="2" ry="2" />
<text  x="1168.21" y="351.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="1139.9" y="181" width="0.5" height="15.0" fill="rgb(228,95,26)" rx="2" ry="2" />
<text  x="1142.92" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (4 samples, 0.17%)</title><rect x="874.7" y="117" width="2.0" height="15.0" fill="rgb(221,170,54)" rx="2" ry="2" />
<text  x="877.67" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (4 samples, 0.17%)</title><rect x="920.3" y="85" width="2.0" height="15.0" fill="rgb(205,171,13)" rx="2" ry="2" />
<text  x="923.29" y="95.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (5 samples, 0.21%)</title><rect x="1099.3" y="181" width="2.4" height="15.0" fill="rgb(233,42,10)" rx="2" ry="2" />
<text  x="1102.27" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1147.4" y="229" width="0.5" height="15.0" fill="rgb(209,70,17)" rx="2" ry="2" />
<text  x="1150.36" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (1 samples, 0.04%)</title><rect x="1123.6" y="213" width="0.5" height="15.0" fill="rgb(226,81,48)" rx="2" ry="2" />
<text  x="1126.56" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (3 samples, 0.13%)</title><rect x="630.7" y="213" width="1.5" height="15.0" fill="rgb(246,171,34)" rx="2" ry="2" />
<text  x="633.74" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1149.3" y="245" width="0.5" height="15.0" fill="rgb(221,203,15)" rx="2" ry="2" />
<text  x="1152.34" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (7 samples, 0.29%)</title><rect x="785.9" y="149" width="3.5" height="15.0" fill="rgb(250,12,30)" rx="2" ry="2" />
<text  x="788.92" y="159.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (1 samples, 0.04%)</title><rect x="757.7" y="117" width="0.5" height="15.0" fill="rgb(254,224,31)" rx="2" ry="2" />
<text  x="760.66" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (30 samples, 1.26%)</title><rect x="878.1" y="133" width="14.9" height="15.0" fill="rgb(237,35,0)" rx="2" ry="2" />
<text  x="881.14" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.13%)</title><rect x="834.5" y="133" width="1.5" height="15.0" fill="rgb(235,149,24)" rx="2" ry="2" />
<text  x="837.51" y="143.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="889.1" y="53" width="0.4" height="15.0" fill="rgb(218,204,31)" rx="2" ry="2" />
<text  x="892.05" y="63.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (44 samples, 1.85%)</title><rect x="518.2" y="277" width="21.8" height="15.0" fill="rgb(243,18,11)" rx="2" ry="2" />
<text  x="521.19" y="287.5" >s..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (28 samples, 1.18%)</title><rect x="795.8" y="165" width="13.9" height="15.0" fill="rgb(218,113,25)" rx="2" ry="2" />
<text  x="798.84" y="175.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="684.3" y="181" width="0.5" height="15.0" fill="rgb(233,183,48)" rx="2" ry="2" />
<text  x="687.29" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="977.3" y="133" width="0.5" height="15.0" fill="rgb(241,152,0)" rx="2" ry="2" />
<text  x="980.30" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (1 samples, 0.04%)</title><rect x="756.2" y="165" width="0.5" height="15.0" fill="rgb(210,26,9)" rx="2" ry="2" />
<text  x="759.18" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (31 samples, 1.30%)</title><rect x="1082.4" y="181" width="15.4" height="15.0" fill="rgb(211,115,1)" rx="2" ry="2" />
<text  x="1085.41" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (4 samples, 0.17%)</title><rect x="1030.4" y="149" width="1.9" height="15.0" fill="rgb(213,53,28)" rx="2" ry="2" />
<text  x="1033.35" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (3 samples, 0.13%)</title><rect x="834.5" y="117" width="1.5" height="15.0" fill="rgb(251,114,10)" rx="2" ry="2" />
<text  x="837.51" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (3 samples, 0.13%)</title><rect x="823.6" y="117" width="1.5" height="15.0" fill="rgb(224,105,8)" rx="2" ry="2" />
<text  x="826.61" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (3 samples, 0.13%)</title><rect x="689.2" y="229" width="1.5" height="15.0" fill="rgb(223,96,24)" rx="2" ry="2" />
<text  x="692.24" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="922.3" y="101" width="0.5" height="15.0" fill="rgb(242,148,14)" rx="2" ry="2" />
<text  x="925.27" y="111.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (11 samples, 0.46%)</title><rect x="771.5" y="149" width="5.5" height="15.0" fill="rgb(215,148,14)" rx="2" ry="2" />
<text  x="774.55" y="159.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (1 samples, 0.04%)</title><rect x="727.9" y="133" width="0.5" height="15.0" fill="rgb(220,98,50)" rx="2" ry="2" />
<text  x="730.92" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (1 samples, 0.04%)</title><rect x="825.1" y="133" width="0.5" height="15.0" fill="rgb(242,215,18)" rx="2" ry="2" />
<text  x="828.09" y="143.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (1 samples, 0.04%)</title><rect x="25.9" y="373" width="0.5" height="15.0" fill="rgb(210,149,23)" rx="2" ry="2" />
<text  x="28.87" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (4 samples, 0.17%)</title><rect x="989.2" y="117" width="2.0" height="15.0" fill="rgb(234,218,22)" rx="2" ry="2" />
<text  x="992.20" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (3 samples, 0.13%)</title><rect x="936.2" y="85" width="1.4" height="15.0" fill="rgb(217,131,43)" rx="2" ry="2" />
<text  x="939.15" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1091.3" y="149" width="0.5" height="15.0" fill="rgb(218,88,42)" rx="2" ry="2" />
<text  x="1094.34" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="437.9" y="293" width="0.5" height="15.0" fill="rgb(234,203,9)" rx="2" ry="2" />
<text  x="440.87" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="1040.8" y="149" width="0.5" height="15.0" fill="rgb(219,177,49)" rx="2" ry="2" />
<text  x="1043.76" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="641.2" y="261" width="0.9" height="15.0" fill="rgb(226,104,48)" rx="2" ry="2" />
<text  x="644.15" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="625.3" y="261" width="0.5" height="15.0" fill="rgb(226,21,44)" rx="2" ry="2" />
<text  x="628.29" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="811.2" y="149" width="0.5" height="15.0" fill="rgb(229,176,29)" rx="2" ry="2" />
<text  x="814.21" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (2 samples, 0.08%)</title><rect x="1002.1" y="117" width="1.0" height="15.0" fill="rgb(244,60,13)" rx="2" ry="2" />
<text  x="1005.09" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="441.8" y="341" width="0.5" height="15.0" fill="rgb(219,74,24)" rx="2" ry="2" />
<text  x="444.84" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="735.8" y="181" width="0.5" height="15.0" fill="rgb(208,115,0)" rx="2" ry="2" />
<text  x="738.85" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="766.1" y="165" width="0.5" height="15.0" fill="rgb(233,212,21)" rx="2" ry="2" />
<text  x="769.09" y="175.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="805.8" y="85" width="0.9" height="15.0" fill="rgb(218,221,19)" rx="2" ry="2" />
<text  x="808.76" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="740.8" y="181" width="0.5" height="15.0" fill="rgb(225,44,10)" rx="2" ry="2" />
<text  x="743.81" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3 samples, 0.13%)</title><rect x="691.2" y="245" width="1.5" height="15.0" fill="rgb(225,178,44)" rx="2" ry="2" />
<text  x="694.23" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="666.4" y="213" width="0.5" height="15.0" fill="rgb(251,56,8)" rx="2" ry="2" />
<text  x="669.44" y="223.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="925.2" y="85" width="0.5" height="15.0" fill="rgb(219,203,21)" rx="2" ry="2" />
<text  x="928.24" y="95.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="776.5" y="101" width="0.5" height="15.0" fill="rgb(233,113,53)" rx="2" ry="2" />
<text  x="779.50" y="111.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (3 samples, 0.13%)</title><rect x="572.7" y="261" width="1.5" height="15.0" fill="rgb(231,28,51)" rx="2" ry="2" />
<text  x="575.73" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="694.7" y="213" width="0.5" height="15.0" fill="rgb(209,96,43)" rx="2" ry="2" />
<text  x="697.70" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (4 samples, 0.17%)</title><rect x="439.9" y="341" width="1.9" height="15.0" fill="rgb(244,216,49)" rx="2" ry="2" />
<text  x="442.86" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="843.4" y="69" width="0.5" height="15.0" fill="rgb(231,54,17)" rx="2" ry="2" />
<text  x="846.44" y="79.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="614.9" y="213" width="0.5" height="15.0" fill="rgb(254,75,39)" rx="2" ry="2" />
<text  x="617.87" y="223.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (1 samples, 0.04%)</title><rect x="789.9" y="117" width="0.5" height="15.0" fill="rgb(241,152,29)" rx="2" ry="2" />
<text  x="792.89" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (5 samples, 0.21%)</title><rect x="685.3" y="165" width="2.5" height="15.0" fill="rgb(241,63,53)" rx="2" ry="2" />
<text  x="688.28" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="1098.3" y="181" width="0.5" height="15.0" fill="rgb(253,196,44)" rx="2" ry="2" />
<text  x="1101.28" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (26 samples, 1.09%)</title><rect x="650.1" y="245" width="12.9" height="15.0" fill="rgb(230,151,47)" rx="2" ry="2" />
<text  x="653.08" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="878.6" y="117" width="0.5" height="15.0" fill="rgb(212,184,11)" rx="2" ry="2" />
<text  x="881.64" y="127.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (10 samples, 0.42%)</title><rect x="630.2" y="229" width="5.0" height="15.0" fill="rgb(231,202,39)" rx="2" ry="2" />
<text  x="633.24" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (3 samples, 0.13%)</title><rect x="743.3" y="165" width="1.5" height="15.0" fill="rgb(225,116,1)" rx="2" ry="2" />
<text  x="746.29" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (132 samples, 5.55%)</title><rect x="442.3" y="341" width="65.5" height="15.0" fill="rgb(229,130,11)" rx="2" ry="2" />
<text  x="445.34" y="351.5" >std::ve..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1087.9" y="149" width="0.5" height="15.0" fill="rgb(237,95,52)" rx="2" ry="2" />
<text  x="1090.87" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (1 samples, 0.04%)</title><rect x="876.7" y="117" width="0.5" height="15.0" fill="rgb(218,195,47)" rx="2" ry="2" />
<text  x="879.66" y="127.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1 samples, 0.04%)</title><rect x="843.9" y="85" width="0.5" height="15.0" fill="rgb(221,169,5)" rx="2" ry="2" />
<text  x="846.93" y="95.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (11 samples, 0.46%)</title><rect x="940.1" y="133" width="5.5" height="15.0" fill="rgb(247,114,49)" rx="2" ry="2" />
<text  x="943.12" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="690.7" y="213" width="0.5" height="15.0" fill="rgb(240,123,52)" rx="2" ry="2" />
<text  x="693.73" y="223.5" ></text>
</g>
<g >
<title>virtual thunk to std::basic_fstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_fstream (3 samples, 0.13%)</title><rect x="29.8" y="437" width="1.5" height="15.0" fill="rgb(218,77,43)" rx="2" ry="2" />
<text  x="32.83" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (3 samples, 0.13%)</title><rect x="901.4" y="101" width="1.5" height="15.0" fill="rgb(225,177,45)" rx="2" ry="2" />
<text  x="904.45" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (3 samples, 0.13%)</title><rect x="907.4" y="85" width="1.5" height="15.0" fill="rgb(216,12,18)" rx="2" ry="2" />
<text  x="910.39" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="1072.5" y="149" width="0.5" height="15.0" fill="rgb(223,50,43)" rx="2" ry="2" />
<text  x="1075.50" y="159.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="1070.0" y="101" width="0.5" height="15.0" fill="rgb(232,129,35)" rx="2" ry="2" />
<text  x="1073.02" y="111.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.04%)</title><rect x="21.9" y="213" width="0.5" height="15.0" fill="rgb(246,179,48)" rx="2" ry="2" />
<text  x="24.90" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (2 samples, 0.08%)</title><rect x="1106.2" y="213" width="1.0" height="15.0" fill="rgb(222,166,18)" rx="2" ry="2" />
<text  x="1109.21" y="223.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="787.9" y="101" width="0.5" height="15.0" fill="rgb(224,31,35)" rx="2" ry="2" />
<text  x="790.91" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (2 samples, 0.08%)</title><rect x="574.2" y="293" width="1.0" height="15.0" fill="rgb(225,70,0)" rx="2" ry="2" />
<text  x="577.22" y="303.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="546.9" y="293" width="0.5" height="15.0" fill="rgb(253,144,53)" rx="2" ry="2" />
<text  x="549.95" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="885.1" y="101" width="1.0" height="15.0" fill="rgb(217,198,24)" rx="2" ry="2" />
<text  x="888.08" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (4 samples, 0.17%)</title><rect x="1137.4" y="229" width="2.0" height="15.0" fill="rgb(254,197,21)" rx="2" ry="2" />
<text  x="1140.45" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (4 samples, 0.17%)</title><rect x="842.4" y="101" width="2.0" height="15.0" fill="rgb(221,29,45)" rx="2" ry="2" />
<text  x="845.45" y="111.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="751.7" y="149" width="0.5" height="15.0" fill="rgb(227,99,4)" rx="2" ry="2" />
<text  x="754.71" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.04%)</title><rect x="1080.9" y="165" width="0.5" height="15.0" fill="rgb(209,183,11)" rx="2" ry="2" />
<text  x="1083.92" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (1 samples, 0.04%)</title><rect x="969.4" y="117" width="0.5" height="15.0" fill="rgb(254,31,29)" rx="2" ry="2" />
<text  x="972.37" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (2 samples, 0.08%)</title><rect x="506.8" y="325" width="1.0" height="15.0" fill="rgb(248,141,7)" rx="2" ry="2" />
<text  x="509.79" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="1150.8" y="245" width="0.5" height="15.0" fill="rgb(244,11,27)" rx="2" ry="2" />
<text  x="1153.83" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="747.7" y="117" width="0.5" height="15.0" fill="rgb(254,135,12)" rx="2" ry="2" />
<text  x="750.75" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="804.8" y="85" width="0.5" height="15.0" fill="rgb(247,154,22)" rx="2" ry="2" />
<text  x="807.76" y="95.5" ></text>
</g>
<g >
<title>merge (69 samples, 2.90%)</title><rect x="793.4" y="181" width="34.2" height="15.0" fill="rgb(249,91,43)" rx="2" ry="2" />
<text  x="796.36" y="191.5" >me..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1150.8" y="261" width="1.0" height="15.0" fill="rgb(254,16,48)" rx="2" ry="2" />
<text  x="1153.83" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="574.7" y="277" width="0.5" height="15.0" fill="rgb(239,93,2)" rx="2" ry="2" />
<text  x="577.71" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (3 samples, 0.13%)</title><rect x="635.2" y="245" width="1.5" height="15.0" fill="rgb(207,49,40)" rx="2" ry="2" />
<text  x="638.20" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="758.2" y="149" width="0.5" height="15.0" fill="rgb(251,97,6)" rx="2" ry="2" />
<text  x="761.16" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="834.0" y="117" width="0.5" height="15.0" fill="rgb(205,212,50)" rx="2" ry="2" />
<text  x="837.02" y="127.5" ></text>
</g>
<g >
<title>ext4_write_checks (1 samples, 0.04%)</title><rect x="10.0" y="309" width="0.5" height="15.0" fill="rgb(219,107,7)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (1 samples, 0.04%)</title><rect x="1143.4" y="197" width="0.5" height="15.0" fill="rgb(211,120,31)" rx="2" ry="2" />
<text  x="1146.39" y="207.5" ></text>
</g>
<g >
<title>merge (58 samples, 2.44%)</title><rect x="549.4" y="341" width="28.8" height="15.0" fill="rgb(231,63,52)" rx="2" ry="2" />
<text  x="552.43" y="351.5" >me..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (18 samples, 0.76%)</title><rect x="722.5" y="197" width="8.9" height="15.0" fill="rgb(226,80,54)" rx="2" ry="2" />
<text  x="725.46" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.04%)</title><rect x="694.7" y="229" width="0.5" height="15.0" fill="rgb(218,215,2)" rx="2" ry="2" />
<text  x="697.70" y="239.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="978.8" y="101" width="0.5" height="15.0" fill="rgb(223,68,38)" rx="2" ry="2" />
<text  x="981.79" y="111.5" ></text>
</g>
<g >
<title>strlcpy (5 samples, 0.21%)</title><rect x="1187.5" y="325" width="2.5" height="15.0" fill="rgb(233,81,18)" rx="2" ry="2" />
<text  x="1190.52" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1 samples, 0.04%)</title><rect x="1121.6" y="133" width="0.5" height="15.0" fill="rgb(205,126,36)" rx="2" ry="2" />
<text  x="1124.58" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="583.6" y="277" width="0.5" height="15.0" fill="rgb(226,141,45)" rx="2" ry="2" />
<text  x="586.64" y="287.5" ></text>
</g>
<g >
<title>std::__alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (1 samples, 0.04%)</title><rect x="903.4" y="117" width="0.5" height="15.0" fill="rgb(237,91,27)" rx="2" ry="2" />
<text  x="906.43" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.04%)</title><rect x="668.4" y="245" width="0.5" height="15.0" fill="rgb(207,47,33)" rx="2" ry="2" />
<text  x="671.42" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (1 samples, 0.04%)</title><rect x="1041.8" y="117" width="0.5" height="15.0" fill="rgb(219,143,36)" rx="2" ry="2" />
<text  x="1044.76" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="750.2" y="197" width="0.5" height="15.0" fill="rgb(229,174,3)" rx="2" ry="2" />
<text  x="753.23" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (2 samples, 0.08%)</title><rect x="1001.1" y="117" width="1.0" height="15.0" fill="rgb(244,187,37)" rx="2" ry="2" />
<text  x="1004.10" y="127.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (52 samples, 2.18%)</title><rect x="517.7" y="309" width="25.8" height="15.0" fill="rgb(214,106,36)" rx="2" ry="2" />
<text  x="520.70" y="319.5" >s..</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (4 samples, 0.17%)</title><rect x="908.9" y="85" width="2.0" height="15.0" fill="rgb(214,52,21)" rx="2" ry="2" />
<text  x="911.88" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (2 samples, 0.08%)</title><rect x="1000.1" y="117" width="1.0" height="15.0" fill="rgb(215,67,41)" rx="2" ry="2" />
<text  x="1003.11" y="127.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="437.9" y="277" width="0.5" height="15.0" fill="rgb(214,69,45)" rx="2" ry="2" />
<text  x="440.87" y="287.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt; (1 samples, 0.04%)</title><rect x="29.3" y="389" width="0.5" height="15.0" fill="rgb(236,109,40)" rx="2" ry="2" />
<text  x="32.34" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1116.6" y="165" width="0.5" height="15.0" fill="rgb(245,10,54)" rx="2" ry="2" />
<text  x="1119.62" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="736.8" y="165" width="0.5" height="15.0" fill="rgb(207,63,20)" rx="2" ry="2" />
<text  x="739.84" y="175.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (1 samples, 0.04%)</title><rect x="892.5" y="69" width="0.5" height="15.0" fill="rgb(231,117,33)" rx="2" ry="2" />
<text  x="895.52" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (28 samples, 1.18%)</title><rect x="624.8" y="277" width="13.9" height="15.0" fill="rgb(241,27,3)" rx="2" ry="2" />
<text  x="627.79" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="731.9" y="181" width="1.0" height="15.0" fill="rgb(240,107,6)" rx="2" ry="2" />
<text  x="734.88" y="191.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="1145.9" y="197" width="0.5" height="15.0" fill="rgb(209,14,2)" rx="2" ry="2" />
<text  x="1148.87" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (49 samples, 2.06%)</title><rect x="1036.3" y="165" width="24.3" height="15.0" fill="rgb(248,23,5)" rx="2" ry="2" />
<text  x="1039.30" y="175.5" >s..</text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (5 samples, 0.21%)</title><rect x="1095.3" y="133" width="2.5" height="15.0" fill="rgb(247,66,30)" rx="2" ry="2" />
<text  x="1098.30" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (1 samples, 0.04%)</title><rect x="754.2" y="133" width="0.5" height="15.0" fill="rgb(239,229,31)" rx="2" ry="2" />
<text  x="757.19" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (33 samples, 1.39%)</title><rect x="581.7" y="309" width="16.3" height="15.0" fill="rgb(214,89,14)" rx="2" ry="2" />
<text  x="584.66" y="319.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1 samples, 0.04%)</title><rect x="1121.6" y="181" width="0.5" height="15.0" fill="rgb(239,185,6)" rx="2" ry="2" />
<text  x="1124.58" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (6 samples, 0.25%)</title><rect x="886.6" y="69" width="2.9" height="15.0" fill="rgb(254,197,1)" rx="2" ry="2" />
<text  x="889.57" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (6 samples, 0.25%)</title><rect x="1000.1" y="133" width="3.0" height="15.0" fill="rgb(205,150,38)" rx="2" ry="2" />
<text  x="1003.11" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (4 samples, 0.17%)</title><rect x="1133.5" y="229" width="2.0" height="15.0" fill="rgb(233,218,0)" rx="2" ry="2" />
<text  x="1136.48" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (1 samples, 0.04%)</title><rect x="939.1" y="101" width="0.5" height="15.0" fill="rgb(242,197,37)" rx="2" ry="2" />
<text  x="942.13" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (9 samples, 0.38%)</title><rect x="960.9" y="133" width="4.5" height="15.0" fill="rgb(220,218,8)" rx="2" ry="2" />
<text  x="963.94" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="583.6" y="261" width="0.5" height="15.0" fill="rgb(216,58,9)" rx="2" ry="2" />
<text  x="586.64" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (117 samples, 4.92%)</title><rect x="448.8" y="309" width="58.0" height="15.0" fill="rgb(245,59,6)" rx="2" ry="2" />
<text  x="451.78" y="319.5" >std::_..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (4 samples, 0.17%)</title><rect x="872.7" y="117" width="2.0" height="15.0" fill="rgb(211,113,31)" rx="2" ry="2" />
<text  x="875.69" y="127.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="1069.0" y="85" width="1.0" height="15.0" fill="rgb(223,57,6)" rx="2" ry="2" />
<text  x="1072.03" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="684.8" y="165" width="0.5" height="15.0" fill="rgb(233,37,28)" rx="2" ry="2" />
<text  x="687.78" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="305.0" y="341" width="0.5" height="15.0" fill="rgb(240,159,16)" rx="2" ry="2" />
<text  x="308.00" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (5 samples, 0.21%)</title><rect x="807.2" y="149" width="2.5" height="15.0" fill="rgb(215,135,51)" rx="2" ry="2" />
<text  x="810.24" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (1 samples, 0.04%)</title><rect x="1033.8" y="133" width="0.5" height="15.0" fill="rgb(219,118,28)" rx="2" ry="2" />
<text  x="1036.82" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (1 samples, 0.04%)</title><rect x="1060.6" y="165" width="0.5" height="15.0" fill="rgb(216,80,46)" rx="2" ry="2" />
<text  x="1063.60" y="175.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="864.8" y="85" width="0.5" height="15.0" fill="rgb(251,153,12)" rx="2" ry="2" />
<text  x="867.76" y="95.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (2 samples, 0.08%)</title><rect x="1084.9" y="165" width="1.0" height="15.0" fill="rgb(223,144,3)" rx="2" ry="2" />
<text  x="1087.89" y="175.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1153.3" y="245" width="0.5" height="15.0" fill="rgb(225,227,36)" rx="2" ry="2" />
<text  x="1156.31" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.04%)</title><rect x="905.4" y="85" width="0.5" height="15.0" fill="rgb(205,47,24)" rx="2" ry="2" />
<text  x="908.41" y="95.5" ></text>
</g>
<g >
<title>[merSort] (1 samples, 0.04%)</title><rect x="586.1" y="229" width="0.5" height="15.0" fill="rgb(221,229,8)" rx="2" ry="2" />
<text  x="589.12" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (4 samples, 0.17%)</title><rect x="1145.9" y="245" width="2.0" height="15.0" fill="rgb(235,182,3)" rx="2" ry="2" />
<text  x="1148.87" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (28 samples, 1.18%)</title><rect x="675.4" y="229" width="13.8" height="15.0" fill="rgb(226,165,15)" rx="2" ry="2" />
<text  x="678.36" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1137.4" y="213" width="1.0" height="15.0" fill="rgb(232,41,1)" rx="2" ry="2" />
<text  x="1140.45" y="223.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;int*&gt; (1 samples, 0.04%)</title><rect x="1070.5" y="101" width="0.5" height="15.0" fill="rgb(254,76,24)" rx="2" ry="2" />
<text  x="1073.51" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (4 samples, 0.17%)</title><rect x="864.8" y="117" width="1.9" height="15.0" fill="rgb(251,116,12)" rx="2" ry="2" />
<text  x="867.76" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (3 samples, 0.13%)</title><rect x="786.9" y="133" width="1.5" height="15.0" fill="rgb(220,151,22)" rx="2" ry="2" />
<text  x="789.92" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="580.7" y="293" width="1.0" height="15.0" fill="rgb(216,199,51)" rx="2" ry="2" />
<text  x="583.66" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1170.2" y="389" width="0.5" height="15.0" fill="rgb(211,57,4)" rx="2" ry="2" />
<text  x="1173.17" y="399.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (4 samples, 0.17%)</title><rect x="804.8" y="101" width="1.9" height="15.0" fill="rgb(252,206,50)" rx="2" ry="2" />
<text  x="807.76" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (272 samples, 11.43%)</title><rect x="300.5" y="373" width="134.9" height="15.0" fill="rgb(235,64,26)" rx="2" ry="2" />
<text  x="303.54" y="383.5" >std::vector&lt;int, ..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="633.7" y="197" width="0.5" height="15.0" fill="rgb(224,204,39)" rx="2" ry="2" />
<text  x="636.71" y="207.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.04%)</title><rect x="21.9" y="373" width="0.5" height="15.0" fill="rgb(216,106,42)" rx="2" ry="2" />
<text  x="24.90" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (50 samples, 2.10%)</title><rect x="517.7" y="293" width="24.8" height="15.0" fill="rgb(233,73,17)" rx="2" ry="2" />
<text  x="520.70" y="303.5" >s..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (3 samples, 0.13%)</title><rect x="907.4" y="53" width="1.5" height="15.0" fill="rgb(208,205,46)" rx="2" ry="2" />
<text  x="910.39" y="63.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="1087.9" y="133" width="0.5" height="15.0" fill="rgb(218,203,30)" rx="2" ry="2" />
<text  x="1090.87" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (1 samples, 0.04%)</title><rect x="827.1" y="165" width="0.5" height="15.0" fill="rgb(246,197,36)" rx="2" ry="2" />
<text  x="830.08" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="1055.1" y="101" width="0.5" height="15.0" fill="rgb(230,121,2)" rx="2" ry="2" />
<text  x="1058.14" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (2 samples, 0.08%)</title><rect x="663.0" y="245" width="1.0" height="15.0" fill="rgb(246,49,6)" rx="2" ry="2" />
<text  x="665.97" y="255.5" ></text>
</g>
<g >
<title>mergesort (2,297 samples, 96.51%)</title><rect x="31.8" y="421" width="1138.9" height="15.0" fill="rgb(249,168,4)" rx="2" ry="2" />
<text  x="34.82" y="431.5" >mergesort</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="856.3" y="117" width="1.5" height="15.0" fill="rgb(237,160,26)" rx="2" ry="2" />
<text  x="859.33" y="127.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (1 samples, 0.04%)</title><rect x="726.4" y="149" width="0.5" height="15.0" fill="rgb(236,118,40)" rx="2" ry="2" />
<text  x="729.43" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.08%)</title><rect x="1100.3" y="85" width="1.0" height="15.0" fill="rgb(212,32,23)" rx="2" ry="2" />
<text  x="1103.26" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="795.3" y="149" width="0.5" height="15.0" fill="rgb(216,214,9)" rx="2" ry="2" />
<text  x="798.34" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (2 samples, 0.08%)</title><rect x="1041.3" y="149" width="1.0" height="15.0" fill="rgb(230,106,2)" rx="2" ry="2" />
<text  x="1044.26" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (1 samples, 0.04%)</title><rect x="1133.0" y="213" width="0.5" height="15.0" fill="rgb(234,203,2)" rx="2" ry="2" />
<text  x="1135.98" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="1078.9" y="117" width="0.5" height="15.0" fill="rgb(248,95,18)" rx="2" ry="2" />
<text  x="1081.94" y="127.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="447.8" y="325" width="0.5" height="15.0" fill="rgb(240,91,14)" rx="2" ry="2" />
<text  x="450.79" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="790.4" y="165" width="0.5" height="15.0" fill="rgb(210,35,40)" rx="2" ry="2" />
<text  x="793.39" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (6 samples, 0.25%)</title><rect x="968.9" y="133" width="2.9" height="15.0" fill="rgb(251,209,20)" rx="2" ry="2" />
<text  x="971.87" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_nothrow_relocate (2 samples, 0.08%)</title><rect x="863.8" y="117" width="1.0" height="15.0" fill="rgb(215,152,6)" rx="2" ry="2" />
<text  x="866.76" y="127.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (2 samples, 0.08%)</title><rect x="757.2" y="133" width="1.0" height="15.0" fill="rgb(223,45,21)" rx="2" ry="2" />
<text  x="760.17" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="597.0" y="277" width="0.5" height="15.0" fill="rgb(213,171,1)" rx="2" ry="2" />
<text  x="600.03" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="850.9" y="117" width="0.5" height="15.0" fill="rgb(223,145,33)" rx="2" ry="2" />
<text  x="853.87" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="645.1" y="245" width="1.0" height="15.0" fill="rgb(220,91,12)" rx="2" ry="2" />
<text  x="648.12" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1060.1" y="149" width="0.5" height="15.0" fill="rgb(236,199,42)" rx="2" ry="2" />
<text  x="1063.10" y="159.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;int*&gt; (1 samples, 0.04%)</title><rect x="945.1" y="69" width="0.5" height="15.0" fill="rgb(210,190,21)" rx="2" ry="2" />
<text  x="948.08" y="79.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="670.9" y="229" width="1.0" height="15.0" fill="rgb(253,146,43)" rx="2" ry="2" />
<text  x="673.90" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="583.1" y="261" width="0.5" height="15.0" fill="rgb(213,16,21)" rx="2" ry="2" />
<text  x="586.14" y="271.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="1054.6" y="117" width="0.5" height="15.0" fill="rgb(240,25,36)" rx="2" ry="2" />
<text  x="1057.65" y="127.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (23 samples, 0.97%)</title><rect x="584.6" y="261" width="11.4" height="15.0" fill="rgb(246,67,12)" rx="2" ry="2" />
<text  x="587.63" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (3 samples, 0.13%)</title><rect x="782.9" y="149" width="1.5" height="15.0" fill="rgb(242,117,51)" rx="2" ry="2" />
<text  x="785.95" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="810.7" y="149" width="0.5" height="15.0" fill="rgb(238,189,34)" rx="2" ry="2" />
<text  x="813.71" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (6 samples, 0.25%)</title><rect x="435.4" y="373" width="3.0" height="15.0" fill="rgb(247,174,39)" rx="2" ry="2" />
<text  x="438.39" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.08%)</title><rect x="862.8" y="101" width="1.0" height="15.0" fill="rgb(240,215,30)" rx="2" ry="2" />
<text  x="865.77" y="111.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (2 samples, 0.08%)</title><rect x="1130.0" y="165" width="1.0" height="15.0" fill="rgb(240,79,39)" rx="2" ry="2" />
<text  x="1133.01" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="833.5" y="133" width="0.5" height="15.0" fill="rgb(211,91,50)" rx="2" ry="2" />
<text  x="836.52" y="143.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (1 samples, 0.04%)</title><rect x="1008.0" y="53" width="0.5" height="15.0" fill="rgb(219,37,16)" rx="2" ry="2" />
<text  x="1011.04" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="739.3" y="197" width="0.5" height="15.0" fill="rgb(231,37,1)" rx="2" ry="2" />
<text  x="742.32" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (26 samples, 1.09%)</title><rect x="812.7" y="149" width="12.9" height="15.0" fill="rgb(218,114,12)" rx="2" ry="2" />
<text  x="815.70" y="159.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (10 samples, 0.42%)</title><rect x="1005.6" y="101" width="4.9" height="15.0" fill="rgb(242,106,10)" rx="2" ry="2" />
<text  x="1008.56" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="648.1" y="229" width="0.5" height="15.0" fill="rgb(242,112,21)" rx="2" ry="2" />
<text  x="651.09" y="239.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="542.5" y="293" width="1.0" height="15.0" fill="rgb(220,204,21)" rx="2" ry="2" />
<text  x="545.49" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="851.4" y="117" width="1.0" height="15.0" fill="rgb(218,140,54)" rx="2" ry="2" />
<text  x="854.37" y="127.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.34%)</title><rect x="25.9" y="421" width="3.9" height="15.0" fill="rgb(248,97,1)" rx="2" ry="2" />
<text  x="28.87" y="431.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (1 samples, 0.04%)</title><rect x="1065.6" y="133" width="0.5" height="15.0" fill="rgb(209,153,25)" rx="2" ry="2" />
<text  x="1068.55" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (62 samples, 2.61%)</title><rect x="513.7" y="325" width="30.8" height="15.0" fill="rgb(216,38,9)" rx="2" ry="2" />
<text  x="516.73" y="335.5" >st..</text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="21.9" y="229" width="0.5" height="15.0" fill="rgb(253,109,23)" rx="2" ry="2" />
<text  x="24.90" y="239.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 0.04%)</title><rect x="25.4" y="437" width="0.5" height="15.0" fill="rgb(253,228,11)" rx="2" ry="2" />
<text  x="28.37" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1169.2" y="389" width="0.5" height="15.0" fill="rgb(241,102,7)" rx="2" ry="2" />
<text  x="1172.18" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.08%)</title><rect x="877.2" y="133" width="0.9" height="15.0" fill="rgb(214,159,10)" rx="2" ry="2" />
<text  x="880.15" y="143.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;long&gt; (3 samples, 0.13%)</title><rect x="22.4" y="405" width="1.5" height="15.0" fill="rgb(217,62,15)" rx="2" ry="2" />
<text  x="25.39" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.13%)</title><rect x="648.6" y="245" width="1.5" height="15.0" fill="rgb(232,213,26)" rx="2" ry="2" />
<text  x="651.59" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (27 samples, 1.13%)</title><rect x="958.5" y="165" width="13.3" height="15.0" fill="rgb(251,70,34)" rx="2" ry="2" />
<text  x="961.46" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="805.3" y="85" width="0.5" height="15.0" fill="rgb(235,195,24)" rx="2" ry="2" />
<text  x="808.26" y="95.5" ></text>
</g>
<g >
<title>merge (44 samples, 1.85%)</title><rect x="601.0" y="309" width="21.8" height="15.0" fill="rgb(224,136,16)" rx="2" ry="2" />
<text  x="603.99" y="319.5" >m..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (2 samples, 0.08%)</title><rect x="777.0" y="165" width="1.0" height="15.0" fill="rgb(235,61,42)" rx="2" ry="2" />
<text  x="780.00" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="435.9" y="341" width="1.5" height="15.0" fill="rgb(251,157,3)" rx="2" ry="2" />
<text  x="438.89" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (2 samples, 0.08%)</title><rect x="645.1" y="261" width="1.0" height="15.0" fill="rgb(217,93,6)" rx="2" ry="2" />
<text  x="648.12" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (1 samples, 0.04%)</title><rect x="1079.4" y="149" width="0.5" height="15.0" fill="rgb(245,76,52)" rx="2" ry="2" />
<text  x="1082.44" y="159.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="747.3" y="133" width="0.9" height="15.0" fill="rgb(244,118,42)" rx="2" ry="2" />
<text  x="750.25" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (46 samples, 1.93%)</title><rect x="845.9" y="149" width="22.8" height="15.0" fill="rgb(251,85,30)" rx="2" ry="2" />
<text  x="848.92" y="159.5" >s..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="1160.7" y="341" width="0.5" height="15.0" fill="rgb(240,27,41)" rx="2" ry="2" />
<text  x="1163.75" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (4 samples, 0.17%)</title><rect x="864.8" y="101" width="1.9" height="15.0" fill="rgb(221,209,50)" rx="2" ry="2" />
<text  x="867.76" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="582.6" y="277" width="1.0" height="15.0" fill="rgb(230,170,45)" rx="2" ry="2" />
<text  x="585.65" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="809.2" y="133" width="0.5" height="15.0" fill="rgb(252,106,9)" rx="2" ry="2" />
<text  x="812.23" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (1 samples, 0.04%)</title><rect x="821.1" y="133" width="0.5" height="15.0" fill="rgb(218,207,51)" rx="2" ry="2" />
<text  x="824.13" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (2 samples, 0.08%)</title><rect x="1139.4" y="213" width="1.0" height="15.0" fill="rgb(222,83,31)" rx="2" ry="2" />
<text  x="1142.43" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (5 samples, 0.21%)</title><rect x="882.1" y="85" width="2.5" height="15.0" fill="rgb(235,153,31)" rx="2" ry="2" />
<text  x="885.11" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.13%)</title><rect x="698.7" y="213" width="1.5" height="15.0" fill="rgb(234,46,14)" rx="2" ry="2" />
<text  x="701.66" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (4 samples, 0.17%)</title><rect x="1006.6" y="69" width="1.9" height="15.0" fill="rgb(225,38,11)" rx="2" ry="2" />
<text  x="1009.55" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_nothrow_relocate (1 samples, 0.04%)</title><rect x="1164.7" y="325" width="0.5" height="15.0" fill="rgb(216,151,27)" rx="2" ry="2" />
<text  x="1167.71" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (1 samples, 0.04%)</title><rect x="24.9" y="437" width="0.5" height="15.0" fill="rgb(211,3,25)" rx="2" ry="2" />
<text  x="27.87" y="447.5" ></text>
</g>
<g >
<title>mergesort (698 samples, 29.33%)</title><rect x="760.1" y="213" width="346.1" height="15.0" fill="rgb(220,46,45)" rx="2" ry="2" />
<text  x="763.14" y="223.5" >mergesort</text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;int&gt;&amp;&gt; (1 samples, 0.04%)</title><rect x="966.4" y="101" width="0.5" height="15.0" fill="rgb(231,204,31)" rx="2" ry="2" />
<text  x="969.39" y="111.5" ></text>
</g>
<g >
<title>clear_page_rep (1 samples, 0.04%)</title><rect x="21.9" y="149" width="0.5" height="15.0" fill="rgb(219,147,12)" rx="2" ry="2" />
<text  x="24.90" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (30 samples, 1.26%)</title><rect x="603.5" y="293" width="14.8" height="15.0" fill="rgb(234,213,27)" rx="2" ry="2" />
<text  x="606.47" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="665.4" y="245" width="0.5" height="15.0" fill="rgb(250,141,17)" rx="2" ry="2" />
<text  x="668.45" y="255.5" ></text>
</g>
<g >
<title>mergesort (843 samples, 35.42%)</title><rect x="717.5" y="245" width="418.0" height="15.0" fill="rgb(217,5,1)" rx="2" ry="2" />
<text  x="720.50" y="255.5" >mergesort</text>
</g>
<g >
<title>__x64_sys_writev (1 samples, 0.04%)</title><rect x="10.0" y="389" width="0.5" height="15.0" fill="rgb(205,63,51)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1088.4" y="149" width="0.5" height="15.0" fill="rgb(225,178,31)" rx="2" ry="2" />
<text  x="1091.36" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (2 samples, 0.08%)</title><rect x="1019.4" y="149" width="1.0" height="15.0" fill="rgb(205,39,27)" rx="2" ry="2" />
<text  x="1022.45" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="666.4" y="229" width="0.5" height="15.0" fill="rgb(241,92,21)" rx="2" ry="2" />
<text  x="669.44" y="239.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (12 samples, 0.50%)</title><rect x="702.1" y="197" width="6.0" height="15.0" fill="rgb(222,225,31)" rx="2" ry="2" />
<text  x="705.13" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (2 samples, 0.08%)</title><rect x="1118.6" y="197" width="1.0" height="15.0" fill="rgb(250,73,50)" rx="2" ry="2" />
<text  x="1121.61" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (254 samples, 10.67%)</title><rect x="309.0" y="325" width="125.9" height="15.0" fill="rgb(207,123,51)" rx="2" ry="2" />
<text  x="311.97" y="335.5" >std::__copy_mov..</text>
</g>
<g >
<title>merSort (2,374 samples, 99.75%)</title><rect x="10.0" y="469" width="1177.0" height="15.0" fill="rgb(251,72,29)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >merSort</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="1156.8" y="277" width="0.5" height="15.0" fill="rgb(221,134,48)" rx="2" ry="2" />
<text  x="1159.78" y="287.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (34 samples, 1.43%)</title><rect x="557.4" y="293" width="16.8" height="15.0" fill="rgb(214,210,32)" rx="2" ry="2" />
<text  x="560.36" y="303.5" ></text>
</g>
<g >
<title>_int_free (21 samples, 0.88%)</title><rect x="11.5" y="437" width="10.4" height="15.0" fill="rgb(254,92,11)" rx="2" ry="2" />
<text  x="14.49" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="722.5" y="181" width="0.5" height="15.0" fill="rgb(206,55,17)" rx="2" ry="2" />
<text  x="725.46" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="690.2" y="213" width="0.5" height="15.0" fill="rgb(254,214,50)" rx="2" ry="2" />
<text  x="693.24" y="223.5" ></text>
</g>
<g >
<title>setup_new_exec (6 samples, 0.25%)</title><rect x="1187.0" y="341" width="3.0" height="15.0" fill="rgb(250,106,25)" rx="2" ry="2" />
<text  x="1190.03" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (10 samples, 0.42%)</title><rect x="1112.2" y="181" width="4.9" height="15.0" fill="rgb(224,45,16)" rx="2" ry="2" />
<text  x="1115.16" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="664.9" y="261" width="0.5" height="15.0" fill="rgb(228,97,31)" rx="2" ry="2" />
<text  x="667.95" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.04%)</title><rect x="794.8" y="165" width="0.5" height="15.0" fill="rgb(211,161,46)" rx="2" ry="2" />
<text  x="797.85" y="175.5" ></text>
</g>
<g >
<title>perf_iterate_sb (1 samples, 0.04%)</title><rect x="1187.0" y="293" width="0.5" height="15.0" fill="rgb(237,219,27)" rx="2" ry="2" />
<text  x="1190.03" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (2 samples, 0.08%)</title><rect x="699.2" y="197" width="1.0" height="15.0" fill="rgb(208,228,18)" rx="2" ry="2" />
<text  x="702.16" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="1144.4" y="245" width="0.5" height="15.0" fill="rgb(250,228,42)" rx="2" ry="2" />
<text  x="1147.39" y="255.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (3 samples, 0.13%)</title><rect x="925.7" y="69" width="1.5" height="15.0" fill="rgb(219,81,19)" rx="2" ry="2" />
<text  x="928.74" y="79.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="603.0" y="277" width="0.5" height="15.0" fill="rgb(247,77,24)" rx="2" ry="2" />
<text  x="605.97" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (4 samples, 0.17%)</title><rect x="1167.2" y="373" width="2.0" height="15.0" fill="rgb(225,188,1)" rx="2" ry="2" />
<text  x="1170.19" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (4 samples, 0.17%)</title><rect x="745.3" y="133" width="2.0" height="15.0" fill="rgb(234,211,6)" rx="2" ry="2" />
<text  x="748.27" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (55 samples, 2.31%)</title><rect x="1034.8" y="181" width="27.3" height="15.0" fill="rgb(207,207,14)" rx="2" ry="2" />
<text  x="1037.82" y="191.5" >s..</text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (3 samples, 0.13%)</title><rect x="633.7" y="213" width="1.5" height="15.0" fill="rgb(230,185,27)" rx="2" ry="2" />
<text  x="636.71" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (8 samples, 0.34%)</title><rect x="1093.8" y="165" width="4.0" height="15.0" fill="rgb(235,39,7)" rx="2" ry="2" />
<text  x="1096.82" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (4 samples, 0.17%)</title><rect x="796.8" y="149" width="2.0" height="15.0" fill="rgb(211,18,1)" rx="2" ry="2" />
<text  x="799.83" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="742.8" y="165" width="0.5" height="15.0" fill="rgb(226,55,16)" rx="2" ry="2" />
<text  x="745.79" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (2 samples, 0.08%)</title><rect x="1106.2" y="165" width="1.0" height="15.0" fill="rgb(206,29,48)" rx="2" ry="2" />
<text  x="1109.21" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (248 samples, 10.42%)</title><rect x="309.5" y="293" width="122.9" height="15.0" fill="rgb(206,125,53)" rx="2" ry="2" />
<text  x="312.46" y="303.5" >__memmove_avx_u..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="554.4" y="293" width="0.5" height="15.0" fill="rgb(212,139,49)" rx="2" ry="2" />
<text  x="557.39" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (3 samples, 0.13%)</title><rect x="628.3" y="245" width="1.4" height="15.0" fill="rgb(237,93,13)" rx="2" ry="2" />
<text  x="631.26" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (50 samples, 2.10%)</title><rect x="550.9" y="325" width="24.8" height="15.0" fill="rgb(229,69,38)" rx="2" ry="2" />
<text  x="553.92" y="335.5" >s..</text>
</g>
<g >
<title>malloc (1 samples, 0.04%)</title><rect x="1085.4" y="133" width="0.5" height="15.0" fill="rgb(251,220,46)" rx="2" ry="2" />
<text  x="1088.39" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="984.7" y="117" width="0.5" height="15.0" fill="rgb(240,26,1)" rx="2" ry="2" />
<text  x="987.74" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1043.7" y="133" width="0.5" height="15.0" fill="rgb(212,149,10)" rx="2" ry="2" />
<text  x="1046.74" y="143.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="294.1" y="341" width="0.5" height="15.0" fill="rgb(251,63,29)" rx="2" ry="2" />
<text  x="297.09" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (2 samples, 0.08%)</title><rect x="1027.9" y="133" width="1.0" height="15.0" fill="rgb(245,26,48)" rx="2" ry="2" />
<text  x="1030.87" y="143.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (1 samples, 0.04%)</title><rect x="957.0" y="165" width="0.5" height="15.0" fill="rgb(224,193,5)" rx="2" ry="2" />
<text  x="959.97" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="581.7" y="293" width="0.5" height="15.0" fill="rgb(251,5,49)" rx="2" ry="2" />
<text  x="584.66" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="686.8" y="149" width="1.0" height="15.0" fill="rgb(229,219,10)" rx="2" ry="2" />
<text  x="689.76" y="159.5" ></text>
</g>
<g >
<title>mergesort (1,027 samples, 43.15%)</title><rect x="642.6" y="293" width="509.2" height="15.0" fill="rgb(215,111,48)" rx="2" ry="2" />
<text  x="645.64" y="303.5" >mergesort</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (31 samples, 1.30%)</title><rect x="696.7" y="229" width="15.4" height="15.0" fill="rgb(251,100,11)" rx="2" ry="2" />
<text  x="699.68" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="622.3" y="293" width="0.5" height="15.0" fill="rgb(242,205,13)" rx="2" ry="2" />
<text  x="625.31" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (2 samples, 0.08%)</title><rect x="1132.5" y="229" width="1.0" height="15.0" fill="rgb(242,114,8)" rx="2" ry="2" />
<text  x="1135.49" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1161.2" y="325" width="1.0" height="15.0" fill="rgb(230,89,47)" rx="2" ry="2" />
<text  x="1164.24" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="624.8" y="261" width="0.5" height="15.0" fill="rgb(224,205,15)" rx="2" ry="2" />
<text  x="627.79" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="806.7" y="133" width="0.5" height="15.0" fill="rgb(216,203,13)" rx="2" ry="2" />
<text  x="809.75" y="143.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (6 samples, 0.25%)</title><rect x="745.3" y="149" width="2.9" height="15.0" fill="rgb(227,49,52)" rx="2" ry="2" />
<text  x="748.27" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (2 samples, 0.08%)</title><rect x="1062.6" y="133" width="1.0" height="15.0" fill="rgb(242,114,27)" rx="2" ry="2" />
<text  x="1065.58" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (266 samples, 11.18%)</title><rect x="303.0" y="357" width="131.9" height="15.0" fill="rgb(246,39,36)" rx="2" ry="2" />
<text  x="306.02" y="367.5" >std::vector&lt;int,..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="638.7" y="277" width="0.5" height="15.0" fill="rgb(240,106,36)" rx="2" ry="2" />
<text  x="641.67" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (6 samples, 0.25%)</title><rect x="818.2" y="133" width="2.9" height="15.0" fill="rgb(243,118,44)" rx="2" ry="2" />
<text  x="821.15" y="143.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="1090.8" y="117" width="0.5" height="15.0" fill="rgb(242,120,10)" rx="2" ry="2" />
<text  x="1093.84" y="127.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (12 samples, 0.50%)</title><rect x="1004.6" y="133" width="5.9" height="15.0" fill="rgb(205,54,47)" rx="2" ry="2" />
<text  x="1007.57" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="511.7" y="325" width="1.0" height="15.0" fill="rgb(218,164,48)" rx="2" ry="2" />
<text  x="514.75" y="335.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (2 samples, 0.08%)</title><rect x="1117.1" y="149" width="1.0" height="15.0" fill="rgb(212,118,22)" rx="2" ry="2" />
<text  x="1120.12" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (19 samples, 0.80%)</title><rect x="700.2" y="213" width="9.4" height="15.0" fill="rgb(250,131,18)" rx="2" ry="2" />
<text  x="703.15" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (2 samples, 0.08%)</title><rect x="702.1" y="165" width="1.0" height="15.0" fill="rgb(230,88,45)" rx="2" ry="2" />
<text  x="705.13" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="980.8" y="101" width="0.5" height="15.0" fill="rgb(248,208,48)" rx="2" ry="2" />
<text  x="983.77" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (1 samples, 0.04%)</title><rect x="1104.2" y="133" width="0.5" height="15.0" fill="rgb(242,214,3)" rx="2" ry="2" />
<text  x="1107.23" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (2 samples, 0.08%)</title><rect x="1085.9" y="165" width="1.0" height="15.0" fill="rgb(230,56,40)" rx="2" ry="2" />
<text  x="1088.88" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (1 samples, 0.04%)</title><rect x="845.4" y="133" width="0.5" height="15.0" fill="rgb(226,74,30)" rx="2" ry="2" />
<text  x="848.42" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (1 samples, 0.04%)</title><rect x="609.4" y="261" width="0.5" height="15.0" fill="rgb(249,16,15)" rx="2" ry="2" />
<text  x="612.42" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="698.2" y="197" width="0.5" height="15.0" fill="rgb(250,90,28)" rx="2" ry="2" />
<text  x="701.17" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_nothrow_relocate (3 samples, 0.13%)</title><rect x="1092.3" y="165" width="1.5" height="15.0" fill="rgb(235,18,37)" rx="2" ry="2" />
<text  x="1095.33" y="175.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="621.3" y="261" width="0.5" height="15.0" fill="rgb(224,45,12)" rx="2" ry="2" />
<text  x="624.32" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (4 samples, 0.17%)</title><rect x="942.1" y="69" width="2.0" height="15.0" fill="rgb(209,171,31)" rx="2" ry="2" />
<text  x="945.10" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (7 samples, 0.29%)</title><rect x="618.8" y="293" width="3.5" height="15.0" fill="rgb(216,218,26)" rx="2" ry="2" />
<text  x="621.84" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="893.5" y="133" width="0.5" height="15.0" fill="rgb(223,50,28)" rx="2" ry="2" />
<text  x="896.51" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (2 samples, 0.08%)</title><rect x="895.5" y="149" width="1.0" height="15.0" fill="rgb(244,61,52)" rx="2" ry="2" />
<text  x="898.50" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (4 samples, 0.17%)</title><rect x="435.9" y="357" width="2.0" height="15.0" fill="rgb(221,107,30)" rx="2" ry="2" />
<text  x="438.89" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (1 samples, 0.04%)</title><rect x="437.9" y="325" width="0.5" height="15.0" fill="rgb(250,91,25)" rx="2" ry="2" />
<text  x="440.87" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="812.2" y="133" width="0.5" height="15.0" fill="rgb(238,216,7)" rx="2" ry="2" />
<text  x="815.20" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="707.1" y="133" width="0.5" height="15.0" fill="rgb(223,116,10)" rx="2" ry="2" />
<text  x="710.09" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (2 samples, 0.08%)</title><rect x="711.1" y="213" width="1.0" height="15.0" fill="rgb(225,147,3)" rx="2" ry="2" />
<text  x="714.06" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (3 samples, 0.13%)</title><rect x="953.5" y="101" width="1.5" height="15.0" fill="rgb(225,110,12)" rx="2" ry="2" />
<text  x="956.50" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="619.8" y="261" width="1.5" height="15.0" fill="rgb(253,19,39)" rx="2" ry="2" />
<text  x="622.83" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.04%)</title><rect x="893.0" y="85" width="0.5" height="15.0" fill="rgb(254,55,5)" rx="2" ry="2" />
<text  x="896.02" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (12 samples, 0.50%)</title><rect x="1052.2" y="149" width="5.9" height="15.0" fill="rgb(231,156,39)" rx="2" ry="2" />
<text  x="1055.17" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (33 samples, 1.39%)</title><rect x="911.4" y="149" width="16.3" height="15.0" fill="rgb(239,84,35)" rx="2" ry="2" />
<text  x="914.36" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (38 samples, 1.60%)</title><rect x="646.1" y="261" width="18.8" height="15.0" fill="rgb(254,108,0)" rx="2" ry="2" />
<text  x="649.11" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="10.0" y="405" width="0.5" height="15.0" fill="rgb(241,217,37)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="735.4" y="181" width="0.4" height="15.0" fill="rgb(246,41,15)" rx="2" ry="2" />
<text  x="738.35" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1108.7" y="197" width="1.0" height="15.0" fill="rgb(248,142,4)" rx="2" ry="2" />
<text  x="1111.69" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (10 samples, 0.42%)</title><rect x="1029.4" y="181" width="4.9" height="15.0" fill="rgb(205,60,1)" rx="2" ry="2" />
<text  x="1032.36" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1119.6" y="213" width="0.5" height="15.0" fill="rgb(236,214,48)" rx="2" ry="2" />
<text  x="1122.60" y="223.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1111.2" y="165" width="1.0" height="15.0" fill="rgb(235,160,0)" rx="2" ry="2" />
<text  x="1114.17" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (4 samples, 0.17%)</title><rect x="962.4" y="117" width="2.0" height="15.0" fill="rgb(208,118,38)" rx="2" ry="2" />
<text  x="965.43" y="127.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (1 samples, 0.04%)</title><rect x="1106.7" y="149" width="0.5" height="15.0" fill="rgb(252,164,53)" rx="2" ry="2" />
<text  x="1109.71" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (3 samples, 0.13%)</title><rect x="756.7" y="149" width="1.5" height="15.0" fill="rgb(254,86,13)" rx="2" ry="2" />
<text  x="759.67" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (9 samples, 0.38%)</title><rect x="872.7" y="133" width="4.5" height="15.0" fill="rgb(244,116,31)" rx="2" ry="2" />
<text  x="875.69" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="515.2" y="309" width="1.0" height="15.0" fill="rgb(209,122,23)" rx="2" ry="2" />
<text  x="518.22" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (26 samples, 1.09%)</title><rect x="898.0" y="149" width="12.9" height="15.0" fill="rgb(241,28,52)" rx="2" ry="2" />
<text  x="900.97" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22 samples, 0.92%)</title><rect x="558.8" y="245" width="11.0" height="15.0" fill="rgb(242,88,7)" rx="2" ry="2" />
<text  x="561.85" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="970.9" y="85" width="0.5" height="15.0" fill="rgb(213,66,25)" rx="2" ry="2" />
<text  x="973.86" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="295.1" y="341" width="0.5" height="15.0" fill="rgb(220,173,6)" rx="2" ry="2" />
<text  x="298.08" y="351.5" ></text>
</g>
<g >
<title>merge (45 samples, 1.89%)</title><rect x="578.7" y="325" width="22.3" height="15.0" fill="rgb(231,185,19)" rx="2" ry="2" />
<text  x="581.68" y="335.5" >m..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="665.4" y="229" width="0.5" height="15.0" fill="rgb(233,134,21)" rx="2" ry="2" />
<text  x="668.45" y="239.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="943.6" y="53" width="0.5" height="15.0" fill="rgb(237,88,30)" rx="2" ry="2" />
<text  x="946.59" y="63.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (9 samples, 0.38%)</title><rect x="1139.4" y="229" width="4.5" height="15.0" fill="rgb(223,97,54)" rx="2" ry="2" />
<text  x="1142.43" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (5 samples, 0.21%)</title><rect x="1162.7" y="357" width="2.5" height="15.0" fill="rgb(220,136,24)" rx="2" ry="2" />
<text  x="1165.73" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (16 samples, 0.67%)</title><rect x="750.7" y="197" width="8.0" height="15.0" fill="rgb(244,216,22)" rx="2" ry="2" />
<text  x="753.72" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (3 samples, 0.13%)</title><rect x="894.0" y="133" width="1.5" height="15.0" fill="rgb(208,221,9)" rx="2" ry="2" />
<text  x="897.01" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.04%)</title><rect x="438.9" y="357" width="0.5" height="15.0" fill="rgb(219,144,46)" rx="2" ry="2" />
<text  x="441.87" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="701.6" y="181" width="0.5" height="15.0" fill="rgb(237,219,19)" rx="2" ry="2" />
<text  x="704.64" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (1 samples, 0.04%)</title><rect x="969.4" y="101" width="0.5" height="15.0" fill="rgb(245,93,19)" rx="2" ry="2" />
<text  x="972.37" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (3 samples, 0.13%)</title><rect x="977.8" y="117" width="1.5" height="15.0" fill="rgb(207,142,37)" rx="2" ry="2" />
<text  x="980.80" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (1 samples, 0.04%)</title><rect x="959.0" y="149" width="0.5" height="15.0" fill="rgb(249,105,52)" rx="2" ry="2" />
<text  x="961.96" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (4 samples, 0.17%)</title><rect x="955.0" y="117" width="2.0" height="15.0" fill="rgb(205,153,42)" rx="2" ry="2" />
<text  x="957.99" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (3 samples, 0.13%)</title><rect x="1058.6" y="133" width="1.5" height="15.0" fill="rgb(243,121,35)" rx="2" ry="2" />
<text  x="1061.61" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (2 samples, 0.08%)</title><rect x="894.5" y="101" width="1.0" height="15.0" fill="rgb(224,7,25)" rx="2" ry="2" />
<text  x="897.50" y="111.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2 samples, 0.08%)</title><rect x="726.9" y="133" width="1.0" height="15.0" fill="rgb(227,132,39)" rx="2" ry="2" />
<text  x="729.92" y="143.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (1 samples, 0.04%)</title><rect x="1117.6" y="133" width="0.5" height="15.0" fill="rgb(253,158,17)" rx="2" ry="2" />
<text  x="1120.61" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1163.2" y="325" width="1.0" height="15.0" fill="rgb(223,133,8)" rx="2" ry="2" />
<text  x="1166.23" y="335.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.04%)</title><rect x="21.9" y="293" width="0.5" height="15.0" fill="rgb(243,147,36)" rx="2" ry="2" />
<text  x="24.90" y="303.5" ></text>
</g>
<g >
<title>__libc_csu_init (1 samples, 0.04%)</title><rect x="10.5" y="437" width="0.5" height="15.0" fill="rgb(241,82,18)" rx="2" ry="2" />
<text  x="13.50" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="703.1" y="149" width="0.5" height="15.0" fill="rgb(253,180,25)" rx="2" ry="2" />
<text  x="706.13" y="159.5" ></text>
</g>
<g >
<title>[merSort] (1 samples, 0.04%)</title><rect x="1078.4" y="117" width="0.5" height="15.0" fill="rgb(254,153,39)" rx="2" ry="2" />
<text  x="1081.45" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="1013.0" y="133" width="1.0" height="15.0" fill="rgb(220,143,21)" rx="2" ry="2" />
<text  x="1016.00" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (2 samples, 0.08%)</title><rect x="1130.0" y="181" width="1.0" height="15.0" fill="rgb(220,61,24)" rx="2" ry="2" />
<text  x="1133.01" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="784.9" y="149" width="1.0" height="15.0" fill="rgb(215,227,44)" rx="2" ry="2" />
<text  x="787.93" y="159.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.13%)</title><rect x="571.2" y="261" width="1.5" height="15.0" fill="rgb(242,158,44)" rx="2" ry="2" />
<text  x="574.24" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (1 samples, 0.04%)</title><rect x="703.1" y="165" width="0.5" height="15.0" fill="rgb(215,173,10)" rx="2" ry="2" />
<text  x="706.13" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (2 samples, 0.08%)</title><rect x="942.6" y="53" width="1.0" height="15.0" fill="rgb(245,190,5)" rx="2" ry="2" />
<text  x="945.60" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="734.4" y="181" width="0.5" height="15.0" fill="rgb(213,65,31)" rx="2" ry="2" />
<text  x="737.36" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="36.8" y="325" width="0.5" height="15.0" fill="rgb(228,188,49)" rx="2" ry="2" />
<text  x="39.77" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::get_allocator (1 samples, 0.04%)</title><rect x="965.4" y="133" width="0.5" height="15.0" fill="rgb(254,216,39)" rx="2" ry="2" />
<text  x="968.40" y="143.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (7 samples, 0.29%)</title><rect x="803.3" y="117" width="3.4" height="15.0" fill="rgb(209,57,22)" rx="2" ry="2" />
<text  x="806.28" y="127.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="804.3" y="101" width="0.5" height="15.0" fill="rgb(253,3,41)" rx="2" ry="2" />
<text  x="807.27" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="654.0" y="213" width="0.5" height="15.0" fill="rgb(245,116,39)" rx="2" ry="2" />
<text  x="657.04" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (1 samples, 0.04%)</title><rect x="861.8" y="53" width="0.5" height="15.0" fill="rgb(235,211,47)" rx="2" ry="2" />
<text  x="864.78" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (2 samples, 0.08%)</title><rect x="754.7" y="133" width="1.0" height="15.0" fill="rgb(242,204,4)" rx="2" ry="2" />
<text  x="757.69" y="143.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="292.6" y="325" width="1.0" height="15.0" fill="rgb(226,130,44)" rx="2" ry="2" />
<text  x="295.61" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (42 samples, 1.76%)</title><rect x="847.4" y="133" width="20.8" height="15.0" fill="rgb(210,106,25)" rx="2" ry="2" />
<text  x="850.40" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (2 samples, 0.08%)</title><rect x="1106.2" y="181" width="1.0" height="15.0" fill="rgb(252,150,24)" rx="2" ry="2" />
<text  x="1109.21" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1 samples, 0.04%)</title><rect x="692.7" y="245" width="0.5" height="15.0" fill="rgb(205,117,15)" rx="2" ry="2" />
<text  x="695.71" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.04%)</title><rect x="1031.8" y="133" width="0.5" height="15.0" fill="rgb(242,210,1)" rx="2" ry="2" />
<text  x="1034.84" y="143.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (6 samples, 0.25%)</title><rect x="1006.1" y="85" width="2.9" height="15.0" fill="rgb(252,171,53)" rx="2" ry="2" />
<text  x="1009.06" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (6 samples, 0.25%)</title><rect x="890.0" y="85" width="3.0" height="15.0" fill="rgb(221,3,33)" rx="2" ry="2" />
<text  x="893.04" y="95.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="437.9" y="213" width="0.5" height="15.0" fill="rgb(232,219,52)" rx="2" ry="2" />
<text  x="440.87" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (2 samples, 0.08%)</title><rect x="868.7" y="149" width="1.0" height="15.0" fill="rgb(249,212,52)" rx="2" ry="2" />
<text  x="871.72" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (5 samples, 0.21%)</title><rect x="734.9" y="197" width="2.4" height="15.0" fill="rgb(227,56,20)" rx="2" ry="2" />
<text  x="737.86" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (2 samples, 0.08%)</title><rect x="1024.4" y="117" width="1.0" height="15.0" fill="rgb(206,37,9)" rx="2" ry="2" />
<text  x="1027.40" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="1012.0" y="133" width="0.5" height="15.0" fill="rgb(212,22,37)" rx="2" ry="2" />
<text  x="1015.01" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="784.4" y="149" width="0.5" height="15.0" fill="rgb(217,73,34)" rx="2" ry="2" />
<text  x="787.44" y="159.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="836.0" y="133" width="0.5" height="15.0" fill="rgb(242,175,44)" rx="2" ry="2" />
<text  x="839.00" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (1 samples, 0.04%)</title><rect x="1103.7" y="181" width="0.5" height="15.0" fill="rgb(221,91,20)" rx="2" ry="2" />
<text  x="1106.73" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (1 samples, 0.04%)</title><rect x="1153.8" y="245" width="0.5" height="15.0" fill="rgb(237,104,9)" rx="2" ry="2" />
<text  x="1156.81" y="255.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (1 samples, 0.04%)</title><rect x="866.2" y="69" width="0.5" height="15.0" fill="rgb(207,39,35)" rx="2" ry="2" />
<text  x="869.24" y="79.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="1108.2" y="197" width="0.5" height="15.0" fill="rgb(235,228,30)" rx="2" ry="2" />
<text  x="1111.19" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="911.9" y="133" width="0.5" height="15.0" fill="rgb(232,109,9)" rx="2" ry="2" />
<text  x="914.86" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (11 samples, 0.46%)</title><rect x="1126.0" y="213" width="5.5" height="15.0" fill="rgb(216,119,12)" rx="2" ry="2" />
<text  x="1129.04" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (17 samples, 0.71%)</title><rect x="948.5" y="149" width="8.5" height="15.0" fill="rgb(249,184,25)" rx="2" ry="2" />
<text  x="951.55" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (39 samples, 1.64%)</title><rect x="972.8" y="165" width="19.4" height="15.0" fill="rgb(242,70,41)" rx="2" ry="2" />
<text  x="975.84" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1140.4" y="197" width="0.5" height="15.0" fill="rgb(232,8,8)" rx="2" ry="2" />
<text  x="1143.42" y="207.5" ></text>
</g>
<g >
<title>merge (61 samples, 2.56%)</title><rect x="761.1" y="197" width="30.3" height="15.0" fill="rgb(231,203,37)" rx="2" ry="2" />
<text  x="764.13" y="207.5" >me..</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="21.9" y="181" width="0.5" height="15.0" fill="rgb(230,143,45)" rx="2" ry="2" />
<text  x="24.90" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="434.9" y="341" width="0.5" height="15.0" fill="rgb(241,5,13)" rx="2" ry="2" />
<text  x="437.90" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="34.3" y="357" width="1.0" height="15.0" fill="rgb(216,175,33)" rx="2" ry="2" />
<text  x="37.29" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (3 samples, 0.13%)</title><rect x="1117.1" y="181" width="1.5" height="15.0" fill="rgb(245,113,24)" rx="2" ry="2" />
<text  x="1120.12" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (14 samples, 0.59%)</title><rect x="741.8" y="181" width="6.9" height="15.0" fill="rgb(211,162,12)" rx="2" ry="2" />
<text  x="744.80" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="795.3" y="165" width="0.5" height="15.0" fill="rgb(249,115,5)" rx="2" ry="2" />
<text  x="798.34" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (19 samples, 0.80%)</title><rect x="627.3" y="261" width="9.4" height="15.0" fill="rgb(215,190,6)" rx="2" ry="2" />
<text  x="630.27" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="629.3" y="229" width="0.4" height="15.0" fill="rgb(249,52,22)" rx="2" ry="2" />
<text  x="632.25" y="239.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (5 samples, 0.21%)</title><rect x="1099.3" y="165" width="2.4" height="15.0" fill="rgb(221,221,1)" rx="2" ry="2" />
<text  x="1102.27" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.13%)</title><rect x="599.5" y="309" width="1.5" height="15.0" fill="rgb(224,81,17)" rx="2" ry="2" />
<text  x="602.50" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="514.7" y="309" width="0.5" height="15.0" fill="rgb(228,25,20)" rx="2" ry="2" />
<text  x="517.72" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (14 samples, 0.59%)</title><rect x="1125.1" y="229" width="6.9" height="15.0" fill="rgb(205,31,4)" rx="2" ry="2" />
<text  x="1128.05" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (515 samples, 21.64%)</title><rect x="37.3" y="325" width="255.3" height="15.0" fill="rgb(226,50,30)" rx="2" ry="2" />
<text  x="40.27" y="335.5" >std::__copy_move_a&lt;true, int*, int*&gt;</text>
</g>
<g >
<title>merge (48 samples, 2.02%)</title><rect x="693.7" y="245" width="23.8" height="15.0" fill="rgb(237,119,42)" rx="2" ry="2" />
<text  x="696.71" y="255.5" >m..</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="1043.2" y="149" width="0.5" height="15.0" fill="rgb(239,147,48)" rx="2" ry="2" />
<text  x="1046.24" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (3 samples, 0.13%)</title><rect x="768.6" y="149" width="1.5" height="15.0" fill="rgb(253,5,39)" rx="2" ry="2" />
<text  x="771.57" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="917.8" y="117" width="0.5" height="15.0" fill="rgb(221,222,23)" rx="2" ry="2" />
<text  x="920.81" y="127.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (1 samples, 0.04%)</title><rect x="951.0" y="117" width="0.5" height="15.0" fill="rgb(249,162,8)" rx="2" ry="2" />
<text  x="954.03" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="1154.8" y="293" width="0.5" height="15.0" fill="rgb(227,176,33)" rx="2" ry="2" />
<text  x="1157.80" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (3 samples, 0.13%)</title><rect x="1079.9" y="197" width="1.5" height="15.0" fill="rgb(242,2,15)" rx="2" ry="2" />
<text  x="1082.93" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (5 samples, 0.21%)</title><rect x="1046.2" y="133" width="2.5" height="15.0" fill="rgb(231,176,30)" rx="2" ry="2" />
<text  x="1049.22" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1153.8" y="277" width="0.5" height="15.0" fill="rgb(220,60,13)" rx="2" ry="2" />
<text  x="1156.81" y="287.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="885.6" y="69" width="0.5" height="15.0" fill="rgb(214,70,15)" rx="2" ry="2" />
<text  x="888.58" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (3 samples, 0.13%)</title><rect x="758.7" y="197" width="1.4" height="15.0" fill="rgb(244,121,16)" rx="2" ry="2" />
<text  x="761.66" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (2 samples, 0.08%)</title><rect x="1033.3" y="149" width="1.0" height="15.0" fill="rgb(222,229,47)" rx="2" ry="2" />
<text  x="1036.33" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="1121.1" y="197" width="0.5" height="15.0" fill="rgb(237,9,23)" rx="2" ry="2" />
<text  x="1124.08" y="207.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (2 samples, 0.08%)</title><rect x="661.0" y="197" width="1.0" height="15.0" fill="rgb(244,218,32)" rx="2" ry="2" />
<text  x="663.98" y="207.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.04%)</title><rect x="30.8" y="405" width="0.5" height="15.0" fill="rgb(233,219,24)" rx="2" ry="2" />
<text  x="33.82" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="1152.3" y="277" width="1.5" height="15.0" fill="rgb(205,35,25)" rx="2" ry="2" />
<text  x="1155.32" y="287.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (10 samples, 0.42%)</title><rect x="1066.1" y="149" width="4.9" height="15.0" fill="rgb(211,44,18)" rx="2" ry="2" />
<text  x="1069.05" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (3 samples, 0.13%)</title><rect x="1122.1" y="213" width="1.5" height="15.0" fill="rgb(222,55,54)" rx="2" ry="2" />
<text  x="1125.08" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="1042.7" y="117" width="0.5" height="15.0" fill="rgb(240,4,24)" rx="2" ry="2" />
<text  x="1045.75" y="127.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="944.6" y="69" width="0.5" height="15.0" fill="rgb(209,106,31)" rx="2" ry="2" />
<text  x="947.58" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (6 samples, 0.25%)</title><rect x="1148.8" y="277" width="3.0" height="15.0" fill="rgb(205,85,33)" rx="2" ry="2" />
<text  x="1151.85" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="550.4" y="325" width="0.5" height="15.0" fill="rgb(225,144,48)" rx="2" ry="2" />
<text  x="553.42" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.08%)</title><rect x="1124.1" y="229" width="1.0" height="15.0" fill="rgb(243,34,51)" rx="2" ry="2" />
<text  x="1127.06" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="721.5" y="197" width="1.0" height="15.0" fill="rgb(208,4,21)" rx="2" ry="2" />
<text  x="724.47" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1138.4" y="213" width="1.0" height="15.0" fill="rgb(216,18,35)" rx="2" ry="2" />
<text  x="1141.44" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="548.9" y="341" width="0.5" height="15.0" fill="rgb(207,101,16)" rx="2" ry="2" />
<text  x="551.93" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="1119.1" y="181" width="0.5" height="15.0" fill="rgb(225,139,38)" rx="2" ry="2" />
<text  x="1122.10" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (29 samples, 1.22%)</title><rect x="1014.5" y="165" width="14.4" height="15.0" fill="rgb(235,88,13)" rx="2" ry="2" />
<text  x="1017.49" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (16 samples, 0.67%)</title><rect x="782.5" y="165" width="7.9" height="15.0" fill="rgb(208,35,24)" rx="2" ry="2" />
<text  x="785.45" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="1121.6" y="101" width="0.5" height="15.0" fill="rgb(225,211,54)" rx="2" ry="2" />
<text  x="1124.58" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (5 samples, 0.21%)</title><rect x="1077.0" y="149" width="2.4" height="15.0" fill="rgb(225,156,27)" rx="2" ry="2" />
<text  x="1079.96" y="159.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (1 samples, 0.04%)</title><rect x="944.1" y="69" width="0.5" height="15.0" fill="rgb(231,103,0)" rx="2" ry="2" />
<text  x="947.08" y="79.5" ></text>
</g>
<g >
<title>mergesort (779 samples, 32.73%)</title><rect x="737.3" y="229" width="386.3" height="15.0" fill="rgb(218,228,8)" rx="2" ry="2" />
<text  x="740.34" y="239.5" >mergesort</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="572.2" y="245" width="0.5" height="15.0" fill="rgb(226,116,5)" rx="2" ry="2" />
<text  x="575.24" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (4 samples, 0.17%)</title><rect x="920.3" y="101" width="2.0" height="15.0" fill="rgb(226,154,33)" rx="2" ry="2" />
<text  x="923.29" y="111.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (2 samples, 0.08%)</title><rect x="505.8" y="293" width="1.0" height="15.0" fill="rgb(254,100,22)" rx="2" ry="2" />
<text  x="508.80" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="730.9" y="165" width="0.5" height="15.0" fill="rgb(244,48,19)" rx="2" ry="2" />
<text  x="733.89" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (2 samples, 0.08%)</title><rect x="668.9" y="245" width="1.0" height="15.0" fill="rgb(212,76,38)" rx="2" ry="2" />
<text  x="671.92" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="434.4" y="293" width="0.5" height="15.0" fill="rgb(254,116,25)" rx="2" ry="2" />
<text  x="437.40" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (1 samples, 0.04%)</title><rect x="906.4" y="85" width="0.5" height="15.0" fill="rgb(242,164,22)" rx="2" ry="2" />
<text  x="909.40" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (22 samples, 0.92%)</title><rect x="780.0" y="181" width="10.9" height="15.0" fill="rgb(253,11,29)" rx="2" ry="2" />
<text  x="782.97" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (1 samples, 0.04%)</title><rect x="852.9" y="101" width="0.5" height="15.0" fill="rgb(240,210,35)" rx="2" ry="2" />
<text  x="855.86" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1143.9" y="245" width="0.5" height="15.0" fill="rgb(236,156,37)" rx="2" ry="2" />
<text  x="1146.89" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1044.2" y="133" width="1.0" height="15.0" fill="rgb(241,148,12)" rx="2" ry="2" />
<text  x="1047.24" y="143.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (5 samples, 0.21%)</title><rect x="1099.3" y="149" width="2.4" height="15.0" fill="rgb(224,81,7)" rx="2" ry="2" />
<text  x="1102.27" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="1157.3" y="293" width="0.5" height="15.0" fill="rgb(214,222,15)" rx="2" ry="2" />
<text  x="1160.28" y="303.5" ></text>
</g>
<g >
<title>[merSort] (1 samples, 0.04%)</title><rect x="954.0" y="85" width="0.5" height="15.0" fill="rgb(206,152,18)" rx="2" ry="2" />
<text  x="957.00" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (10 samples, 0.42%)</title><rect x="905.9" y="117" width="5.0" height="15.0" fill="rgb(205,62,14)" rx="2" ry="2" />
<text  x="908.91" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="1097.8" y="181" width="0.5" height="15.0" fill="rgb(240,172,31)" rx="2" ry="2" />
<text  x="1100.78" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="1110.2" y="181" width="0.5" height="15.0" fill="rgb(238,220,10)" rx="2" ry="2" />
<text  x="1113.18" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="841.9" y="117" width="0.5" height="15.0" fill="rgb(234,205,2)" rx="2" ry="2" />
<text  x="844.95" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (8 samples, 0.34%)</title><rect x="1030.4" y="165" width="3.9" height="15.0" fill="rgb(235,43,40)" rx="2" ry="2" />
<text  x="1033.35" y="175.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (2 samples, 0.08%)</title><rect x="1130.0" y="149" width="1.0" height="15.0" fill="rgb(253,72,35)" rx="2" ry="2" />
<text  x="1133.01" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (139 samples, 5.84%)</title><rect x="439.4" y="357" width="68.9" height="15.0" fill="rgb(244,171,16)" rx="2" ry="2" />
<text  x="442.36" y="367.5" >std::ve..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (1 samples, 0.04%)</title><rect x="893.0" y="133" width="0.5" height="15.0" fill="rgb(214,119,22)" rx="2" ry="2" />
<text  x="896.02" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="872.2" y="117" width="0.5" height="15.0" fill="rgb(217,40,13)" rx="2" ry="2" />
<text  x="875.19" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="1084.4" y="165" width="0.5" height="15.0" fill="rgb(241,153,34)" rx="2" ry="2" />
<text  x="1087.39" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="35.3" y="357" width="1.0" height="15.0" fill="rgb(251,209,50)" rx="2" ry="2" />
<text  x="38.29" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="638.2" y="245" width="0.5" height="15.0" fill="rgb(230,97,15)" rx="2" ry="2" />
<text  x="641.18" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (2 samples, 0.08%)</title><rect x="1134.5" y="213" width="1.0" height="15.0" fill="rgb(247,98,28)" rx="2" ry="2" />
<text  x="1137.47" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (2 samples, 0.08%)</title><rect x="634.2" y="197" width="1.0" height="15.0" fill="rgb(250,93,51)" rx="2" ry="2" />
<text  x="637.21" y="207.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="854.3" y="85" width="0.5" height="15.0" fill="rgb(235,225,34)" rx="2" ry="2" />
<text  x="857.34" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (2 samples, 0.08%)</title><rect x="846.4" y="133" width="1.0" height="15.0" fill="rgb(208,209,6)" rx="2" ry="2" />
<text  x="849.41" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="631.7" y="197" width="0.5" height="15.0" fill="rgb(254,79,41)" rx="2" ry="2" />
<text  x="634.73" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (3 samples, 0.13%)</title><rect x="1128.5" y="197" width="1.5" height="15.0" fill="rgb(231,35,21)" rx="2" ry="2" />
<text  x="1131.52" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="973.3" y="149" width="0.5" height="15.0" fill="rgb(224,134,25)" rx="2" ry="2" />
<text  x="976.34" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (5 samples, 0.21%)</title><rect x="444.8" y="325" width="2.5" height="15.0" fill="rgb(243,12,51)" rx="2" ry="2" />
<text  x="447.82" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (1 samples, 0.04%)</title><rect x="1004.1" y="133" width="0.5" height="15.0" fill="rgb(208,105,33)" rx="2" ry="2" />
<text  x="1007.08" y="143.5" ></text>
</g>
<g >
<title>std::move&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;&amp;&gt; (1 samples, 0.04%)</title><rect x="897.0" y="149" width="0.5" height="15.0" fill="rgb(206,116,2)" rx="2" ry="2" />
<text  x="899.98" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (6 samples, 0.25%)</title><rect x="900.0" y="117" width="2.9" height="15.0" fill="rgb(225,10,20)" rx="2" ry="2" />
<text  x="902.96" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (12 samples, 0.50%)</title><rect x="752.7" y="181" width="6.0" height="15.0" fill="rgb(208,27,40)" rx="2" ry="2" />
<text  x="755.71" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (1 samples, 0.04%)</title><rect x="1132.5" y="197" width="0.5" height="15.0" fill="rgb(249,198,29)" rx="2" ry="2" />
<text  x="1135.49" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="1128.0" y="197" width="0.5" height="15.0" fill="rgb(206,89,13)" rx="2" ry="2" />
<text  x="1131.03" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (1 samples, 0.04%)</title><rect x="1144.9" y="261" width="0.5" height="15.0" fill="rgb(221,217,39)" rx="2" ry="2" />
<text  x="1147.88" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="441.3" y="325" width="0.5" height="15.0" fill="rgb(235,63,23)" rx="2" ry="2" />
<text  x="444.34" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (2 samples, 0.08%)</title><rect x="1114.6" y="133" width="1.0" height="15.0" fill="rgb(235,61,28)" rx="2" ry="2" />
<text  x="1117.64" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (2 samples, 0.08%)</title><rect x="853.8" y="101" width="1.0" height="15.0" fill="rgb(208,95,51)" rx="2" ry="2" />
<text  x="856.85" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="724.9" y="181" width="1.0" height="15.0" fill="rgb(210,155,46)" rx="2" ry="2" />
<text  x="727.94" y="191.5" ></text>
</g>
<g >
<title>std::istream::operator&gt;&gt; (1 samples, 0.04%)</title><rect x="1170.7" y="421" width="0.5" height="15.0" fill="rgb(224,6,20)" rx="2" ry="2" />
<text  x="1173.66" y="431.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="1109.2" y="165" width="0.5" height="15.0" fill="rgb(237,189,37)" rx="2" ry="2" />
<text  x="1112.18" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="296.1" y="357" width="1.0" height="15.0" fill="rgb(244,151,48)" rx="2" ry="2" />
<text  x="299.08" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (5 samples, 0.21%)</title><rect x="1145.4" y="261" width="2.5" height="15.0" fill="rgb(244,146,0)" rx="2" ry="2" />
<text  x="1148.38" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (2 samples, 0.08%)</title><rect x="294.6" y="357" width="1.0" height="15.0" fill="rgb(236,46,34)" rx="2" ry="2" />
<text  x="297.59" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="977.3" y="117" width="0.5" height="15.0" fill="rgb(211,99,23)" rx="2" ry="2" />
<text  x="980.30" y="127.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (1 samples, 0.04%)</title><rect x="631.2" y="197" width="0.5" height="15.0" fill="rgb(248,125,18)" rx="2" ry="2" />
<text  x="634.24" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (6 samples, 0.25%)</title><rect x="1088.9" y="165" width="2.9" height="15.0" fill="rgb(231,42,0)" rx="2" ry="2" />
<text  x="1091.86" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (4 samples, 0.17%)</title><rect x="1010.5" y="149" width="2.0" height="15.0" fill="rgb(239,201,35)" rx="2" ry="2" />
<text  x="1013.52" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (1 samples, 0.04%)</title><rect x="756.2" y="133" width="0.5" height="15.0" fill="rgb(206,208,6)" rx="2" ry="2" />
<text  x="759.18" y="143.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (1 samples, 0.04%)</title><rect x="1144.9" y="245" width="0.5" height="15.0" fill="rgb(224,53,5)" rx="2" ry="2" />
<text  x="1147.88" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (4 samples, 0.17%)</title><rect x="903.9" y="117" width="2.0" height="15.0" fill="rgb(228,8,28)" rx="2" ry="2" />
<text  x="906.92" y="127.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.04%)</title><rect x="1186.0" y="453" width="0.5" height="15.0" fill="rgb(218,64,11)" rx="2" ry="2" />
<text  x="1189.03" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="768.1" y="149" width="0.5" height="15.0" fill="rgb(207,60,47)" rx="2" ry="2" />
<text  x="771.08" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="575.7" y="325" width="0.5" height="15.0" fill="rgb(229,10,32)" rx="2" ry="2" />
<text  x="578.71" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (1 samples, 0.04%)</title><rect x="906.4" y="101" width="0.5" height="15.0" fill="rgb(214,14,13)" rx="2" ry="2" />
<text  x="909.40" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2 samples, 0.08%)</title><rect x="508.3" y="357" width="1.0" height="15.0" fill="rgb(250,184,4)" rx="2" ry="2" />
<text  x="511.28" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::destroy&lt;int&gt; (1 samples, 0.04%)</title><rect x="802.8" y="133" width="0.5" height="15.0" fill="rgb(232,32,7)" rx="2" ry="2" />
<text  x="805.78" y="143.5" ></text>
</g>
<g >
<title>merge (40 samples, 1.68%)</title><rect x="622.8" y="293" width="19.8" height="15.0" fill="rgb(250,61,27)" rx="2" ry="2" />
<text  x="625.81" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (6 samples, 0.25%)</title><rect x="881.6" y="101" width="3.0" height="15.0" fill="rgb(227,45,32)" rx="2" ry="2" />
<text  x="884.61" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="804.3" y="85" width="0.5" height="15.0" fill="rgb(235,1,18)" rx="2" ry="2" />
<text  x="807.27" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (2 samples, 0.08%)</title><rect x="641.2" y="245" width="0.9" height="15.0" fill="rgb(249,206,16)" rx="2" ry="2" />
<text  x="644.15" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="715.0" y="213" width="1.5" height="15.0" fill="rgb(239,3,41)" rx="2" ry="2" />
<text  x="718.03" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (1 samples, 0.04%)</title><rect x="897.5" y="149" width="0.5" height="15.0" fill="rgb(213,192,43)" rx="2" ry="2" />
<text  x="900.48" y="159.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="1096.3" y="117" width="0.5" height="15.0" fill="rgb(211,121,22)" rx="2" ry="2" />
<text  x="1099.29" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (2 samples, 0.08%)</title><rect x="1024.4" y="133" width="1.0" height="15.0" fill="rgb(209,200,9)" rx="2" ry="2" />
<text  x="1027.40" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (5 samples, 0.21%)</title><rect x="1025.4" y="133" width="2.5" height="15.0" fill="rgb(253,92,34)" rx="2" ry="2" />
<text  x="1028.39" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (2 samples, 0.08%)</title><rect x="964.4" y="117" width="1.0" height="15.0" fill="rgb(231,67,26)" rx="2" ry="2" />
<text  x="967.41" y="127.5" ></text>
</g>
<g >
<title>merge (285 samples, 11.97%)</title><rect x="297.1" y="389" width="141.3" height="15.0" fill="rgb(232,89,3)" rx="2" ry="2" />
<text  x="300.07" y="399.5" >merge</text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (1 samples, 0.04%)</title><rect x="803.8" y="85" width="0.5" height="15.0" fill="rgb(251,199,53)" rx="2" ry="2" />
<text  x="806.77" y="95.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.13%)</title><rect x="745.3" y="117" width="1.5" height="15.0" fill="rgb(231,70,43)" rx="2" ry="2" />
<text  x="748.27" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1146.4" y="229" width="0.5" height="15.0" fill="rgb(224,100,9)" rx="2" ry="2" />
<text  x="1149.37" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (3 samples, 0.13%)</title><rect x="998.6" y="133" width="1.5" height="15.0" fill="rgb(206,107,21)" rx="2" ry="2" />
<text  x="1001.62" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (1 samples, 0.04%)</title><rect x="1145.9" y="213" width="0.5" height="15.0" fill="rgb(220,49,20)" rx="2" ry="2" />
<text  x="1148.87" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1159.3" y="309" width="1.0" height="15.0" fill="rgb(217,124,7)" rx="2" ry="2" />
<text  x="1162.26" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (5 samples, 0.21%)</title><rect x="652.1" y="229" width="2.4" height="15.0" fill="rgb(233,34,29)" rx="2" ry="2" />
<text  x="655.06" y="239.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1125.5" y="213" width="0.5" height="15.0" fill="rgb(249,95,32)" rx="2" ry="2" />
<text  x="1128.55" y="223.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="1159.8" y="277" width="0.5" height="15.0" fill="rgb(225,53,4)" rx="2" ry="2" />
<text  x="1162.76" y="287.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.13%)</title><rect x="632.2" y="213" width="1.5" height="15.0" fill="rgb(227,162,18)" rx="2" ry="2" />
<text  x="635.23" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (2 samples, 0.08%)</title><rect x="970.4" y="101" width="1.0" height="15.0" fill="rgb(228,63,51)" rx="2" ry="2" />
<text  x="973.36" y="111.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.04%)</title><rect x="21.9" y="309" width="0.5" height="15.0" fill="rgb(218,3,36)" rx="2" ry="2" />
<text  x="24.90" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.13%)</title><rect x="605.5" y="277" width="1.4" height="15.0" fill="rgb(235,186,46)" rx="2" ry="2" />
<text  x="608.45" y="287.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (11 samples, 0.46%)</title><rect x="940.1" y="117" width="5.5" height="15.0" fill="rgb(222,39,44)" rx="2" ry="2" />
<text  x="943.12" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="878.1" y="117" width="0.5" height="15.0" fill="rgb(230,76,49)" rx="2" ry="2" />
<text  x="881.14" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="1131.5" y="213" width="0.5" height="15.0" fill="rgb(215,75,36)" rx="2" ry="2" />
<text  x="1134.50" y="223.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="734.4" y="165" width="0.5" height="15.0" fill="rgb(208,29,49)" rx="2" ry="2" />
<text  x="737.36" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.04%)</title><rect x="738.8" y="197" width="0.5" height="15.0" fill="rgb(220,169,8)" rx="2" ry="2" />
<text  x="741.82" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (2 samples, 0.08%)</title><rect x="593.1" y="229" width="1.0" height="15.0" fill="rgb(251,25,0)" rx="2" ry="2" />
<text  x="596.06" y="239.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="862.3" y="69" width="0.5" height="15.0" fill="rgb(252,182,3)" rx="2" ry="2" />
<text  x="865.28" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (25 samples, 1.05%)</title><rect x="898.5" y="133" width="12.4" height="15.0" fill="rgb(243,168,49)" rx="2" ry="2" />
<text  x="901.47" y="143.5" ></text>
</g>
<g >
<title>do_iter_write (1 samples, 0.04%)</title><rect x="10.0" y="341" width="0.5" height="15.0" fill="rgb(231,9,16)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (17 samples, 0.71%)</title><rect x="680.3" y="213" width="8.4" height="15.0" fill="rgb(235,149,26)" rx="2" ry="2" />
<text  x="683.32" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (3 samples, 0.13%)</title><rect x="1117.1" y="165" width="1.5" height="15.0" fill="rgb(224,87,18)" rx="2" ry="2" />
<text  x="1120.12" y="175.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="918.8" y="101" width="0.5" height="15.0" fill="rgb(231,78,8)" rx="2" ry="2" />
<text  x="921.80" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1159.8" y="293" width="0.5" height="15.0" fill="rgb(245,85,19)" rx="2" ry="2" />
<text  x="1162.76" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (12 samples, 0.50%)</title><rect x="1004.6" y="117" width="5.9" height="15.0" fill="rgb(235,6,23)" rx="2" ry="2" />
<text  x="1007.57" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (10 samples, 0.42%)</title><rect x="1075.0" y="165" width="4.9" height="15.0" fill="rgb(215,67,12)" rx="2" ry="2" />
<text  x="1077.97" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="1169.7" y="405" width="0.5" height="15.0" fill="rgb(215,11,26)" rx="2" ry="2" />
<text  x="1172.67" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (1 samples, 0.04%)</title><rect x="1065.1" y="133" width="0.5" height="15.0" fill="rgb(212,142,1)" rx="2" ry="2" />
<text  x="1068.06" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="676.8" y="213" width="0.5" height="15.0" fill="rgb(225,21,43)" rx="2" ry="2" />
<text  x="679.85" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="734.4" y="197" width="0.5" height="15.0" fill="rgb(243,114,37)" rx="2" ry="2" />
<text  x="737.36" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (1 samples, 0.04%)</title><rect x="1102.2" y="181" width="0.5" height="15.0" fill="rgb(249,17,1)" rx="2" ry="2" />
<text  x="1105.24" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (1 samples, 0.04%)</title><rect x="1132.5" y="181" width="0.5" height="15.0" fill="rgb(214,10,29)" rx="2" ry="2" />
<text  x="1135.49" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="674.9" y="213" width="0.5" height="15.0" fill="rgb(210,64,50)" rx="2" ry="2" />
<text  x="677.87" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="575.2" y="293" width="0.5" height="15.0" fill="rgb(214,133,6)" rx="2" ry="2" />
<text  x="578.21" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (3 samples, 0.13%)</title><rect x="602.0" y="293" width="1.5" height="15.0" fill="rgb(233,116,29)" rx="2" ry="2" />
<text  x="604.98" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (3 samples, 0.13%)</title><rect x="907.4" y="69" width="1.5" height="15.0" fill="rgb(247,224,24)" rx="2" ry="2" />
<text  x="910.39" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (1 samples, 0.04%)</title><rect x="1162.2" y="341" width="0.5" height="15.0" fill="rgb(253,66,47)" rx="2" ry="2" />
<text  x="1165.24" y="351.5" ></text>
</g>
<g >
<title>mergesort (1,237 samples, 51.97%)</title><rect x="549.4" y="357" width="613.3" height="15.0" fill="rgb(249,25,40)" rx="2" ry="2" />
<text  x="552.43" y="367.5" >mergesort</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (2 samples, 0.08%)</title><rect x="947.1" y="117" width="1.0" height="15.0" fill="rgb(233,171,20)" rx="2" ry="2" />
<text  x="950.06" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (3 samples, 0.13%)</title><rect x="967.4" y="117" width="1.5" height="15.0" fill="rgb(210,21,7)" rx="2" ry="2" />
<text  x="970.39" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (39 samples, 1.64%)</title><rect x="555.9" y="309" width="19.3" height="15.0" fill="rgb(213,89,50)" rx="2" ry="2" />
<text  x="558.87" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="777.5" y="149" width="0.5" height="15.0" fill="rgb(235,144,50)" rx="2" ry="2" />
<text  x="780.50" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="1149.3" y="261" width="1.5" height="15.0" fill="rgb(207,42,48)" rx="2" ry="2" />
<text  x="1152.34" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (1 samples, 0.04%)</title><rect x="1162.2" y="325" width="0.5" height="15.0" fill="rgb(245,201,50)" rx="2" ry="2" />
<text  x="1165.24" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (3 samples, 0.13%)</title><rect x="1043.7" y="149" width="1.5" height="15.0" fill="rgb(231,222,37)" rx="2" ry="2" />
<text  x="1046.74" y="159.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.04%)</title><rect x="24.9" y="405" width="0.5" height="15.0" fill="rgb(242,137,37)" rx="2" ry="2" />
<text  x="27.87" y="415.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (4 samples, 0.17%)</title><rect x="594.1" y="245" width="1.9" height="15.0" fill="rgb(222,44,23)" rx="2" ry="2" />
<text  x="597.05" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (2 samples, 0.08%)</title><rect x="820.1" y="101" width="1.0" height="15.0" fill="rgb(254,130,14)" rx="2" ry="2" />
<text  x="823.13" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (1 samples, 0.04%)</title><rect x="1135.5" y="245" width="0.5" height="15.0" fill="rgb(247,170,4)" rx="2" ry="2" />
<text  x="1138.46" y="255.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.13%)</title><rect x="540.0" y="277" width="1.5" height="15.0" fill="rgb(213,41,8)" rx="2" ry="2" />
<text  x="543.01" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (7 samples, 0.29%)</title><rect x="838.5" y="117" width="3.4" height="15.0" fill="rgb(251,29,47)" rx="2" ry="2" />
<text  x="841.48" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (1 samples, 0.04%)</title><rect x="998.1" y="149" width="0.5" height="15.0" fill="rgb(228,198,3)" rx="2" ry="2" />
<text  x="1001.13" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (6 samples, 0.25%)</title><rect x="677.3" y="213" width="3.0" height="15.0" fill="rgb(252,108,3)" rx="2" ry="2" />
<text  x="680.34" y="223.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="1067.0" y="117" width="0.5" height="15.0" fill="rgb(226,168,14)" rx="2" ry="2" />
<text  x="1070.04" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (2 samples, 0.08%)</title><rect x="1042.3" y="149" width="0.9" height="15.0" fill="rgb(236,90,19)" rx="2" ry="2" />
<text  x="1045.25" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1132.0" y="229" width="0.5" height="15.0" fill="rgb(244,163,25)" rx="2" ry="2" />
<text  x="1134.99" y="239.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.08%)</title><rect x="577.2" y="277" width="1.0" height="15.0" fill="rgb(228,15,26)" rx="2" ry="2" />
<text  x="580.19" y="287.5" ></text>
</g>
<g >
<title>std::__alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (2 samples, 0.08%)</title><rect x="965.9" y="133" width="1.0" height="15.0" fill="rgb(212,35,6)" rx="2" ry="2" />
<text  x="968.90" y="143.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (3 samples, 0.13%)</title><rect x="726.9" y="149" width="1.5" height="15.0" fill="rgb(217,46,52)" rx="2" ry="2" />
<text  x="729.92" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="790.9" y="165" width="0.5" height="15.0" fill="rgb(217,225,44)" rx="2" ry="2" />
<text  x="793.88" y="175.5" ></text>
</g>
<g >
<title>mergesort (911 samples, 38.28%)</title><rect x="693.2" y="261" width="451.7" height="15.0" fill="rgb(248,77,40)" rx="2" ry="2" />
<text  x="696.21" y="271.5" >mergesort</text>
</g>
<g >
<title>std::move&lt;std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl&amp;&gt; (1 samples, 0.04%)</title><rect x="895.0" y="85" width="0.5" height="15.0" fill="rgb(218,185,26)" rx="2" ry="2" />
<text  x="898.00" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (3 samples, 0.13%)</title><rect x="678.8" y="197" width="1.5" height="15.0" fill="rgb(239,3,8)" rx="2" ry="2" />
<text  x="681.83" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1154.3" y="293" width="0.5" height="15.0" fill="rgb(241,13,27)" rx="2" ry="2" />
<text  x="1157.30" y="303.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (11 samples, 0.46%)</title><rect x="702.1" y="181" width="5.5" height="15.0" fill="rgb(241,85,43)" rx="2" ry="2" />
<text  x="705.13" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (1 samples, 0.04%)</title><rect x="1123.1" y="197" width="0.5" height="15.0" fill="rgb(236,33,21)" rx="2" ry="2" />
<text  x="1126.07" y="207.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.13%)</title><rect x="29.8" y="421" width="1.5" height="15.0" fill="rgb(221,76,44)" rx="2" ry="2" />
<text  x="32.83" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (2 samples, 0.08%)</title><rect x="32.8" y="389" width="1.0" height="15.0" fill="rgb(241,84,35)" rx="2" ry="2" />
<text  x="35.81" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (3 samples, 0.13%)</title><rect x="753.2" y="165" width="1.5" height="15.0" fill="rgb(221,162,33)" rx="2" ry="2" />
<text  x="756.20" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="705.1" y="149" width="0.5" height="15.0" fill="rgb(228,78,42)" rx="2" ry="2" />
<text  x="708.11" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (3 samples, 0.13%)</title><rect x="1017.0" y="149" width="1.5" height="15.0" fill="rgb(250,223,6)" rx="2" ry="2" />
<text  x="1019.97" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (15 samples, 0.63%)</title><rect x="932.7" y="133" width="7.4" height="15.0" fill="rgb(237,218,37)" rx="2" ry="2" />
<text  x="935.68" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (3 samples, 0.13%)</title><rect x="1030.4" y="133" width="1.4" height="15.0" fill="rgb(226,126,43)" rx="2" ry="2" />
<text  x="1033.35" y="143.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1163.7" y="309" width="0.5" height="15.0" fill="rgb(248,198,13)" rx="2" ry="2" />
<text  x="1166.72" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (9 samples, 0.38%)</title><rect x="998.6" y="149" width="4.5" height="15.0" fill="rgb(238,183,34)" rx="2" ry="2" />
<text  x="1001.62" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (2 samples, 0.08%)</title><rect x="664.0" y="245" width="0.9" height="15.0" fill="rgb(224,128,50)" rx="2" ry="2" />
<text  x="666.96" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="660.5" y="181" width="0.5" height="15.0" fill="rgb(231,214,37)" rx="2" ry="2" />
<text  x="663.49" y="191.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (1 samples, 0.04%)</title><rect x="1010.0" y="85" width="0.5" height="15.0" fill="rgb(210,176,16)" rx="2" ry="2" />
<text  x="1013.03" y="95.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (1 samples, 0.04%)</title><rect x="884.6" y="101" width="0.5" height="15.0" fill="rgb(242,83,31)" rx="2" ry="2" />
<text  x="887.59" y="111.5" ></text>
</g>
<g >
<title>__GI___writev (1 samples, 0.04%)</title><rect x="10.0" y="437" width="0.5" height="15.0" fill="rgb(205,161,37)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="776.0" y="101" width="0.5" height="15.0" fill="rgb(220,126,44)" rx="2" ry="2" />
<text  x="779.01" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (4 samples, 0.17%)</title><rect x="1077.5" y="133" width="1.9" height="15.0" fill="rgb(217,26,19)" rx="2" ry="2" />
<text  x="1080.45" y="143.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.04%)</title><rect x="21.9" y="357" width="0.5" height="15.0" fill="rgb(215,187,10)" rx="2" ry="2" />
<text  x="24.90" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="573.7" y="245" width="0.5" height="15.0" fill="rgb(240,157,20)" rx="2" ry="2" />
<text  x="576.72" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="697.7" y="213" width="0.5" height="15.0" fill="rgb(206,205,1)" rx="2" ry="2" />
<text  x="700.67" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="1165.2" y="357" width="1.0" height="15.0" fill="rgb(247,177,13)" rx="2" ry="2" />
<text  x="1168.21" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="664.5" y="229" width="0.4" height="15.0" fill="rgb(254,163,44)" rx="2" ry="2" />
<text  x="667.45" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (1 samples, 0.04%)</title><rect x="834.0" y="133" width="0.5" height="15.0" fill="rgb(230,67,0)" rx="2" ry="2" />
<text  x="837.02" y="143.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (1 samples, 0.04%)</title><rect x="10.0" y="325" width="0.5" height="15.0" fill="rgb(243,217,6)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>perf_event_comm (1 samples, 0.04%)</title><rect x="1187.0" y="309" width="0.5" height="15.0" fill="rgb(245,70,4)" rx="2" ry="2" />
<text  x="1190.03" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (1 samples, 0.04%)</title><rect x="1080.4" y="165" width="0.5" height="15.0" fill="rgb(237,46,6)" rx="2" ry="2" />
<text  x="1083.43" y="175.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2 samples, 0.08%)</title><rect x="921.3" y="69" width="1.0" height="15.0" fill="rgb(249,192,13)" rx="2" ry="2" />
<text  x="924.28" y="79.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (3 samples, 0.13%)</title><rect x="300.5" y="357" width="1.5" height="15.0" fill="rgb(214,123,17)" rx="2" ry="2" />
<text  x="303.54" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (1 samples, 0.04%)</title><rect x="951.0" y="101" width="0.5" height="15.0" fill="rgb(235,180,4)" rx="2" ry="2" />
<text  x="954.03" y="111.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (1 samples, 0.04%)</title><rect x="1118.1" y="149" width="0.5" height="15.0" fill="rgb(208,191,37)" rx="2" ry="2" />
<text  x="1121.11" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="876.7" y="101" width="0.5" height="15.0" fill="rgb(217,81,6)" rx="2" ry="2" />
<text  x="879.66" y="111.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (16 samples, 0.67%)</title><rect x="680.3" y="197" width="8.0" height="15.0" fill="rgb(249,224,52)" rx="2" ry="2" />
<text  x="683.32" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (1 samples, 0.04%)</title><rect x="957.5" y="165" width="0.5" height="15.0" fill="rgb(247,118,40)" rx="2" ry="2" />
<text  x="960.47" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="825.6" y="133" width="0.5" height="15.0" fill="rgb(254,112,22)" rx="2" ry="2" />
<text  x="828.59" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (1 samples, 0.04%)</title><rect x="634.7" y="181" width="0.5" height="15.0" fill="rgb(223,34,18)" rx="2" ry="2" />
<text  x="637.71" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="717.0" y="181" width="0.5" height="15.0" fill="rgb(248,171,11)" rx="2" ry="2" />
<text  x="720.01" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (2 samples, 0.08%)</title><rect x="781.5" y="165" width="1.0" height="15.0" fill="rgb(208,135,37)" rx="2" ry="2" />
<text  x="784.46" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::destroy&lt;int&gt; (1 samples, 0.04%)</title><rect x="771.1" y="133" width="0.4" height="15.0" fill="rgb(217,229,52)" rx="2" ry="2" />
<text  x="774.05" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="801.8" y="133" width="0.5" height="15.0" fill="rgb(225,168,40)" rx="2" ry="2" />
<text  x="804.79" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="21.9" y="421" width="0.5" height="15.0" fill="rgb(206,102,10)" rx="2" ry="2" />
<text  x="24.90" y="431.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (3 samples, 0.13%)</title><rect x="703.6" y="165" width="1.5" height="15.0" fill="rgb(241,159,47)" rx="2" ry="2" />
<text  x="706.62" y="175.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="1099.3" y="133" width="0.5" height="15.0" fill="rgb(233,34,37)" rx="2" ry="2" />
<text  x="1102.27" y="143.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (3 samples, 0.13%)</title><rect x="925.7" y="85" width="1.5" height="15.0" fill="rgb(219,181,17)" rx="2" ry="2" />
<text  x="928.74" y="95.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (3 samples, 0.13%)</title><rect x="936.2" y="101" width="1.4" height="15.0" fill="rgb(219,14,23)" rx="2" ry="2" />
<text  x="939.15" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (21 samples, 0.88%)</title><rect x="1062.6" y="181" width="10.4" height="15.0" fill="rgb(249,192,3)" rx="2" ry="2" />
<text  x="1065.58" y="191.5" ></text>
</g>
<g >
<title>vfs_writev (1 samples, 0.04%)</title><rect x="10.0" y="357" width="0.5" height="15.0" fill="rgb(235,94,46)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>merge (44 samples, 1.85%)</title><rect x="738.3" y="213" width="21.8" height="15.0" fill="rgb(227,95,4)" rx="2" ry="2" />
<text  x="741.33" y="223.5" >m..</text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="919.3" y="117" width="0.5" height="15.0" fill="rgb(205,132,38)" rx="2" ry="2" />
<text  x="922.29" y="127.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="1129.5" y="149" width="0.5" height="15.0" fill="rgb(247,173,3)" rx="2" ry="2" />
<text  x="1132.51" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="1158.3" y="325" width="0.5" height="15.0" fill="rgb(250,84,46)" rx="2" ry="2" />
<text  x="1161.27" y="335.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (1 samples, 0.04%)</title><rect x="755.7" y="165" width="0.5" height="15.0" fill="rgb(229,212,28)" rx="2" ry="2" />
<text  x="758.68" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (3 samples, 0.13%)</title><rect x="786.9" y="117" width="1.5" height="15.0" fill="rgb(221,218,9)" rx="2" ry="2" />
<text  x="789.92" y="127.5" ></text>
</g>
<g >
<title>merge (82 samples, 3.45%)</title><rect x="829.1" y="165" width="40.6" height="15.0" fill="rgb(239,36,30)" rx="2" ry="2" />
<text  x="832.06" y="175.5" >merge</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="1014.0" y="149" width="0.5" height="15.0" fill="rgb(234,72,32)" rx="2" ry="2" />
<text  x="1016.99" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (2 samples, 0.08%)</title><rect x="1003.1" y="149" width="1.0" height="15.0" fill="rgb(211,195,16)" rx="2" ry="2" />
<text  x="1006.08" y="159.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="783.9" y="117" width="0.5" height="15.0" fill="rgb(224,147,5)" rx="2" ry="2" />
<text  x="786.94" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="725.9" y="149" width="0.5" height="15.0" fill="rgb(218,40,16)" rx="2" ry="2" />
<text  x="728.93" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (2 samples, 0.08%)</title><rect x="900.5" y="101" width="0.9" height="15.0" fill="rgb(239,181,35)" rx="2" ry="2" />
<text  x="903.45" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (1 samples, 0.04%)</title><rect x="893.0" y="117" width="0.5" height="15.0" fill="rgb(241,87,46)" rx="2" ry="2" />
<text  x="896.02" y="127.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (2 samples, 0.08%)</title><rect x="541.5" y="277" width="1.0" height="15.0" fill="rgb(232,215,18)" rx="2" ry="2" />
<text  x="544.50" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (1 samples, 0.04%)</title><rect x="927.7" y="149" width="0.5" height="15.0" fill="rgb(236,96,16)" rx="2" ry="2" />
<text  x="930.72" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (1 samples, 0.04%)</title><rect x="871.2" y="149" width="0.5" height="15.0" fill="rgb(206,91,27)" rx="2" ry="2" />
<text  x="874.20" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (2 samples, 0.08%)</title><rect x="730.4" y="181" width="1.0" height="15.0" fill="rgb(211,188,51)" rx="2" ry="2" />
<text  x="733.39" y="191.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;long&gt; (6 samples, 0.25%)</title><rect x="26.9" y="405" width="2.9" height="15.0" fill="rgb(244,85,13)" rx="2" ry="2" />
<text  x="29.86" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (6 samples, 0.25%)</title><rect x="890.0" y="101" width="3.0" height="15.0" fill="rgb(248,204,41)" rx="2" ry="2" />
<text  x="893.04" y="111.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (1 samples, 0.04%)</title><rect x="939.6" y="117" width="0.5" height="15.0" fill="rgb(228,123,18)" rx="2" ry="2" />
<text  x="942.62" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (2 samples, 0.08%)</title><rect x="716.5" y="197" width="1.0" height="15.0" fill="rgb(231,199,35)" rx="2" ry="2" />
<text  x="719.51" y="207.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;int&gt;&amp;&gt; (1 samples, 0.04%)</title><rect x="1032.8" y="117" width="0.5" height="15.0" fill="rgb(248,164,45)" rx="2" ry="2" />
<text  x="1035.83" y="127.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="954.5" y="85" width="0.5" height="15.0" fill="rgb(205,177,7)" rx="2" ry="2" />
<text  x="957.50" y="95.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (5 samples, 0.21%)</title><rect x="952.5" y="117" width="2.5" height="15.0" fill="rgb(224,59,54)" rx="2" ry="2" />
<text  x="955.51" y="127.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (8 samples, 0.34%)</title><rect x="1067.0" y="133" width="4.0" height="15.0" fill="rgb(249,223,27)" rx="2" ry="2" />
<text  x="1070.04" y="143.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.08%)</title><rect x="620.3" y="245" width="1.0" height="15.0" fill="rgb(217,62,20)" rx="2" ry="2" />
<text  x="623.33" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (2 samples, 0.08%)</title><rect x="1062.6" y="149" width="1.0" height="15.0" fill="rgb(212,110,11)" rx="2" ry="2" />
<text  x="1065.58" y="159.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (3 samples, 0.13%)</title><rect x="547.4" y="309" width="1.5" height="15.0" fill="rgb(227,151,13)" rx="2" ry="2" />
<text  x="550.45" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (1 samples, 0.04%)</title><rect x="1042.3" y="117" width="0.4" height="15.0" fill="rgb(242,52,43)" rx="2" ry="2" />
<text  x="1045.25" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (1 samples, 0.04%)</title><rect x="1065.1" y="149" width="0.5" height="15.0" fill="rgb(247,77,36)" rx="2" ry="2" />
<text  x="1068.06" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (1 samples, 0.04%)</title><rect x="1146.9" y="229" width="0.5" height="15.0" fill="rgb(209,67,46)" rx="2" ry="2" />
<text  x="1149.87" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (2 samples, 0.08%)</title><rect x="789.4" y="149" width="1.0" height="15.0" fill="rgb(249,15,44)" rx="2" ry="2" />
<text  x="792.39" y="159.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (8 samples, 0.34%)</title><rect x="610.9" y="229" width="4.0" height="15.0" fill="rgb(228,11,11)" rx="2" ry="2" />
<text  x="613.91" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (3 samples, 0.13%)</title><rect x="1071.5" y="165" width="1.5" height="15.0" fill="rgb(239,133,12)" rx="2" ry="2" />
<text  x="1074.50" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (2 samples, 0.08%)</title><rect x="999.1" y="101" width="1.0" height="15.0" fill="rgb(254,7,12)" rx="2" ry="2" />
<text  x="1002.12" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (1 samples, 0.04%)</title><rect x="911.4" y="133" width="0.5" height="15.0" fill="rgb(246,220,50)" rx="2" ry="2" />
<text  x="914.36" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (1 samples, 0.04%)</title><rect x="1109.2" y="181" width="0.5" height="15.0" fill="rgb(216,14,9)" rx="2" ry="2" />
<text  x="1112.18" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (1 samples, 0.04%)</title><rect x="597.0" y="293" width="0.5" height="15.0" fill="rgb(210,181,3)" rx="2" ry="2" />
<text  x="600.03" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (1 samples, 0.04%)</title><rect x="910.4" y="53" width="0.5" height="15.0" fill="rgb(242,32,10)" rx="2" ry="2" />
<text  x="913.37" y="63.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="433.9" y="309" width="0.5" height="15.0" fill="rgb(217,158,11)" rx="2" ry="2" />
<text  x="436.91" y="319.5" ></text>
</g>
</g>
</svg>
