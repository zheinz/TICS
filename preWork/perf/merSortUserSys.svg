<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (9 samples, 0.02%; +0.02%)</title><rect x="1153.6" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1156.60" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (11 samples, 0.02%; +0.02%)</title><rect x="525.9" y="389" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="528.95" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (14 samples, 0.03%; +0.03%)</title><rect x="1088.0" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1091.03" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (12 samples, 0.02%; +0.02%)</title><rect x="900.5" y="133" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="903.45" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (5 samples, 0.01%; 0.00%)</title><rect x="1166.1" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1169.12" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (140 samples, 0.28%; +0.03%)</title><rect x="1087.3" y="245" width="3.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1090.26" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (10 samples, 0.02%; +0.02%)</title><rect x="764.2" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="767.20" y="191.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (33 samples, 0.07%; +0.01%)</title><rect x="590.4" y="309" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="593.41" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (8 samples, 0.02%; +0.02%)</title><rect x="618.6" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="621.62" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (7 samples, 0.01%; +0.01%)</title><rect x="1078.0" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1081.02" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (10 samples, 0.02%; +0.02%)</title><rect x="986.7" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="989.66" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (7 samples, 0.01%; +0.01%)</title><rect x="1164.1" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1167.10" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (38 samples, 0.08%; +0.08%)</title><rect x="1055.6" y="197" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1058.64" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (59 samples, 0.12%; +0.03%)</title><rect x="930.5" y="165" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="933.52" y="175.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (7 samples, 0.01%; +0.00%)</title><rect x="1162.8" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1165.84" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (5 samples, 0.01%; +0.01%)</title><rect x="775.3" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="778.31" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (5 samples, 0.01%; +0.01%)</title><rect x="1135.9" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1138.91" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (6 samples, 0.01%; +0.00%)</title><rect x="1149.7" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1152.68" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (23 samples, 0.05%; +0.04%)</title><rect x="799.2" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="802.19" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (13 samples, 0.03%; +0.01%)</title><rect x="806.6" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="809.58" y="175.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (8 samples, 0.02%; +0.02%)</title><rect x="1024.0" y="133" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1026.95" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (6 samples, 0.01%; +0.01%)</title><rect x="780.1" y="181" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="783.05" y="191.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="1020.0" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1023.03" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (9 samples, 0.02%; +0.02%)</title><rect x="482.3" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="485.30" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (24 samples, 0.05%; +0.05%)</title><rect x="733.8" y="245" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="736.82" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (7 samples, 0.01%; +0.01%)</title><rect x="799.7" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="802.73" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (269 samples, 0.53%; +0.04%)</title><rect x="938.4" y="197" width="6.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="941.36" y="207.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (6 samples, 0.01%; +0.01%)</title><rect x="743.8" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="746.79" y="207.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (22 samples, 0.04%; +0.04%)</title><rect x="589.9" y="309" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="592.89" y="319.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (10 samples, 0.02%; +0.02%)</title><rect x="1025.4" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1028.43" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (6 samples, 0.01%; +0.01%)</title><rect x="548.3" y="325" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="551.26" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (27 samples, 0.05%; +0.05%)</title><rect x="957.5" y="245" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="960.48" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (14 samples, 0.03%; +0.03%)</title><rect x="881.0" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="883.96" y="239.5" ></text>
</g>
<g >
<title>mergesort (25,462 samples, 50.61%; +0.02%)</title><rect x="574.6" y="405" width="597.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="577.57" y="415.5" >mergesort</text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (609 samples, 1.21%; +1.20%)</title><rect x="532.7" y="325" width="14.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="535.66" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (297 samples, 0.59%; +0.13%)</title><rect x="1111.8" y="277" width="6.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1114.77" y="287.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="1138.4" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1141.42" y="207.5" ></text>
</g>
<g >
<title>std::__miter_base&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (7 samples, 0.01%; +0.01%)</title><rect x="939.0" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="942.04" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (6 samples, 0.01%; +0.00%)</title><rect x="1183.2" y="469" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1186.15" y="479.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (12 samples, 0.02%; +0.02%)</title><rect x="910.5" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="913.54" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (5 samples, 0.01%; +0.01%)</title><rect x="1111.1" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1114.14" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (155 samples, 0.31%; +0.03%)</title><rect x="830.3" y="197" width="3.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="833.27" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (10,017 samples, 19.91%; +0.16%)</title><rect x="36.1" y="453" width="235.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="39.13" y="463.5" >std::vector&lt;int, std::allocator..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (16 samples, 0.03%; +0.00%)</title><rect x="1159.5" y="341" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1162.51" y="351.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (8 samples, 0.02%; 0.00%)</title><rect x="1162.8" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1165.84" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33 samples, 0.07%; +0.07%)</title><rect x="906.8" y="197" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="909.83" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (9 samples, 0.02%; +0.02%)</title><rect x="993.7" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="996.72" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (6 samples, 0.01%; 0.00%)</title><rect x="1183.3" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.29" y="399.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (13 samples, 0.03%; +0.02%)</title><rect x="1059.8" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1062.84" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (18 samples, 0.04%; +0.00%)</title><rect x="689.6" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="692.60" y="255.5" ></text>
</g>
<g >
<title>__vfs_read (6 samples, 0.01%; 0.00%)</title><rect x="26.6" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.58" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (30 samples, 0.06%; +0.03%)</title><rect x="1180.4" y="453" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1183.41" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (40 samples, 0.08%; +0.08%)</title><rect x="1008.2" y="229" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1011.21" y="239.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (19 samples, 0.04%; +0.04%)</title><rect x="517.0" y="357" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="520.03" y="367.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (13 samples, 0.03%; +0.03%)</title><rect x="765.3" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="768.25" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (39 samples, 0.08%; +0.08%)</title><rect x="1026.5" y="229" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1029.46" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (52 samples, 0.10%; +0.01%)</title><rect x="1136.0" y="277" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1139.03" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (42 samples, 0.08%; +0.01%)</title><rect x="1139.3" y="277" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1142.33" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (775 samples, 1.54%; +0.05%)</title><rect x="768.1" y="245" width="18.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="771.07" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (88 samples, 0.17%; +0.01%)</title><rect x="930.0" y="197" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="932.99" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (11 samples, 0.02%; +0.02%)</title><rect x="577.8" y="373" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="580.81" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (13 samples, 0.03%; +0.01%)</title><rect x="1159.6" y="325" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1162.55" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (126 samples, 0.25%; +0.25%)</title><rect x="888.2" y="197" width="3.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="891.23" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (13 samples, 0.03%; +0.03%)</title><rect x="774.6" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="777.56" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (5 samples, 0.01%; +0.01%)</title><rect x="630.3" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="633.31" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (44 samples, 0.09%; +0.01%)</title><rect x="1132.5" y="245" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1135.46" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (8 samples, 0.02%; +0.01%)</title><rect x="1135.5" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1138.49" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (33 samples, 0.07%; +0.04%)</title><rect x="1115.2" y="245" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1118.24" y="255.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (9 samples, 0.02%; +0.02%)</title><rect x="830.6" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="833.62" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (5 samples, 0.01%; +0.01%)</title><rect x="674.1" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="677.05" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (19 samples, 0.04%; +0.04%)</title><rect x="411.9" y="405" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="414.95" y="415.5" ></text>
</g>
<g >
<title>malloc (7 samples, 0.01%; +0.01%)</title><rect x="818.1" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="821.14" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (12 samples, 0.02%; +0.02%)</title><rect x="479.4" y="421" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="482.39" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (7 samples, 0.01%; 0.00%)</title><rect x="1166.5" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1169.50" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (8 samples, 0.02%; +0.02%)</title><rect x="626.2" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="629.25" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (37 samples, 0.07%; +0.05%)</title><rect x="573.5" y="373" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="576.47" y="383.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (31 samples, 0.06%; +0.02%)</title><rect x="397.5" y="325" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="400.55" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (5 samples, 0.01%; +0.00%)</title><rect x="1162.7" y="309" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1165.70" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (6 samples, 0.01%; +0.01%)</title><rect x="1036.5" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1039.45" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (35 samples, 0.07%; +0.07%)</title><rect x="935.3" y="197" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="938.33" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (42 samples, 0.08%; +0.08%)</title><rect x="815.9" y="197" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="818.87" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (39 samples, 0.08%; +0.03%)</title><rect x="1119.8" y="245" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1122.84" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (24 samples, 0.05%; +0.05%)</title><rect x="478.5" y="421" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="481.54" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (724 samples, 1.44%; +0.04%)</title><rect x="902.6" y="229" width="17.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="905.61" y="239.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (7 samples, 0.01%; +0.01%)</title><rect x="871.3" y="149" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="874.27" y="159.5" ></text>
</g>
<g >
<title>mergesort (20,592 samples, 40.93%; +0.06%)</title><rect x="668.7" y="325" width="483.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="671.70" y="335.5" >mergesort</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (41 samples, 0.08%; +0.02%)</title><rect x="1178.3" y="453" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1181.34" y="463.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (6 samples, 0.01%; 0.00%)</title><rect x="1158.2" y="229" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.22" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (11 samples, 0.02%; 0.00%)</title><rect x="1150.6" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1153.59" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (9 samples, 0.02%; +0.01%)</title><rect x="648.7" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="651.72" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="724.1" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="727.13" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (9 samples, 0.02%; +0.02%)</title><rect x="951.7" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="954.73" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (8 samples, 0.02%; +0.02%)</title><rect x="1068.9" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1071.94" y="239.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (151 samples, 0.30%; +0.03%)</title><rect x="702.9" y="245" width="3.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="705.90" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (19 samples, 0.04%; +0.04%)</title><rect x="1121.5" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1124.46" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (16 samples, 0.03%; +0.01%)</title><rect x="1123.8" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1126.76" y="255.5" ></text>
</g>
<g >
<title>all (50,306 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (18 samples, 0.04%; +0.04%)</title><rect x="1058.0" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1060.96" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (18 samples, 0.04%; +0.02%)</title><rect x="836.9" y="197" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="839.91" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (917 samples, 1.82%; +0.41%)</title><rect x="977.9" y="229" width="21.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="980.86" y="239.5" >s..</text>
</g>
<g >
<title>prepare_exit_to_usermode (5 samples, 0.01%; 0.00%)</title><rect x="924.5" y="165" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="927.54" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (19 samples, 0.04%; +0.04%)</title><rect x="948.8" y="197" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="951.84" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (10 samples, 0.02%; +0.01%)</title><rect x="1173.4" y="389" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1176.44" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (9 samples, 0.02%; +0.02%)</title><rect x="1074.9" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1077.90" y="223.5" ></text>
</g>
<g >
<title>run_timer_softirq (8 samples, 0.02%; +0.00%)</title><rect x="266.5" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="269.54" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (34 samples, 0.07%; +0.00%)</title><rect x="714.0" y="229" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="716.95" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (26 samples, 0.05%; +0.05%)</title><rect x="879.9" y="229" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="882.91" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (13 samples, 0.03%; 0.00%)</title><rect x="1123.3" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1126.34" y="271.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (7 samples, 0.01%; +0.01%)</title><rect x="1148.4" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1151.36" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (23 samples, 0.05%; +0.02%)</title><rect x="1124.8" y="277" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1127.81" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (75 samples, 0.15%; +0.03%)</title><rect x="1149.3" y="309" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1152.33" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (12 samples, 0.02%; +0.02%)</title><rect x="708.7" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="711.70" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (650 samples, 1.29%; +0.21%)</title><rect x="960.7" y="229" width="15.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="963.67" y="239.5" ></text>
</g>
<g >
<title>merge (749 samples, 1.49%; +0.17%)</title><rect x="613.1" y="357" width="17.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="616.09" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (15 samples, 0.03%; +0.03%)</title><rect x="655.8" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="658.85" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (7 samples, 0.01%; +0.00%)</title><rect x="1155.4" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1158.35" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (149 samples, 0.30%; +0.02%)</title><rect x="665.2" y="309" width="3.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="668.19" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (12 samples, 0.02%; +0.02%)</title><rect x="484.7" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="487.66" y="399.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (9 samples, 0.02%; +0.00%)</title><rect x="397.3" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="400.29" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (45 samples, 0.09%; +0.01%)</title><rect x="984.9" y="197" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="987.94" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_writev (19 samples, 0.04%; 0.00%)</title><rect x="21.0" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.00" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (27 samples, 0.05%; +0.05%)</title><rect x="484.9" y="389" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="487.95" y="399.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="663.4" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="666.36" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (78 samples, 0.16%; +0.02%)</title><rect x="1116.3" y="261" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1119.32" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (359 samples, 0.71%; +0.16%)</title><rect x="699.0" y="261" width="8.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="702.01" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="615.8" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="618.79" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (20 samples, 0.04%; +0.04%)</title><rect x="895.8" y="165" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="898.83" y="175.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (44 samples, 0.09%; +0.08%)</title><rect x="943.3" y="133" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="946.33" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (9 samples, 0.02%; +0.02%)</title><rect x="1047.2" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1050.17" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (16 samples, 0.03%; +0.03%)</title><rect x="597.1" y="357" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="600.07" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (5 samples, 0.01%; +0.01%)</title><rect x="874.0" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="877.04" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (12 samples, 0.02%; +0.02%)</title><rect x="644.9" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="647.94" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (106 samples, 0.21%; +0.04%)</title><rect x="894.0" y="197" width="2.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="896.98" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (52 samples, 0.10%; +0.05%)</title><rect x="685.1" y="277" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="688.08" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (30 samples, 0.06%; +0.06%)</title><rect x="918.4" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="921.40" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (65 samples, 0.13%; +0.13%)</title><rect x="28.6" y="501" width="1.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="31.58" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (13 samples, 0.03%; +0.03%)</title><rect x="761.7" y="213" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="764.66" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (22 samples, 0.04%; +0.04%)</title><rect x="796.0" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="799.03" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (544 samples, 1.08%; +0.09%)</title><rect x="721.7" y="261" width="12.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="724.74" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (12 samples, 0.02%; 0.00%)</title><rect x="1145.4" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1148.39" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (16 samples, 0.03%; +0.03%)</title><rect x="861.4" y="149" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="864.42" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9 samples, 0.02%; +0.02%)</title><rect x="1113.7" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1116.72" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (12 samples, 0.02%; +0.02%)</title><rect x="559.1" y="357" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="562.14" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (15 samples, 0.03%; +0.03%)</title><rect x="862.9" y="149" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="865.85" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (11 samples, 0.02%; +0.02%)</title><rect x="1044.7" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1047.73" y="207.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%; +0.01%)</title><rect x="777.3" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="780.26" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (100 samples, 0.20%; +0.03%)</title><rect x="969.3" y="213" width="2.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="972.35" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (10 samples, 0.02%; +0.02%)</title><rect x="278.6" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="281.58" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (48 samples, 0.10%; +0.07%)</title><rect x="519.5" y="405" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="522.52" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (21 samples, 0.04%; 0.00%)</title><rect x="1136.2" y="261" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1139.24" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (63 samples, 0.13%; +0.05%)</title><rect x="1106.5" y="213" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1109.54" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (5 samples, 0.01%; 0.00%)</title><rect x="1169.3" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1172.33" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (69 samples, 0.14%; +0.06%)</title><rect x="712.1" y="245" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="715.05" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (14 samples, 0.03%; +0.03%)</title><rect x="698.6" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="701.56" y="271.5" ></text>
</g>
<g >
<title>[unknown] (176 samples, 0.35%; 0.00%)</title><rect x="12.6" y="501" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="15.63" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (43 samples, 0.09%; +0.01%)</title><rect x="629.6" y="325" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="632.56" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (6 samples, 0.01%; 0.00%)</title><rect x="1163.1" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1166.07" y="335.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (10 samples, 0.02%; +0.00%)</title><rect x="1158.2" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1161.17" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (6 samples, 0.01%; 0.00%)</title><rect x="1183.3" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.29" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (71 samples, 0.14%; +0.02%)</title><rect x="592.8" y="373" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="595.75" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (13 samples, 0.03%; +0.03%)</title><rect x="629.1" y="309" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="632.06" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (6 samples, 0.01%; +0.01%)</title><rect x="998.8" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1001.78" y="223.5" ></text>
</g>
<g >
<title>malloc (6 samples, 0.01%; +0.01%)</title><rect x="1101.8" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1104.78" y="223.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (16 samples, 0.03%; +0.03%)</title><rect x="1083.8" y="165" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1086.81" y="175.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.02%; +0.02%)</title><rect x="864.9" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="867.89" y="175.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (144 samples, 0.29%; +0.02%)</title><rect x="1081.0" y="229" width="3.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1083.95" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (6 samples, 0.01%; +0.01%)</title><rect x="276.2" y="453" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="279.23" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (43 samples, 0.09%; +0.03%)</title><rect x="974.4" y="165" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="977.44" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (53 samples, 0.11%; +0.03%)</title><rect x="953.7" y="197" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="956.75" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (17 samples, 0.03%; +0.03%)</title><rect x="949.3" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="952.29" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (6 samples, 0.01%; 0.00%)</title><rect x="715.5" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="718.48" y="287.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (26 samples, 0.05%; +0.02%)</title><rect x="705.8" y="213" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="708.77" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (16 samples, 0.03%; +0.03%)</title><rect x="764.9" y="165" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="767.88" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (27 samples, 0.05%; +0.05%)</title><rect x="846.5" y="213" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="849.46" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (98 samples, 0.19%; +0.02%)</title><rect x="1011.7" y="213" width="2.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1014.71" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (16 samples, 0.03%; +0.03%)</title><rect x="1080.3" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1083.29" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (87 samples, 0.17%; +0.02%)</title><rect x="1045.1" y="229" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1048.06" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (8 samples, 0.02%; +0.02%)</title><rect x="674.3" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="677.33" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (16 samples, 0.03%; +0.03%)</title><rect x="930.9" y="149" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="933.92" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (16 samples, 0.03%; +0.03%)</title><rect x="560.5" y="357" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="563.45" y="367.5" ></text>
</g>
<g >
<title>finish_task_switch (16 samples, 0.03%; +0.01%)</title><rect x="516.2" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="519.21" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (8 samples, 0.02%; +0.02%)</title><rect x="1119.3" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1122.26" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (20 samples, 0.04%; +0.01%)</title><rect x="1094.3" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1097.27" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (118 samples, 0.23%; +0.12%)</title><rect x="740.7" y="229" width="2.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="743.74" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (11 samples, 0.02%; +0.02%)</title><rect x="768.8" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="771.79" y="239.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (12 samples, 0.02%; +0.00%)</title><rect x="1158.1" y="293" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1161.12" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (8 samples, 0.02%; +0.02%)</title><rect x="817.4" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="820.42" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (23 samples, 0.05%; +0.05%)</title><rect x="756.8" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="759.76" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (5 samples, 0.01%; 0.00%)</title><rect x="1177.5" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1180.47" y="399.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (8 samples, 0.02%; +0.01%)</title><rect x="806.9" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="809.89" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (303 samples, 0.60%; +0.07%)</title><rect x="937.6" y="213" width="7.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="940.56" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (19 samples, 0.04%; +0.02%)</title><rect x="875.3" y="181" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="878.31" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (6 samples, 0.01%; +0.01%)</title><rect x="977.3" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="980.34" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="652.5" y="309" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="655.47" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (41 samples, 0.08%; +0.08%)</title><rect x="993.9" y="165" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="996.93" y="175.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (7 samples, 0.01%; +0.01%)</title><rect x="709.1" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="712.12" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (869 samples, 1.73%; +0.08%)</title><rect x="882.2" y="229" width="20.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="885.16" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (11 samples, 0.02%; +0.02%)</title><rect x="672.4" y="293" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="675.41" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (11 samples, 0.02%; +0.02%)</title><rect x="663.1" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="666.10" y="239.5" ></text>
</g>
<g >
<title>schedule (9 samples, 0.02%; 0.00%)</title><rect x="471.5" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="474.46" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (21 samples, 0.04%; +0.04%)</title><rect x="804.4" y="197" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="807.40" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (15 samples, 0.03%; +0.01%)</title><rect x="1161.9" y="309" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1164.88" y="319.5" ></text>
</g>
<g >
<title>[merSort] (6 samples, 0.01%; +0.01%)</title><rect x="872.7" y="133" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="875.70" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (88 samples, 0.17%; +0.02%)</title><rect x="1066.1" y="213" width="2.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1069.15" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (6 samples, 0.01%; 0.00%)</title><rect x="1162.7" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1165.70" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (746 samples, 1.48%; +0.04%)</title><rect x="531.2" y="357" width="17.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="534.16" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (16 samples, 0.03%; +0.03%)</title><rect x="881.8" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="884.78" y="239.5" ></text>
</g>
<g >
<title>[merSort] (6 samples, 0.01%; +0.01%)</title><rect x="931.3" y="149" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="934.30" y="159.5" ></text>
</g>
<g >
<title>_int_free (8 samples, 0.02%; +0.02%)</title><rect x="820.0" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="823.04" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (9 samples, 0.02%; +0.02%)</title><rect x="401.3" y="437" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="404.35" y="447.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (11 samples, 0.02%; 0.00%)</title><rect x="397.3" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="400.29" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (45 samples, 0.09%; +0.01%)</title><rect x="550.2" y="405" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="553.25" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (17 samples, 0.03%; +0.03%)</title><rect x="945.5" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="948.54" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (6 samples, 0.01%; +0.00%)</title><rect x="1162.1" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1165.09" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (8 samples, 0.02%; +0.02%)</title><rect x="1106.0" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1108.98" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (10 samples, 0.02%; +0.02%)</title><rect x="1092.8" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1095.84" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (99 samples, 0.20%; +0.19%)</title><rect x="18.1" y="485" width="2.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="21.14" y="495.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (34 samples, 0.07%; +0.01%)</title><rect x="764.5" y="181" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="767.45" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (9 samples, 0.02%; +0.02%)</title><rect x="1177.0" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1180.01" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (32 samples, 0.06%; +0.00%)</title><rect x="1147.8" y="261" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1150.83" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (21 samples, 0.04%; +0.02%)</title><rect x="1129.2" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1132.15" y="271.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.01%; +0.01%)</title><rect x="975.2" y="149" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="978.23" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (15 samples, 0.03%; +0.03%)</title><rect x="1099.8" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1102.79" y="255.5" ></text>
</g>
<g >
<title>merge (3,103 samples, 6.17%; +0.17%)</title><rect x="403.5" y="453" width="72.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="406.51" y="463.5" >merge</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (10 samples, 0.02%; +0.02%)</title><rect x="634.2" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="637.18" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (11 samples, 0.02%; 0.00%)</title><rect x="397.3" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="400.29" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (13 samples, 0.03%; +0.03%)</title><rect x="655.5" y="293" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="658.54" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (5 samples, 0.01%; +0.01%)</title><rect x="577.5" y="373" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="580.53" y="383.5" ></text>
</g>
<g >
<title>[merSort] (10 samples, 0.02%; +0.02%)</title><rect x="283.3" y="373" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="286.34" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (160 samples, 0.32%; +0.01%)</title><rect x="1091.9" y="277" width="3.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1094.93" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (6 samples, 0.01%; +0.01%)</title><rect x="739.6" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="742.61" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (13 samples, 0.03%; +0.03%)</title><rect x="694.6" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="697.55" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (7 samples, 0.01%; +0.01%)</title><rect x="1133.5" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1136.49" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (89 samples, 0.18%; +0.00%)</title><rect x="876.7" y="213" width="2.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="879.74" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (20 samples, 0.04%; +0.04%)</title><rect x="1009.9" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1012.85" y="239.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (9 samples, 0.02%; +0.02%)</title><rect x="913.0" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="916.03" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (64 samples, 0.13%; +0.04%)</title><rect x="1012.3" y="181" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1015.27" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (1,693 samples, 3.37%; +0.11%)</title><rect x="479.7" y="421" width="39.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="482.67" y="431.5" >std..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (19 samples, 0.04%; +0.04%)</title><rect x="1070.9" y="245" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1073.94" y="255.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (25 samples, 0.05%; +0.05%)</title><rect x="643.1" y="245" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="646.11" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (9 samples, 0.02%; +0.02%)</title><rect x="798.9" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="801.86" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (511 samples, 1.02%; +0.08%)</title><rect x="616.2" y="341" width="12.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="619.23" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (8 samples, 0.02%; +0.02%)</title><rect x="1096.2" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1099.20" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (10 samples, 0.02%; +0.01%)</title><rect x="746.5" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="749.46" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (6 samples, 0.01%; +0.01%)</title><rect x="715.2" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="718.17" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (10 samples, 0.02%; +0.02%)</title><rect x="794.4" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="797.38" y="239.5" ></text>
</g>
<g >
<title>irq_exit (5 samples, 0.01%; 0.00%)</title><rect x="516.1" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.07" y="303.5" ></text>
</g>
<g >
<title>[merSort] (10 samples, 0.02%; +0.02%)</title><rect x="41.4" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="44.41" y="399.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1146.5" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1149.46" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (8 samples, 0.02%; +0.02%)</title><rect x="617.3" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="620.26" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (47 samples, 0.09%; +0.01%)</title><rect x="1023.4" y="149" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1026.39" y="159.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.01%; +0.00%)</title><rect x="272.7" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="275.71" y="351.5" ></text>
</g>
<g >
<title>do_IRQ (13 samples, 0.03%; 0.00%)</title><rect x="516.3" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.28" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (13 samples, 0.03%; +0.01%)</title><rect x="687.9" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="690.94" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (53 samples, 0.11%; +0.03%)</title><rect x="924.7" y="197" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="927.66" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (14 samples, 0.03%; +0.03%)</title><rect x="603.0" y="325" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="605.98" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (7 samples, 0.01%; +0.00%)</title><rect x="1141.7" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1144.66" y="271.5" ></text>
</g>
<g >
<title>[merSort] (5 samples, 0.01%; +0.01%)</title><rect x="605.8" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="608.79" y="287.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (17 samples, 0.03%; 0.00%)</title><rect x="516.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.19" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (22 samples, 0.04%; +0.04%)</title><rect x="982.7" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="985.67" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (20 samples, 0.04%; +0.04%)</title><rect x="1025.9" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1028.92" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (5 samples, 0.01%; +0.01%)</title><rect x="874.7" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="877.70" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (16 samples, 0.03%; +0.03%)</title><rect x="681.8" y="213" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="684.77" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (11 samples, 0.02%; +0.02%)</title><rect x="732.2" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="735.18" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (31 samples, 0.06%; +0.06%)</title><rect x="800.6" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="803.60" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (12 samples, 0.02%; +0.01%)</title><rect x="594.1" y="357" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="597.14" y="367.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (9,802 samples, 19.48%; +0.05%)</title><rect x="40.0" y="421" width="229.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="43.00" y="431.5" >std::__copy_move_a2&lt;true, __gn..</text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (1,217 samples, 2.42%; +0.01%)</title><rect x="488.5" y="357" width="28.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="491.49" y="367.5" >st..</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (11 samples, 0.02%; +0.02%)</title><rect x="1077.5" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1080.53" y="191.5" ></text>
</g>
<g >
<title>run_timer_softirq (6 samples, 0.01%; +0.01%)</title><rect x="266.8" y="325" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="269.78" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (23 samples, 0.05%; +0.05%)</title><rect x="794.6" y="229" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="797.62" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (23 samples, 0.05%; +0.01%)</title><rect x="734.9" y="245" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="737.87" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (315 samples, 0.63%; +0.07%)</title><rect x="1039.7" y="245" width="7.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1042.71" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (424 samples, 0.84%; +0.02%)</title><rect x="561.6" y="341" width="9.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="564.60" y="351.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (6 samples, 0.01%; +0.01%)</title><rect x="711.9" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="714.91" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (121 samples, 0.24%; +0.04%)</title><rect x="1062.9" y="213" width="2.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1065.91" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (9 samples, 0.02%; +0.02%)</title><rect x="554.3" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="557.26" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (11 samples, 0.02%; +0.02%)</title><rect x="735.0" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="738.02" y="239.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%; +0.01%)</title><rect x="686.0" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="688.99" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (5 samples, 0.01%; +0.00%)</title><rect x="476.1" y="421" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="479.15" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (5 samples, 0.01%; +0.01%)</title><rect x="762.4" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="765.44" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (25 samples, 0.05%; +0.05%)</title><rect x="582.5" y="341" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="585.48" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (16 samples, 0.03%; +0.03%)</title><rect x="1000.7" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1003.68" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (6 samples, 0.01%; +0.01%)</title><rect x="1064.3" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1067.34" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (8 samples, 0.02%; +0.01%)</title><rect x="795.8" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="798.79" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (26 samples, 0.05%; +0.05%)</title><rect x="671.4" y="293" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="674.40" y="303.5" ></text>
</g>
<g >
<title>merge (1,587 samples, 3.15%; +0.26%)</title><rect x="749.5" y="261" width="37.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="752.46" y="271.5" >merge</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (6 samples, 0.01%; +0.01%)</title><rect x="1090.9" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1093.87" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (19 samples, 0.04%; +0.04%)</title><rect x="678.4" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="681.37" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (77 samples, 0.15%; +0.03%)</title><rect x="924.1" y="213" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="927.10" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (32 samples, 0.06%; +0.06%)</title><rect x="1016.6" y="213" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1019.63" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (5 samples, 0.01%; +0.01%)</title><rect x="271.5" y="453" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="274.47" y="463.5" ></text>
</g>
<g >
<title>mergesort (17,287 samples, 34.36%; +0.12%)</title><rect x="715.6" y="293" width="405.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="718.62" y="303.5" >mergesort</text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (9 samples, 0.02%; +0.02%)</title><rect x="580.3" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="583.30" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (18 samples, 0.04%; +0.04%)</title><rect x="412.4" y="405" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="415.40" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (5 samples, 0.01%; +0.01%)</title><rect x="1166.0" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1169.00" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (15 samples, 0.03%; +0.03%)</title><rect x="674.8" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="677.85" y="287.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (1,187 samples, 2.36%; +2.32%)</title><rect x="488.7" y="341" width="27.9" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="491.75" y="351.5" >_..</text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1162.9" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1165.88" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (11 samples, 0.02%; +0.02%)</title><rect x="277.7" y="437" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="280.71" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (53 samples, 0.11%; +0.02%)</title><rect x="1077.1" y="213" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1080.06" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (26 samples, 0.05%; +0.05%)</title><rect x="633.2" y="325" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="636.24" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (248 samples, 0.49%; +0.14%)</title><rect x="11.0" y="517" width="5.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="13.96" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (10,141 samples, 20.16%; +0.09%)</title><rect x="33.7" y="469" width="237.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="36.74" y="479.5" >std::vector&lt;int, std::allocator..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (29 samples, 0.06%; +0.06%)</title><rect x="997.8" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1000.82" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (83 samples, 0.16%; +0.03%)</title><rect x="1054.8" y="229" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1057.80" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (11 samples, 0.02%; +0.02%)</title><rect x="1025.7" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1028.66" y="239.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (32 samples, 0.06%; +0.01%)</title><rect x="626.0" y="277" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="628.99" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (10 samples, 0.02%; +0.00%)</title><rect x="1117.6" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1120.59" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (7 samples, 0.01%; +0.01%)</title><rect x="604.1" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="607.10" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (11 samples, 0.02%; +0.02%)</title><rect x="475.8" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="478.75" y="415.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (11 samples, 0.02%; +0.02%)</title><rect x="992.4" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="995.36" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (16 samples, 0.03%; +0.03%)</title><rect x="1167.0" y="373" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1170.01" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (24 samples, 0.05%; +0.05%)</title><rect x="642.2" y="261" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="645.25" y="271.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (31 samples, 0.06%; 0.00%)</title><rect x="397.5" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="400.55" y="367.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (7 samples, 0.01%; +0.01%)</title><rect x="569.6" y="309" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="572.58" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (8 samples, 0.02%; +0.02%)</title><rect x="1151.8" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1154.77" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (24 samples, 0.05%; +0.05%)</title><rect x="481.4" y="405" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="484.38" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (18 samples, 0.04%; +0.01%)</title><rect x="1113.3" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1116.30" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (9 samples, 0.02%; +0.02%)</title><rect x="281.5" y="421" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="284.48" y="431.5" ></text>
</g>
<g >
<title>std::__alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (16 samples, 0.03%; +0.03%)</title><rect x="883.7" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="886.71" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (16 samples, 0.03%; +0.03%)</title><rect x="35.4" y="453" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="38.43" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (8 samples, 0.02%; +0.02%)</title><rect x="615.6" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="618.58" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (9 samples, 0.02%; +0.02%)</title><rect x="627.9" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="630.89" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (31 samples, 0.06%; +0.02%)</title><rect x="1172.6" y="389" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1175.62" y="399.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (17 samples, 0.03%; +0.00%)</title><rect x="516.2" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="519.19" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (11 samples, 0.02%; +0.02%)</title><rect x="1140.8" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1143.79" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (11 samples, 0.02%; +0.02%)</title><rect x="853.2" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="856.21" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (9 samples, 0.02%; +0.02%)</title><rect x="1076.1" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1079.07" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (16 samples, 0.03%; +0.03%)</title><rect x="697.5" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="700.53" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (5 samples, 0.01%; +0.01%)</title><rect x="1128.4" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1131.36" y="239.5" ></text>
</g>
<g >
<title>finish_task_switch (42 samples, 0.08%; +0.07%)</title><rect x="267.0" y="293" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="269.97" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (241 samples, 0.48%; +0.20%)</title><rect x="1060.1" y="229" width="5.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1063.15" y="239.5" ></text>
</g>
<g >
<title>ret_from_intr (13 samples, 0.03%; 0.00%)</title><rect x="516.3" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.28" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (6 samples, 0.01%; 0.00%)</title><rect x="1162.2" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1165.23" y="303.5" ></text>
</g>
<g >
<title>std::__alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (42 samples, 0.08%; +0.02%)</title><rect x="892.7" y="197" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="895.69" y="207.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (67 samples, 0.13%; +0.01%)</title><rect x="1116.6" y="245" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1119.58" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (39 samples, 0.08%; +0.08%)</title><rect x="955.3" y="245" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="958.34" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1175.7" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1178.74" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (11 samples, 0.02%; +0.02%)</title><rect x="1071.4" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1074.38" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (6 samples, 0.01%; +0.01%)</title><rect x="739.2" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="742.21" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (27 samples, 0.05%; +0.05%)</title><rect x="818.8" y="181" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="821.85" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (64 samples, 0.13%; +0.02%)</title><rect x="1138.8" y="293" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1141.82" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (9 samples, 0.02%; +0.02%)</title><rect x="767.5" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="770.55" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="697.9" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="700.91" y="271.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (59 samples, 0.12%; +0.03%)</title><rect x="1116.8" y="213" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1119.77" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (9 samples, 0.02%; 0.00%)</title><rect x="272.7" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="275.67" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (297 samples, 0.59%; +0.29%)</title><rect x="823.2" y="197" width="6.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="826.16" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::get_allocator (9 samples, 0.02%; +0.02%)</title><rect x="960.0" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="962.99" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9 samples, 0.02%; +0.02%)</title><rect x="517.6" y="341" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="520.64" y="351.5" ></text>
</g>
<g >
<title>__GI___writev (21 samples, 0.04%; +0.00%)</title><rect x="21.0" y="517" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="23.95" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (16 samples, 0.03%; +0.03%)</title><rect x="1075.7" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1078.70" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.04%; 0.00%)</title><rect x="21.0" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.00" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (13 samples, 0.03%; +0.03%)</title><rect x="1033.5" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1036.52" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (16 samples, 0.03%; +0.03%)</title><rect x="728.1" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="731.12" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (32 samples, 0.06%; +0.06%)</title><rect x="584.7" y="309" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="587.73" y="319.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (5 samples, 0.01%; +0.01%)</title><rect x="898.1" y="181" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="901.06" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1165.3" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1168.30" y="351.5" ></text>
</g>
<g >
<title>[merSort] (7 samples, 0.01%; +0.01%)</title><rect x="415.4" y="357" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="418.35" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (18 samples, 0.04%; +0.04%)</title><rect x="32.7" y="469" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="35.68" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (94 samples, 0.19%; +0.07%)</title><rect x="1063.5" y="197" width="2.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1066.55" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (17 samples, 0.03%; +0.03%)</title><rect x="603.3" y="325" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="606.31" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (86 samples, 0.17%; +0.07%)</title><rect x="805.5" y="181" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="808.46" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (47 samples, 0.09%; +0.02%)</title><rect x="907.6" y="197" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="910.63" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (8 samples, 0.02%; +0.02%)</title><rect x="35.8" y="453" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="38.80" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="686.2" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="689.16" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (7 samples, 0.01%; +0.01%)</title><rect x="523.9" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="526.91" y="415.5" ></text>
</g>
<g >
<title>mergesort (49,169 samples, 97.74%; +0.03%)</title><rect x="30.1" y="501" width="1153.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="33.10" y="511.5" >mergesort</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (87 samples, 0.17%; +0.01%)</title><rect x="871.1" y="165" width="2.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="874.13" y="175.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (5 samples, 0.01%; 0.00%)</title><rect x="1177.5" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1180.47" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (6 samples, 0.01%; +0.01%)</title><rect x="1136.1" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1139.10" y="271.5" ></text>
</g>
<g >
<title>mergesort (21,720 samples, 43.18%; +0.04%)</title><rect x="649.3" y="341" width="509.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="652.28" y="351.5" >mergesort</text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (15 samples, 0.03%; +0.03%)</title><rect x="608.3" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="611.30" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (8 samples, 0.02%; +0.02%)</title><rect x="756.6" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="759.57" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (13 samples, 0.03%; +0.03%)</title><rect x="1091.2" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1094.22" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (17 samples, 0.03%; +0.00%)</title><rect x="1102.3" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1105.32" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (13 samples, 0.03%; +0.03%)</title><rect x="1090.6" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1093.57" y="287.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (7 samples, 0.01%; +0.01%)</title><rect x="1189.5" y="533" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1192.46" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (50 samples, 0.10%; +0.05%)</title><rect x="1146.6" y="277" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1149.58" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (15 samples, 0.03%; +0.03%)</title><rect x="654.4" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="657.44" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (6 samples, 0.01%; +0.01%)</title><rect x="1150.4" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1153.36" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (75 samples, 0.15%; +0.06%)</title><rect x="1029.2" y="229" width="1.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1032.18" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (8 samples, 0.02%; +0.02%)</title><rect x="837.3" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="840.33" y="207.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (6 samples, 0.01%; 0.00%)</title><rect x="26.6" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.58" y="399.5" ></text>
</g>
<g >
<title>__sched_text_start (42 samples, 0.08%; 0.00%)</title><rect x="267.0" y="309" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="269.97" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (13 samples, 0.03%; +0.03%)</title><rect x="731.3" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="734.33" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (17 samples, 0.03%; +0.00%)</title><rect x="1171.2" y="373" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1174.21" y="383.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (30 samples, 0.06%; +0.02%)</title><rect x="548.0" y="341" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="550.95" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (10 samples, 0.02%; +0.02%)</title><rect x="556.4" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="559.37" y="383.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%; +0.01%)</title><rect x="666.1" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="669.05" y="287.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5 samples, 0.01%; +0.01%)</title><rect x="1089.6" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1092.63" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (9,692 samples, 19.27%; +0.01%)</title><rect x="41.3" y="405" width="227.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="44.34" y="415.5" >std::__copy_move_a&lt;true, int*,..</text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="548.5" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="551.51" y="335.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (6 samples, 0.01%; +0.01%)</title><rect x="714.6" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="717.61" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (6 samples, 0.01%; +0.01%)</title><rect x="1095.5" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1098.54" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (5 samples, 0.01%; +0.00%)</title><rect x="1150.2" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1153.19" y="287.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1109.4" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1112.43" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (6 samples, 0.01%; +0.01%)</title><rect x="969.0" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="971.97" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="634.0" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="637.04" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (30 samples, 0.06%; +0.02%)</title><rect x="1089.7" y="229" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1092.75" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (9 samples, 0.02%; +0.02%)</title><rect x="481.2" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="484.17" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (8 samples, 0.02%; +0.02%)</title><rect x="517.9" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="520.86" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (20 samples, 0.04%; +0.04%)</title><rect x="901.6" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="904.63" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (42 samples, 0.08%; +0.01%)</title><rect x="817.3" y="181" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="820.32" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (13 samples, 0.03%; +0.03%)</title><rect x="874.8" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="877.82" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (292 samples, 0.58%; +0.16%)</title><rect x="801.5" y="213" width="6.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="804.51" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (10 samples, 0.02%; +0.02%)</title><rect x="654.8" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="657.79" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (8 samples, 0.02%; +0.02%)</title><rect x="409.5" y="421" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="412.49" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="618.8" y="325" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="621.81" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (12 samples, 0.02%; +0.02%)</title><rect x="662.0" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="665.00" y="239.5" ></text>
</g>
<g >
<title>ext4_finish_bio (6 samples, 0.01%; +0.00%)</title><rect x="698.4" y="69" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="701.42" y="79.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (13 samples, 0.03%; +0.03%)</title><rect x="731.6" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="734.64" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (7 samples, 0.01%; +0.01%)</title><rect x="1147.5" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1150.50" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (32 samples, 0.06%; +0.05%)</title><rect x="970.1" y="181" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="973.07" y="191.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (16 samples, 0.03%; +0.03%)</title><rect x="268.7" y="405" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="271.68" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (18 samples, 0.04%; +0.04%)</title><rect x="1038.4" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1041.40" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (76 samples, 0.15%; +0.03%)</title><rect x="930.1" y="181" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="933.15" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (6 samples, 0.01%; +0.01%)</title><rect x="1123.9" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1126.90" y="223.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23 samples, 0.05%; +0.05%)</title><rect x="472.2" y="373" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="475.21" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (36 samples, 0.07%; +0.07%)</title><rect x="860.1" y="181" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="863.09" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (149 samples, 0.30%; +0.05%)</title><rect x="660.0" y="261" width="3.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="662.98" y="271.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (44 samples, 0.09%; +0.09%)</title><rect x="1064.5" y="181" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1067.51" y="191.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (16 samples, 0.03%; +0.00%)</title><rect x="21.0" y="389" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="24.05" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (13 samples, 0.03%; +0.03%)</title><rect x="819.7" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="822.74" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (16 samples, 0.03%; +0.01%)</title><rect x="1147.3" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1150.33" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (30 samples, 0.06%; +0.03%)</title><rect x="713.0" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="715.97" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (10 samples, 0.02%; +0.02%)</title><rect x="975.0" y="149" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="978.00" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (385 samples, 0.77%; +0.16%)</title><rect x="675.5" y="277" width="9.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="678.48" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (6 samples, 0.01%; +0.01%)</title><rect x="597.4" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="600.44" y="367.5" ></text>
</g>
<g >
<title>_int_free (10 samples, 0.02%; +0.02%)</title><rect x="1034.9" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1037.93" y="191.5" ></text>
</g>
<g >
<title>do_user_addr_fault (5 samples, 0.01%; +0.00%)</title><rect x="1185.9" y="469" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1188.90" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (29 samples, 0.06%; +0.06%)</title><rect x="785.2" y="229" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="788.17" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (14 samples, 0.03%; +0.03%)</title><rect x="1069.5" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1072.50" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (20 samples, 0.04%; +0.04%)</title><rect x="936.2" y="197" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="939.15" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (6 samples, 0.01%; +0.01%)</title><rect x="1156.8" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1159.79" y="303.5" ></text>
</g>
<g >
<title>irq_exit (5 samples, 0.01%; 0.00%)</title><rect x="924.5" y="53" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="927.54" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (16 samples, 0.03%; +0.03%)</title><rect x="724.2" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="727.25" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (14 samples, 0.03%; +0.01%)</title><rect x="630.1" y="309" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="633.12" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (96 samples, 0.19%; +0.01%)</title><rect x="1121.9" y="293" width="2.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1124.91" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (6 samples, 0.01%; +0.01%)</title><rect x="401.1" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="404.11" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (26 samples, 0.05%; +0.05%)</title><rect x="27.1" y="517" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="30.05" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (5 samples, 0.01%; +0.01%)</title><rect x="702.8" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="705.79" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (34 samples, 0.07%; +0.02%)</title><rect x="1101.9" y="245" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1104.92" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (65 samples, 0.13%; +0.02%)</title><rect x="876.8" y="197" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="879.79" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (14 samples, 0.03%; +0.03%)</title><rect x="892.3" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="895.31" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (44 samples, 0.09%; +0.01%)</title><rect x="1141.1" y="293" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1144.12" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (7 samples, 0.01%; +0.01%)</title><rect x="273.0" y="437" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="275.97" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (49 samples, 0.10%; +0.01%)</title><rect x="1137.4" y="277" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1140.39" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (10 samples, 0.02%; +0.02%)</title><rect x="398.4" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="401.42" y="383.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (9 samples, 0.02%; +0.02%)</title><rect x="944.7" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="947.67" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (139 samples, 0.28%; +0.04%)</title><rect x="1092.3" y="261" width="3.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1095.26" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_initialize (6 samples, 0.01%; 0.00%)</title><rect x="1183.6" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.64" y="495.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (5 samples, 0.01%; +0.01%)</title><rect x="901.3" y="149" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="904.32" y="159.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (13 samples, 0.03%; +0.02%)</title><rect x="516.3" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="519.28" y="191.5" ></text>
</g>
<g >
<title>vfs_writev (18 samples, 0.04%; 0.00%)</title><rect x="21.0" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.02" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (24 samples, 0.05%; +0.05%)</title><rect x="1059.0" y="213" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1062.02" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (15 samples, 0.03%; +0.03%)</title><rect x="608.0" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="610.95" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (7 samples, 0.01%; +0.01%)</title><rect x="955.0" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="957.99" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (16 samples, 0.03%; +0.03%)</title><rect x="1036.1" y="197" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1039.08" y="207.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (10 samples, 0.02%; +0.02%)</title><rect x="398.6" y="389" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="401.65" y="399.5" ></text>
</g>
<g >
<title>bio_endio (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="101" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.01%; 0.00%)</title><rect x="26.6" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.58" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (12 samples, 0.02%; +0.02%)</title><rect x="1110.5" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1113.48" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (166 samples, 0.33%; +0.13%)</title><rect x="940.5" y="149" width="3.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="943.47" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (5 samples, 0.01%; +0.01%)</title><rect x="1114.2" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1117.17" y="271.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (34 samples, 0.07%; +0.05%)</title><rect x="1108.7" y="213" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1111.75" y="223.5" ></text>
</g>
<g >
<title>mergesort (5,022 samples, 9.98%; +0.38%)</title><rect x="837.5" y="245" width="117.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="840.54" y="255.5" >mergesort</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (9 samples, 0.02%; +0.02%)</title><rect x="1013.8" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1016.80" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (19 samples, 0.04%; +0.03%)</title><rect x="902.1" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="905.10" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (515 samples, 1.02%; +0.11%)</title><rect x="672.8" y="293" width="12.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="675.79" y="303.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (196 samples, 0.39%; +0.03%)</title><rect x="604.7" y="309" width="4.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="607.71" y="319.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (13 samples, 0.03%; +0.01%)</title><rect x="471.4" y="309" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="474.36" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (10 samples, 0.02%; +0.02%)</title><rect x="616.0" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="618.97" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (10 samples, 0.02%; +0.02%)</title><rect x="556.1" y="373" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="559.14" y="383.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (6 samples, 0.01%; 0.00%)</title><rect x="1183.3" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.29" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (15 samples, 0.03%; +0.03%)</title><rect x="1090.1" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1093.10" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (18 samples, 0.04%; +0.01%)</title><rect x="1145.2" y="277" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1148.25" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (9 samples, 0.02%; +0.02%)</title><rect x="1102.7" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1105.72" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (22 samples, 0.04%; +0.01%)</title><rect x="1046.4" y="181" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1049.35" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (9 samples, 0.02%; +0.02%)</title><rect x="948.6" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="951.63" y="207.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (172 samples, 0.34%; +0.04%)</title><rect x="679.5" y="261" width="4.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="682.52" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (10 samples, 0.02%; +0.02%)</title><rect x="1103.2" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1106.23" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (12 samples, 0.02%; +0.01%)</title><rect x="1123.3" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1126.34" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (5 samples, 0.01%; +0.01%)</title><rect x="809.1" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="812.09" y="223.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (8 samples, 0.02%; +0.02%)</title><rect x="740.6" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="743.55" y="239.5" ></text>
</g>
<g >
<title>finish_task_switch (16 samples, 0.03%; +0.03%)</title><rect x="397.9" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="400.90" y="287.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (29 samples, 0.06%; +0.01%)</title><rect x="21.8" y="517" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="24.78" y="527.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (42 samples, 0.08%; 0.00%)</title><rect x="1137.6" y="245" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1140.55" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (790 samples, 1.57%; +0.10%)</title><rect x="958.4" y="245" width="18.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="961.37" y="255.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="698.9" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="701.89" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (9 samples, 0.02%; +0.02%)</title><rect x="690.2" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="693.17" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (10 samples, 0.02%; +0.02%)</title><rect x="1163.2" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1166.21" y="367.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (21 samples, 0.04%; 0.00%)</title><rect x="266.4" y="357" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="269.43" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (8 samples, 0.02%; +0.02%)</title><rect x="276.0" y="453" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="279.04" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (11 samples, 0.02%; +0.02%)</title><rect x="617.5" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="620.45" y="335.5" ></text>
</g>
<g >
<title>merge (1,263 samples, 2.51%; +0.22%)</title><rect x="717.1" y="277" width="29.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="720.09" y="287.5" >me..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (6 samples, 0.01%; +0.01%)</title><rect x="1000.0" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1003.05" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (11 samples, 0.02%; +0.01%)</title><rect x="1136.4" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1139.40" y="239.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (85 samples, 0.17%; +0.17%)</title><rect x="605.9" y="277" width="2.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="608.91" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (365 samples, 0.73%; +0.02%)</title><rect x="1038.8" y="261" width="8.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1041.82" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (5 samples, 0.01%; +0.01%)</title><rect x="519.2" y="405" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="522.22" y="415.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (42 samples, 0.08%; +0.02%)</title><rect x="398.9" y="389" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="401.88" y="399.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (10 samples, 0.02%; +0.02%)</title><rect x="668.1" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="671.09" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1045.6" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1048.60" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (10 samples, 0.02%; +0.02%)</title><rect x="33.2" y="469" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="36.20" y="479.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (8 samples, 0.02%; +0.02%)</title><rect x="801.3" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="804.33" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.01%; 0.00%)</title><rect x="471.2" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="474.18" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (27 samples, 0.05%; +0.01%)</title><rect x="1139.4" y="261" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1142.40" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (11 samples, 0.02%; +0.02%)</title><rect x="892.0" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="895.03" y="191.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (12 samples, 0.02%; +0.02%)</title><rect x="777.6" y="213" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="780.59" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (367 samples, 0.73%; +0.11%)</title><rect x="928.1" y="213" width="8.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="931.06" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (10 samples, 0.02%; +0.02%)</title><rect x="953.0" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="956.02" y="175.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (10 samples, 0.02%; +0.02%)</title><rect x="1034.4" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1037.39" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (6 samples, 0.01%; +0.01%)</title><rect x="1084.3" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1087.33" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (5 samples, 0.01%; +0.01%)</title><rect x="888.1" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="891.12" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (149 samples, 0.30%; +0.03%)</title><rect x="641.8" y="277" width="3.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="644.85" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (10 samples, 0.02%; +0.02%)</title><rect x="1057.3" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1060.26" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (22 samples, 0.04%; +0.04%)</title><rect x="976.4" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="979.38" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (8 samples, 0.02%; +0.02%)</title><rect x="1076.7" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1079.68" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (81 samples, 0.16%; +0.03%)</title><rect x="1011.9" y="197" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1014.90" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (25 samples, 0.05%; +0.03%)</title><rect x="1102.9" y="245" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1105.93" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (25 samples, 0.05%; +0.05%)</title><rect x="1100.2" y="245" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1103.16" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (106 samples, 0.21%; +0.03%)</title><rect x="995.3" y="213" width="2.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="998.33" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (20 samples, 0.04%; +0.04%)</title><rect x="784.1" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="787.09" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (8 samples, 0.02%; +0.02%)</title><rect x="599.3" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="602.30" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (1,142 samples, 2.27%; +0.37%)</title><rect x="919.7" y="229" width="26.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="922.69" y="239.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (8 samples, 0.02%; +0.02%)</title><rect x="934.3" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="937.28" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1,007 samples, 2.00%; +0.02%)</title><rect x="977.1" y="245" width="23.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="980.06" y="255.5" >s..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (769 samples, 1.53%; +0.08%)</title><rect x="555.1" y="389" width="18.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="558.10" y="399.5" ></text>
</g>
<g >
<title>__GI___strlen_sse2 (13 samples, 0.03%; +0.03%)</title><rect x="20.6" y="517" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="23.65" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (11 samples, 0.02%; +0.02%)</title><rect x="803.8" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="806.77" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (7 samples, 0.01%; +0.01%)</title><rect x="611.9" y="325" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="614.87" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (128 samples, 0.25%; +0.09%)</title><rect x="763.2" y="197" width="3.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="766.16" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (246 samples, 0.49%; +0.02%)</title><rect x="684.9" y="293" width="5.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="687.87" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="557.0" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="560.03" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (43 samples, 0.09%; +0.09%)</title><rect x="925.9" y="213" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="928.90" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (10 samples, 0.02%; +0.02%)</title><rect x="740.0" y="213" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="743.03" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (9 samples, 0.02%; +0.02%)</title><rect x="756.4" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="759.36" y="239.5" ></text>
</g>
<g >
<title>end_page_writeback (5 samples, 0.01%; 0.00%)</title><rect x="698.4" y="53" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.45" y="63.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (31 samples, 0.06%; 0.00%)</title><rect x="397.5" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="400.55" y="351.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="663.5" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="666.47" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (106 samples, 0.21%; +0.02%)</title><rect x="870.7" y="181" width="2.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="873.69" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (434 samples, 0.86%; +0.03%)</title><rect x="1124.4" y="293" width="10.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1127.37" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (8 samples, 0.02%; +0.02%)</title><rect x="875.6" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="878.57" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (6 samples, 0.01%; +0.01%)</title><rect x="1113.6" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1116.58" y="239.5" ></text>
</g>
<g >
<title>mergesort (22,704 samples, 45.13%; +0.03%)</title><rect x="630.7" y="357" width="532.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="633.66" y="367.5" >mergesort</text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (4,918 samples, 9.78%; +0.00%)</title><rect x="283.3" y="389" width="115.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="286.29" y="399.5" >std::__copy_mo..</text>
</g>
<g >
<title>std::__alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (7 samples, 0.01%; +0.01%)</title><rect x="1039.3" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1042.29" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (59 samples, 0.12%; +0.05%)</title><rect x="987.6" y="213" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="990.57" y="223.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (6 samples, 0.01%; 0.00%)</title><rect x="26.6" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.58" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (22 samples, 0.04%; +0.04%)</title><rect x="752.8" y="245" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="755.82" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (185 samples, 0.37%; +0.05%)</title><rect x="622.4" y="293" width="4.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="625.40" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (128 samples, 0.25%; +0.09%)</title><rect x="1032.5" y="213" width="3.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1035.49" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (70 samples, 0.14%; +0.03%)</title><rect x="973.8" y="181" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="976.80" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (6 samples, 0.01%; +0.01%)</title><rect x="849.7" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="852.67" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%; 0.00%)</title><rect x="26.4" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.40" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14 samples, 0.03%; +0.01%)</title><rect x="1145.7" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1148.67" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (13 samples, 0.03%; +0.03%)</title><rect x="974.1" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="977.13" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (19 samples, 0.04%; +0.00%)</title><rect x="689.6" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="692.58" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::get_allocator (52 samples, 0.10%; +0.05%)</title><rect x="891.4" y="197" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="894.42" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (295 samples, 0.59%; +0.03%)</title><rect x="1142.4" y="309" width="6.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1145.36" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (14 samples, 0.03%; +0.03%)</title><rect x="820.3" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="823.30" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (19 samples, 0.04%; +0.01%)</title><rect x="1119.0" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1122.00" y="271.5" ></text>
</g>
<g >
<title>mergesort (14,659 samples, 29.14%; +0.23%)</title><rect x="746.7" y="277" width="343.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="749.72" y="287.5" >mergesort</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.01%; 0.00%)</title><rect x="26.6" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.58" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (20 samples, 0.04%; +0.01%)</title><rect x="1151.2" y="293" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1154.25" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (7 samples, 0.01%; +0.01%)</title><rect x="646.6" y="309" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="649.58" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (112 samples, 0.22%; +0.13%)</title><rect x="1014.0" y="213" width="2.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1017.01" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (17 samples, 0.03%; +0.02%)</title><rect x="1045.3" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1048.32" y="223.5" ></text>
</g>
<g >
<title>malloc (133 samples, 0.26%; +0.26%)</title><rect x="1186.3" y="533" width="3.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1189.27" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (6 samples, 0.01%; +0.01%)</title><rect x="918.2" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="921.21" y="207.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%; +0.02%)</title><rect x="1182.8" y="453" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1185.85" y="463.5" ></text>
</g>
<g >
<title>_int_malloc (65 samples, 0.13%; +0.12%)</title><rect x="1184.5" y="533" width="1.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1187.49" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (5 samples, 0.01%; +0.01%)</title><rect x="577.0" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="580.04" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (9 samples, 0.02%; +0.02%)</title><rect x="1088.8" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1091.83" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (11 samples, 0.02%; +0.02%)</title><rect x="697.3" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="700.27" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (5 samples, 0.01%; +0.01%)</title><rect x="672.7" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="675.67" y="303.5" ></text>
</g>
<g >
<title>[merSort] (21 samples, 0.04%; +0.04%)</title><rect x="942.4" y="117" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="945.39" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (63 samples, 0.13%; +0.04%)</title><rect x="1161.0" y="325" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1164.03" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (2,544 samples, 5.06%; +0.06%)</title><rect x="413.9" y="389" width="59.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="416.87" y="399.5" >std::_..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (8 samples, 0.02%; +0.02%)</title><rect x="720.9" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="723.94" y="271.5" ></text>
</g>
<g >
<title>std::__do_alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (22 samples, 0.04%; +0.04%)</title><rect x="968.3" y="197" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="971.31" y="207.5" ></text>
</g>
<g >
<title>malloc (5 samples, 0.01%; +0.01%)</title><rect x="1056.6" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1059.60" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (33 samples, 0.07%; +0.06%)</title><rect x="934.5" y="181" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="937.47" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (8 samples, 0.02%; +0.02%)</title><rect x="835.2" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="838.20" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (22 samples, 0.04%; +0.01%)</title><rect x="1147.2" y="261" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1150.19" y="271.5" ></text>
</g>
<g >
<title>mmap64 (5 samples, 0.01%; 0.00%)</title><rect x="1189.6" y="533" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="543.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (90 samples, 0.18%; +0.10%)</title><rect x="1082.1" y="181" width="2.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1085.10" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (27 samples, 0.05%; +0.05%)</title><rect x="929.4" y="197" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="932.35" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (13 samples, 0.03%; +0.03%)</title><rect x="745.8" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="748.83" y="255.5" ></text>
</g>
<g >
<title>mergesort (33,093 samples, 65.78%; +0.03%)</title><rect x="403.1" y="469" width="776.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="406.11" y="479.5" >mergesort</text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (44 samples, 0.09%; +0.01%)</title><rect x="942.3" y="133" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="945.30" y="143.5" ></text>
</g>
<g >
<title>merge (836 samples, 1.66%; +0.19%)</title><rect x="574.8" y="389" width="19.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="577.81" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (7 samples, 0.01%; +0.01%)</title><rect x="580.0" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="583.04" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (15 samples, 0.03%; +0.03%)</title><rect x="1144.9" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1147.89" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (13 samples, 0.03%; +0.03%)</title><rect x="705.0" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="708.04" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="647.9" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="650.85" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (6 samples, 0.01%; +0.01%)</title><rect x="1037.6" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1040.63" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (54 samples, 0.11%; +0.02%)</title><rect x="773.8" y="213" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="776.81" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (11 samples, 0.02%; +0.01%)</title><rect x="1155.6" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1158.59" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (22 samples, 0.04%; +0.04%)</title><rect x="1159.0" y="341" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1161.99" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (16 samples, 0.03%; +0.03%)</title><rect x="678.9" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="681.91" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (290 samples, 0.58%; +0.03%)</title><rect x="584.4" y="325" width="6.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="587.40" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="667.5" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="670.51" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (87 samples, 0.17%; +0.03%)</title><rect x="995.8" y="197" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="998.78" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (18 samples, 0.04%; +0.04%)</title><rect x="569.7" y="309" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="572.74" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (12 samples, 0.02%; +0.02%)</title><rect x="834.5" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="837.54" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (6 samples, 0.01%; 0.00%)</title><rect x="1183.3" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.29" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (35 samples, 0.07%; +0.04%)</title><rect x="475.3" y="421" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="478.33" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (21 samples, 0.04%; +0.04%)</title><rect x="553.8" y="389" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="556.77" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (6 samples, 0.01%; +0.01%)</title><rect x="1137.2" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1140.25" y="287.5" ></text>
</g>
<g >
<title>[merSort] (5 samples, 0.01%; +0.01%)</title><rect x="488.6" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="491.63" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (15 samples, 0.03%; +0.03%)</title><rect x="1178.8" y="421" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1181.76" y="431.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="609.2" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="612.19" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (7 samples, 0.01%; +0.01%)</title><rect x="1140.6" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1143.62" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (14 samples, 0.03%; +0.01%)</title><rect x="1157.7" y="309" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1160.72" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (30 samples, 0.06%; +0.06%)</title><rect x="1007.5" y="197" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1010.51" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (11 samples, 0.02%; +0.02%)</title><rect x="582.2" y="341" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="585.22" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (22 samples, 0.04%; +0.04%)</title><rect x="526.2" y="389" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="529.21" y="399.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (9 samples, 0.02%; +0.01%)</title><rect x="1156.6" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1159.57" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (83 samples, 0.16%; +0.01%)</title><rect x="623.6" y="277" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="626.62" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (9 samples, 0.02%; +0.02%)</title><rect x="1113.9" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1116.93" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (46 samples, 0.09%; +0.02%)</title><rect x="1044.0" y="213" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1046.96" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (8 samples, 0.02%; +0.02%)</title><rect x="597.7" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="600.70" y="367.5" ></text>
</g>
<g >
<title>irq_exit (21 samples, 0.04%; 0.00%)</title><rect x="266.4" y="341" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="269.43" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (157 samples, 0.31%; +0.12%)</title><rect x="16.8" y="501" width="3.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="19.78" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (59 samples, 0.12%; +0.04%)</title><rect x="1088.4" y="213" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1091.36" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (71 samples, 0.14%; +0.01%)</title><rect x="271.6" y="469" width="1.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="274.61" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (6 samples, 0.01%; +0.01%)</title><rect x="399.2" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="402.21" y="383.5" ></text>
</g>
<g >
<title>scsi_finish_command (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="165" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="175.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (49 samples, 0.10%; +0.10%)</title><rect x="623.9" y="261" width="1.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="626.88" y="271.5" ></text>
</g>
<g >
<title>blk_done_softirq (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="197" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (36 samples, 0.07%; +0.06%)</title><rect x="895.0" y="165" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="897.99" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (7 samples, 0.01%; +0.01%)</title><rect x="525.8" y="389" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="528.78" y="399.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (22 samples, 0.04%; +0.04%)</title><rect x="878.3" y="197" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="881.31" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (9 samples, 0.02%; +0.02%)</title><rect x="724.6" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="727.62" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (12 samples, 0.02%; +0.02%)</title><rect x="399.4" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="402.35" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (7 samples, 0.01%; +0.01%)</title><rect x="1135.7" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1138.67" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (19 samples, 0.04%; +0.04%)</title><rect x="589.4" y="293" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="592.44" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (16 samples, 0.03%; +0.03%)</title><rect x="35.0" y="453" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="37.98" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (16 samples, 0.03%; +0.03%)</title><rect x="883.1" y="213" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="886.07" y="223.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (7 samples, 0.01%; 0.00%)</title><rect x="546.8" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="549.78" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (5 samples, 0.01%; +0.01%)</title><rect x="1159.9" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1162.88" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (5 samples, 0.01%; +0.01%)</title><rect x="1123.4" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1126.41" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (21 samples, 0.04%; +0.04%)</title><rect x="1000.2" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1003.19" y="239.5" ></text>
</g>
<g >
<title>__sched_text_start (5 samples, 0.01%; 0.00%)</title><rect x="924.5" y="117" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="927.54" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="757.3" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="760.30" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (11 samples, 0.02%; +0.02%)</title><rect x="880.7" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="883.68" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (24 samples, 0.05%; +0.05%)</title><rect x="873.2" y="181" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="876.17" y="191.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (5 samples, 0.01%; 0.00%)</title><rect x="1189.6" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="479.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (108 samples, 0.21%; +0.00%)</title><rect x="605.8" y="293" width="2.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="608.77" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (80 samples, 0.16%; +0.02%)</title><rect x="1114.3" y="261" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1117.28" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (42 samples, 0.08%; +0.08%)</title><rect x="732.8" y="229" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="735.76" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (21 samples, 0.04%; +0.01%)</title><rect x="1162.6" y="341" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1165.58" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (30 samples, 0.06%; +0.02%)</title><rect x="775.1" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="778.08" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (25 samples, 0.05%; +0.01%)</title><rect x="612.1" y="341" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="615.13" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (5,337 samples, 10.61%; +0.10%)</title><rect x="276.4" y="453" width="125.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="279.37" y="463.5" >std::vector&lt;int..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (13 samples, 0.03%; +0.03%)</title><rect x="652.6" y="309" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="655.59" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (18 samples, 0.04%; +0.04%)</title><rect x="615.2" y="341" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="618.15" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (27 samples, 0.05%; +0.05%)</title><rect x="833.9" y="197" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="836.91" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (11 samples, 0.02%; +0.02%)</title><rect x="836.0" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="838.97" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (5 samples, 0.01%; +0.01%)</title><rect x="548.4" y="325" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="551.40" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (15 samples, 0.03%; +0.03%)</title><rect x="1182.5" y="453" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1185.49" y="463.5" ></text>
</g>
<g >
<title>mergesort (24,517 samples, 48.74%; +0.03%)</title><rect x="594.4" y="389" width="575.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="597.42" y="399.5" >mergesort</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (9 samples, 0.02%; +0.02%)</title><rect x="1089.2" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1092.18" y="207.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (16 samples, 0.03%; +0.03%)</title><rect x="662.3" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="665.28" y="255.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (9 samples, 0.02%; +0.02%)</title><rect x="268.0" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="270.95" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (15 samples, 0.03%; +0.02%)</title><rect x="711.6" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="714.56" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (6 samples, 0.01%; +0.01%)</title><rect x="550.0" y="389" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="552.97" y="399.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (5 samples, 0.01%; +0.01%)</title><rect x="713.6" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="716.55" y="207.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (11 samples, 0.02%; +0.02%)</title><rect x="661.7" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="664.69" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (77 samples, 0.15%; +0.05%)</title><rect x="951.9" y="181" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="954.94" y="191.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (6 samples, 0.01%; +0.00%)</title><rect x="1183.3" y="373" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1186.29" y="383.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1119.1" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1122.11" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (140 samples, 0.28%; +0.19%)</title><rect x="932.0" y="197" width="3.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="935.05" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (5 samples, 0.01%; +0.01%)</title><rect x="662.9" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="665.91" y="239.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="995.6" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="998.64" y="207.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (5 samples, 0.01%; +0.01%)</title><rect x="1057.5" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1060.52" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (11 samples, 0.02%; +0.02%)</title><rect x="1039.5" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1042.46" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (382 samples, 0.76%; +0.15%)</title><rect x="618.9" y="325" width="9.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="621.93" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (18 samples, 0.04%; +0.04%)</title><rect x="282.8" y="389" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="285.75" y="399.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (14 samples, 0.03%; +0.00%)</title><rect x="1150.5" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1153.55" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (12 samples, 0.02%; +0.00%)</title><rect x="1156.5" y="293" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1159.50" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (8 samples, 0.02%; +0.02%)</title><rect x="1070.7" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1073.75" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (16 samples, 0.03%; +0.02%)</title><rect x="667.6" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="670.65" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (63 samples, 0.13%; +0.01%)</title><rect x="1108.1" y="245" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1111.14" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (22 samples, 0.04%; +0.04%)</title><rect x="719.9" y="261" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="722.86" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (17 samples, 0.03%; +0.03%)</title><rect x="775.8" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="778.78" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.01%; 0.00%)</title><rect x="1189.6" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (8 samples, 0.02%; +0.02%)</title><rect x="1173.7" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1176.70" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (26 samples, 0.05%; 0.00%)</title><rect x="836.9" y="213" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="839.91" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (27 samples, 0.05%; +0.00%)</title><rect x="738.3" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="741.35" y="223.5" ></text>
</g>
<g >
<title>[unknown] (678 samples, 1.35%; 0.00%)</title><rect x="10.9" y="533" width="15.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.94" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (6 samples, 0.01%; +0.01%)</title><rect x="873.9" y="181" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="876.90" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (93 samples, 0.18%; +0.02%)</title><rect x="779.9" y="197" width="2.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="782.86" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (5 samples, 0.01%; +0.00%)</title><rect x="1157.8" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1160.84" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (28 samples, 0.06%; +0.06%)</title><rect x="988.2" y="197" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="991.16" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (7 samples, 0.01%; +0.01%)</title><rect x="679.4" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="682.35" y="271.5" ></text>
</g>
<g >
<title>irq_exit (11 samples, 0.02%; 0.00%)</title><rect x="397.3" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="400.29" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (17 samples, 0.03%; +0.03%)</title><rect x="625.2" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="628.17" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (323 samples, 0.64%; +0.02%)</title><rect x="707.9" y="277" width="7.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="710.90" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (6 samples, 0.01%; +0.01%)</title><rect x="781.0" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="783.99" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (13 samples, 0.03%; +0.01%)</title><rect x="1113.4" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1116.41" y="255.5" ></text>
</g>
<g >
<title>merge (1,991 samples, 3.96%; +0.30%)</title><rect x="790.8" y="245" width="46.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="793.84" y="255.5" >merge</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (92 samples, 0.18%; +0.05%)</title><rect x="666.4" y="293" width="2.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="669.38" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (6 samples, 0.01%; +0.01%)</title><rect x="269.5" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="272.52" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (19 samples, 0.04%; +0.04%)</title><rect x="1152.0" y="325" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1155.00" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (59 samples, 0.12%; +0.05%)</title><rect x="271.8" y="453" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="274.75" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (26 samples, 0.05%; +0.05%)</title><rect x="985.3" y="181" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="988.32" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (11 samples, 0.02%; +0.02%)</title><rect x="760.9" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="763.86" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (10 samples, 0.02%; +0.02%)</title><rect x="850.7" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="853.66" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (7 samples, 0.01%; +0.01%)</title><rect x="637.5" y="309" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="640.46" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (44 samples, 0.09%; +0.01%)</title><rect x="861.0" y="181" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="863.95" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (42 samples, 0.08%; +0.03%)</title><rect x="986.0" y="213" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="989.00" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (17 samples, 0.03%; +0.03%)</title><rect x="602.6" y="325" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="605.58" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (30 samples, 0.06%; +0.06%)</title><rect x="757.4" y="229" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="760.42" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (62 samples, 0.12%; +0.04%)</title><rect x="816.9" y="197" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="819.85" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (7 samples, 0.01%; +0.01%)</title><rect x="277.5" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="280.54" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (7 samples, 0.01%; +0.01%)</title><rect x="745.6" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="748.64" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (6 samples, 0.01%; 0.00%)</title><rect x="1163.1" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1166.07" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (5 samples, 0.01%; +0.01%)</title><rect x="799.1" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="802.07" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (15 samples, 0.03%; +0.03%)</title><rect x="275.6" y="453" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="278.57" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (16 samples, 0.03%; +0.03%)</title><rect x="1037.2" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1040.20" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (11 samples, 0.02%; +0.00%)</title><rect x="739.4" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="742.35" y="223.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (7 samples, 0.01%; +0.01%)</title><rect x="269.9" y="421" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="272.92" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (21 samples, 0.04%; 0.00%)</title><rect x="1123.6" y="261" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1126.64" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (123 samples, 0.24%; +0.07%)</title><rect x="950.9" y="197" width="2.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="953.86" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (50 samples, 0.10%; +0.02%)</title><rect x="1100.7" y="245" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1103.75" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (5 samples, 0.01%; +0.01%)</title><rect x="690.0" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="693.03" y="271.5" ></text>
</g>
<g >
<title>mergesort (23,620 samples, 46.95%; +0.03%)</title><rect x="612.8" y="373" width="554.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="615.76" y="383.5" >mergesort</text>
</g>
<g >
<title>ret_from_intr (5 samples, 0.01%; 0.00%)</title><rect x="924.5" y="85" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="927.54" y="95.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (9 samples, 0.02%; +0.02%)</title><rect x="900.2" y="133" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="903.22" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (6 samples, 0.01%; +0.01%)</title><rect x="912.9" y="181" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="915.89" y="191.5" ></text>
</g>
<g >
<title>_int_free (10 samples, 0.02%; +0.02%)</title><rect x="953.3" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="956.25" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1,174 samples, 2.33%; +0.03%)</title><rect x="809.2" y="229" width="27.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="812.23" y="239.5" >s..</text>
</g>
<g >
<title>scsi_softirq_done (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="181" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="191.5" ></text>
</g>
<g >
<title>merge (909 samples, 1.81%; +0.16%)</title><rect x="669.4" y="309" width="21.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="672.41" y="319.5" >m..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (91 samples, 0.18%; +0.04%)</title><rect x="913.2" y="181" width="2.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="916.24" y="191.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (32 samples, 0.06%; +0.05%)</title><rect x="714.0" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="717.00" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (27 samples, 0.05%; +0.02%)</title><rect x="739.0" y="229" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="741.98" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (376 samples, 0.75%; +0.11%)</title><rect x="946.5" y="229" width="8.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="949.48" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (7 samples, 0.01%; +0.00%)</title><rect x="1046.9" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1049.87" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (26 samples, 0.05%; +0.05%)</title><rect x="850.0" y="197" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="853.05" y="207.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1,354 samples, 2.69%; +0.04%)</title><rect x="486.6" y="389" width="31.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="489.59" y="399.5" >st..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (9 samples, 0.02%; +0.02%)</title><rect x="967.9" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="970.87" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (8 samples, 0.02%; +0.02%)</title><rect x="1129.0" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1131.97" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (10 samples, 0.02%; +0.01%)</title><rect x="629.8" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="632.79" y="319.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1132.2" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1135.20" y="223.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (66 samples, 0.13%; +0.10%)</title><rect x="996.2" y="181" width="1.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="999.25" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (79 samples, 0.16%; +0.03%)</title><rect x="899.1" y="165" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="902.09" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (7 samples, 0.01%; +0.01%)</title><rect x="406.5" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="409.53" y="447.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.01%; 0.00%)</title><rect x="924.5" y="181" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="927.54" y="191.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (317 samples, 0.63%; +0.05%)</title><rect x="583.9" y="341" width="7.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="586.86" y="351.5" ></text>
</g>
<g >
<title>irq_exit (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="229" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="239.5" ></text>
</g>
<g >
<title>ret_from_intr (5 samples, 0.01%; 0.00%)</title><rect x="267.8" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="270.83" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (22 samples, 0.04%; +0.04%)</title><rect x="1177.8" y="453" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1180.78" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (680 samples, 1.35%; +0.29%)</title><rect x="769.2" y="229" width="16.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="772.21" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (50 samples, 0.10%; +0.10%)</title><rect x="571.7" y="357" width="1.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="574.66" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (11 samples, 0.02%; +0.02%)</title><rect x="583.5" y="341" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="586.51" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (209 samples, 0.42%; +0.04%)</title><rect x="950.4" y="213" width="4.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="953.39" y="223.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="1162.2" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1165.23" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (174 samples, 0.35%; +0.17%)</title><rect x="1104.0" y="245" width="4.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1106.96" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (36 samples, 0.07%; +0.01%)</title><rect x="1165.4" y="341" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1168.44" y="351.5" ></text>
</g>
<g >
<title>read (7 samples, 0.01%; 0.00%)</title><rect x="26.6" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.58" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (7 samples, 0.01%; +0.01%)</title><rect x="1157.0" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1160.00" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (26 samples, 0.05%; +0.05%)</title><rect x="531.6" y="341" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="534.62" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (14 samples, 0.03%; +0.03%)</title><rect x="931.4" y="149" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="934.44" y="159.5" ></text>
</g>
<g >
<title>[merSort] (5 samples, 0.01%; +0.01%)</title><rect x="861.3" y="149" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="864.30" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (16 samples, 0.03%; +0.03%)</title><rect x="658.6" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="661.62" y="287.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.01%; 0.00%)</title><rect x="1185.9" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1188.90" y="527.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (11 samples, 0.02%; +0.01%)</title><rect x="1150.6" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1153.59" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (31 samples, 0.06%; +0.03%)</title><rect x="1137.8" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1140.81" y="223.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (44 samples, 0.09%; 0.00%)</title><rect x="266.9" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="269.92" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (38 samples, 0.08%; +0.07%)</title><rect x="821.5" y="181" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="824.45" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (12 samples, 0.02%; +0.02%)</title><rect x="804.0" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="807.02" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (6 samples, 0.01%; +0.01%)</title><rect x="557.2" y="373" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="560.19" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (11 samples, 0.02%; +0.02%)</title><rect x="943.1" y="117" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="946.07" y="127.5" ></text>
</g>
<g >
<title>std::__alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="1092.1" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1095.07" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (64 samples, 0.13%; +0.13%)</title><rect x="1041.3" y="229" width="1.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1044.29" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (19 samples, 0.04%; 0.00%)</title><rect x="1128.2" y="245" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1131.22" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (17 samples, 0.03%; +0.03%)</title><rect x="959.6" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="962.59" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (6 samples, 0.01%; +0.00%)</title><rect x="667.2" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="670.16" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (9 samples, 0.02%; +0.02%)</title><rect x="723.0" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="725.98" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (53 samples, 0.11%; +0.03%)</title><rect x="1074.3" y="245" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1077.27" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (18 samples, 0.04%; +0.01%)</title><rect x="1136.2" y="245" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1139.24" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (15 samples, 0.03%; +0.03%)</title><rect x="726.8" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="729.83" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (6 samples, 0.01%; +0.01%)</title><rect x="620.7" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="623.74" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (9 samples, 0.02%; +0.02%)</title><rect x="1180.7" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1183.73" y="447.5" ></text>
</g>
<g >
<title>merge (1,027 samples, 2.04%; +0.19%)</title><rect x="691.5" y="293" width="24.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="694.53" y="303.5" >m..</text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (13 samples, 0.03%; +0.03%)</title><rect x="956.9" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="959.91" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (6 samples, 0.01%; +0.01%)</title><rect x="1057.7" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1060.68" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (16 samples, 0.03%; +0.03%)</title><rect x="847.7" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="850.72" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (35 samples, 0.07%; +0.07%)</title><rect x="408.3" y="421" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="411.31" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (15 samples, 0.03%; +0.03%)</title><rect x="1109.6" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1112.61" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (26 samples, 0.05%; +0.05%)</title><rect x="956.3" y="245" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="959.26" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (250 samples, 0.50%; +0.10%)</title><rect x="709.3" y="261" width="5.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="712.31" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (5 samples, 0.01%; 0.00%)</title><rect x="1169.3" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1172.33" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (64 samples, 0.13%; +0.10%)</title><rect x="1078.3" y="229" width="1.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1081.35" y="239.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (173 samples, 0.34%; +0.04%)</title><rect x="659.5" y="277" width="4.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="662.53" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (178 samples, 0.35%; +0.05%)</title><rect x="971.7" y="213" width="4.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="974.69" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (5 samples, 0.01%; 0.00%)</title><rect x="1157.8" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.84" y="303.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (21 samples, 0.04%; +0.04%)</title><rect x="547.5" y="341" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="550.46" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (21 samples, 0.04%; +0.04%)</title><rect x="1101.3" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1104.29" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (25 samples, 0.05%; +0.05%)</title><rect x="869.8" y="133" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="872.80" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (24 samples, 0.05%; +0.01%)</title><rect x="1094.2" y="245" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1097.20" y="255.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (13 samples, 0.03%; +0.03%)</title><rect x="994.9" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="997.89" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (6 samples, 0.01%; 0.00%)</title><rect x="1162.2" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1165.23" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::get_allocator (12 samples, 0.02%; +0.02%)</title><rect x="1093.8" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1096.81" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (21 samples, 0.04%; +0.02%)</title><rect x="900.9" y="165" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="903.95" y="175.5" ></text>
</g>
<g >
<title>merge (5,523 samples, 10.98%; +0.16%)</title><rect x="273.6" y="469" width="129.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="276.56" y="479.5" >merge</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (23 samples, 0.05%; +0.05%)</title><rect x="1122.5" y="261" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1125.54" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (19 samples, 0.04%; +0.04%)</title><rect x="945.9" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="948.94" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (6 samples, 0.01%; +0.01%)</title><rect x="1144.8" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1147.75" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (12 samples, 0.02%; +0.01%)</title><rect x="786.3" y="213" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="789.29" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (7 samples, 0.01%; +0.01%)</title><rect x="1170.1" y="389" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1173.06" y="399.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (28 samples, 0.06%; +0.02%)</title><rect x="608.7" y="293" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="611.66" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (11 samples, 0.02%; +0.02%)</title><rect x="953.5" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="956.49" y="175.5" ></text>
</g>
<g >
<title>vfs_read (7 samples, 0.01%; 0.00%)</title><rect x="26.6" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.58" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (42 samples, 0.08%; +0.08%)</title><rect x="626.9" y="309" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="629.88" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (9 samples, 0.02%; +0.00%)</title><rect x="272.7" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="275.67" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%; 0.00%)</title><rect x="26.4" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.40" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (14 samples, 0.03%; +0.03%)</title><rect x="1086.9" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1089.93" y="255.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.01%; +0.00%)</title><rect x="267.8" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="270.83" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (6 samples, 0.01%; +0.01%)</title><rect x="992.2" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="995.22" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (48 samples, 0.10%; +0.10%)</title><rect x="399.9" y="421" width="1.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="402.94" y="431.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (22 samples, 0.04%; +0.04%)</title><rect x="570.2" y="325" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="573.16" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (12 samples, 0.02%; +0.02%)</title><rect x="862.3" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="865.27" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (20 samples, 0.04%; +0.04%)</title><rect x="704.0" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="707.03" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (36 samples, 0.07%; +0.02%)</title><rect x="1046.0" y="197" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1049.02" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (5 samples, 0.01%; +0.01%)</title><rect x="1074.6" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1077.64" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (18 samples, 0.04%; +0.01%)</title><rect x="1152.6" y="309" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1155.56" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (11 samples, 0.02%; +0.02%)</title><rect x="960.4" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="963.41" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (8 samples, 0.02%; +0.02%)</title><rect x="696.9" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="699.95" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (5 samples, 0.01%; +0.01%)</title><rect x="1156.3" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1159.34" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (19 samples, 0.04%; +0.04%)</title><rect x="954.1" y="181" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="957.08" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (10 samples, 0.02%; +0.00%)</title><rect x="630.2" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="633.21" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (8 samples, 0.02%; +0.02%)</title><rect x="1125.0" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1128.05" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (17 samples, 0.03%; +0.02%)</title><rect x="689.1" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="692.11" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (5 samples, 0.01%; +0.01%)</title><rect x="785.0" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="788.02" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (5 samples, 0.01%; 0.00%)</title><rect x="516.1" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.07" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (8 samples, 0.02%; +0.00%)</title><rect x="630.3" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="633.26" y="287.5" ></text>
</g>
<g >
<title>_int_free (168 samples, 0.33%; +0.33%)</title><rect x="22.5" y="517" width="3.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="25.46" y="527.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (38 samples, 0.08%; +0.08%)</title><rect x="936.7" y="213" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="939.67" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (25 samples, 0.05%; +0.01%)</title><rect x="1160.4" y="325" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1163.35" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (89 samples, 0.18%; +0.03%)</title><rect x="1087.7" y="229" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1090.66" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (244 samples, 0.49%; +0.23%)</title><rect x="989.5" y="213" width="5.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="992.49" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (10 samples, 0.02%; +0.00%)</title><rect x="687.4" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="690.38" y="271.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (6 samples, 0.01%; +0.01%)</title><rect x="1158.2" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1161.22" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (10 samples, 0.02%; +0.00%)</title><rect x="1156.6" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1159.55" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (50 samples, 0.10%; +0.10%)</title><rect x="548.7" y="373" width="1.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="551.68" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (25 samples, 0.05%; +0.05%)</title><rect x="850.9" y="197" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="853.89" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (377 samples, 0.75%; +0.16%)</title><rect x="724.9" y="245" width="8.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="727.91" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (9 samples, 0.02%; +0.02%)</title><rect x="610.2" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="613.23" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (18 samples, 0.04%; +0.04%)</title><rect x="655.0" y="293" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="658.03" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (25 samples, 0.05%; +0.02%)</title><rect x="1174.8" y="405" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1177.75" y="415.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (206 samples, 0.41%; +0.03%)</title><rect x="622.0" y="309" width="4.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="625.05" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (48 samples, 0.10%; +0.10%)</title><rect x="473.6" y="405" width="1.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="476.57" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (10 samples, 0.02%; +0.02%)</title><rect x="754.2" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="757.16" y="255.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (9 samples, 0.02%; +0.02%)</title><rect x="1133.3" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1136.26" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (18 samples, 0.04%; +0.00%)</title><rect x="786.2" y="245" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="789.24" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (8 samples, 0.02%; +0.02%)</title><rect x="875.8" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="878.82" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (9 samples, 0.02%; +0.02%)</title><rect x="571.1" y="309" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="574.15" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (60 samples, 0.12%; +0.05%)</title><rect x="909.1" y="197" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="912.13" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (20 samples, 0.04%; +0.04%)</title><rect x="954.5" y="181" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="957.52" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_a&lt;int*, unsigned long, int&gt; (6 samples, 0.01%; 0.00%)</title><rect x="1183.6" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.64" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (17 samples, 0.03%; +0.01%)</title><rect x="1150.0" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1152.96" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1175.2" y="389" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1178.22" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (10 samples, 0.02%; +0.02%)</title><rect x="473.2" y="357" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="476.22" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (5 samples, 0.01%; +0.01%)</title><rect x="734.4" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="737.38" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (84 samples, 0.17%; +0.05%)</title><rect x="894.4" y="181" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="897.43" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (6 samples, 0.01%; +0.01%)</title><rect x="689.3" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="692.35" y="223.5" ></text>
</g>
<g >
<title>std::fill_n&lt;int*, unsigned long, int&gt; (5 samples, 0.01%; 0.00%)</title><rect x="1183.7" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.67" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (8 samples, 0.02%; +0.02%)</title><rect x="481.0" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="483.98" y="415.5" ></text>
</g>
<g >
<title>ext4_end_bio (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="85" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (21 samples, 0.04%; +0.04%)</title><rect x="579.5" y="357" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="582.48" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (35 samples, 0.07%; 0.00%)</title><rect x="819.5" y="181" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="822.48" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (7 samples, 0.01%; +0.01%)</title><rect x="694.9" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="697.88" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (22 samples, 0.04%; +0.04%)</title><rect x="38.2" y="437" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="41.22" y="447.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (34 samples, 0.07%; +0.07%)</title><rect x="1015.8" y="197" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1018.79" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (6 samples, 0.01%; +0.01%)</title><rect x="571.0" y="309" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="574.01" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (11 samples, 0.02%; +0.02%)</title><rect x="411.7" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="414.69" y="415.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (10 samples, 0.02%; +0.02%)</title><rect x="870.4" y="133" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="873.38" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (33 samples, 0.07%; +0.02%)</title><rect x="862.5" y="165" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="865.55" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (7 samples, 0.01%; +0.01%)</title><rect x="684.5" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="687.51" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (173 samples, 0.34%; +0.34%)</title><rect x="12.6" y="485" width="4.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="15.63" y="495.5" ></text>
</g>
<g >
<title>mergesort (38,713 samples, 76.96%; +0.02%)</title><rect x="273.3" y="485" width="908.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="276.32" y="495.5" >mergesort</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (7 samples, 0.01%; +0.01%)</title><rect x="609.0" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="612.03" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (8 samples, 0.02%; 0.00%)</title><rect x="1158.2" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.22" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (17 samples, 0.03%; +0.03%)</title><rect x="754.4" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="757.41" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (8 samples, 0.02%; +0.02%)</title><rect x="1134.1" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1137.06" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (36 samples, 0.07%; +0.07%)</title><rect x="1017.8" y="229" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1020.81" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (185 samples, 0.37%; +0.00%)</title><rect x="585.6" y="309" width="4.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="588.55" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (22 samples, 0.04%; +0.04%)</title><rect x="268.2" y="389" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="271.16" y="399.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.01%; 0.00%)</title><rect x="1185.9" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1188.90" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (13 samples, 0.03%; +0.03%)</title><rect x="637.2" y="309" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="640.16" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (20 samples, 0.04%; +0.04%)</title><rect x="917.5" y="197" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="920.46" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (23 samples, 0.05%; +0.04%)</title><rect x="639.8" y="293" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="642.81" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (15 samples, 0.03%; +0.03%)</title><rect x="1164.9" y="325" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1167.88" y="335.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (25 samples, 0.05%; +0.02%)</title><rect x="1147.9" y="245" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1150.94" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;int*, unsigned long&gt; (6 samples, 0.01%; +0.00%)</title><rect x="1183.6" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1186.64" y="447.5" ></text>
</g>
<g >
<title>_int_free (10 samples, 0.02%; +0.02%)</title><rect x="1089.4" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1092.40" y="207.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (15 samples, 0.03%; +0.03%)</title><rect x="1103.6" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1106.61" y="255.5" ></text>
</g>
<g >
<title>[merSort] (10 samples, 0.02%; +0.02%)</title><rect x="1077.8" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1080.78" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (17 samples, 0.03%; +0.03%)</title><rect x="908.2" y="165" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="911.24" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (5 samples, 0.01%; +0.01%)</title><rect x="668.4" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="671.40" y="287.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (17 samples, 0.03%; 0.00%)</title><rect x="516.2" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.19" y="335.5" ></text>
</g>
<g >
<title>[merSort] (6 samples, 0.01%; +0.01%)</title><rect x="774.4" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="777.42" y="191.5" ></text>
</g>
<g >
<title>generic_file_read_iter (6 samples, 0.01%; 0.00%)</title><rect x="26.6" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.58" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (55 samples, 0.11%; +0.02%)</title><rect x="1172.4" y="405" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1175.41" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (5 samples, 0.01%; +0.01%)</title><rect x="1157.2" y="325" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1160.23" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (17 samples, 0.03%; +0.03%)</title><rect x="1172.8" y="373" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1175.81" y="383.5" ></text>
</g>
<g >
<title>[merSort] (6 samples, 0.01%; +0.01%)</title><rect x="704.8" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="707.78" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (7 samples, 0.01%; +0.01%)</title><rect x="828.8" y="149" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="831.79" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (5 samples, 0.01%; +0.01%)</title><rect x="854.8" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="857.76" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (2,425 samples, 4.82%; +0.00%)</title><rect x="415.3" y="373" width="56.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="418.33" y="383.5" >std::_..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (6 samples, 0.01%; +0.01%)</title><rect x="518.0" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="521.04" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (15 samples, 0.03%; +0.01%)</title><rect x="1146.1" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1149.11" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::get_allocator (16 samples, 0.03%; +0.02%)</title><rect x="1042.8" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1045.83" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (11 samples, 0.02%; +0.02%)</title><rect x="972.8" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="975.77" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (104 samples, 0.21%; +0.02%)</title><rect x="646.8" y="325" width="2.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="649.82" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (54 samples, 0.11%; +0.01%)</title><rect x="642.9" y="261" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="645.90" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (7 samples, 0.01%; +0.01%)</title><rect x="674.2" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="677.17" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1094.9" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1097.86" y="239.5" ></text>
</g>
<g >
<title>malloc (8 samples, 0.02%; +0.02%)</title><rect x="774.9" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="777.89" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (23 samples, 0.05%; +0.04%)</title><rect x="561.8" y="325" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="564.84" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (593 samples, 1.18%; +0.22%)</title><rect x="1071.6" y="261" width="13.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1074.64" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (27 samples, 0.05%; +0.02%)</title><rect x="1155.9" y="293" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1158.87" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (33 samples, 0.07%; +0.07%)</title><rect x="781.2" y="165" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="784.15" y="175.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (9,648 samples, 19.18%; +19.05%)</title><rect x="41.6" y="389" width="226.4" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="44.64" y="399.5" >__memmove_sse2_unaligned_erms</text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (5 samples, 0.01%; +0.01%)</title><rect x="1177.5" y="357" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1180.47" y="367.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (767 samples, 1.52%; +0.04%)</title><rect x="530.7" y="373" width="18.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="533.69" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (7 samples, 0.01%; +0.00%)</title><rect x="1128.8" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1131.80" y="255.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="645.2" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="648.22" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (16 samples, 0.03%; +0.01%)</title><rect x="1155.0" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1157.98" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (100 samples, 0.20%; +0.02%)</title><rect x="1118.7" y="277" width="2.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1121.74" y="287.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (32 samples, 0.06%; +0.01%)</title><rect x="682.7" y="229" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="685.71" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (111 samples, 0.22%; +0.05%)</title><rect x="973.3" y="197" width="2.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="976.26" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (9 samples, 0.02%; +0.02%)</title><rect x="1110.0" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1112.97" y="255.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.01%)</title><rect x="593.8" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="596.83" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (213 samples, 0.42%; +0.05%)</title><rect x="1085.5" y="261" width="5.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1088.55" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (593 samples, 1.18%; +0.25%)</title><rect x="1096.9" y="261" width="13.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1099.85" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (23 samples, 0.05%; +0.05%)</title><rect x="853.7" y="181" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="856.68" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (359 samples, 0.71%; +0.13%)</title><rect x="656.3" y="293" width="8.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="659.34" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (17 samples, 0.03%; +0.03%)</title><rect x="683.0" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="685.99" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (265 samples, 0.53%; +0.04%)</title><rect x="1019.4" y="213" width="6.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1022.45" y="223.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (10 samples, 0.02%; +0.02%)</title><rect x="399.6" y="373" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="402.64" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (11 samples, 0.02%; +0.01%)</title><rect x="1165.9" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1168.86" y="335.5" ></text>
</g>
<g >
<title>std::__alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (29 samples, 0.06%; +0.01%)</title><rect x="968.2" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="971.17" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (8 samples, 0.02%; 0.00%)</title><rect x="687.4" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="690.42" y="255.5" ></text>
</g>
<g >
<title>irq_exit (5 samples, 0.01%; 0.00%)</title><rect x="267.8" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="270.83" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (49 samples, 0.10%; +0.00%)</title><rect x="1141.0" y="309" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1144.05" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (69 samples, 0.14%; +0.01%)</title><rect x="1167.6" y="373" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1170.55" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (12 samples, 0.02%; +0.02%)</title><rect x="925.0" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="927.99" y="191.5" ></text>
</g>
<g >
<title>__sched_text_start (21 samples, 0.04%; +0.01%)</title><rect x="397.8" y="293" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="400.78" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (16 samples, 0.03%; +0.03%)</title><rect x="526.7" y="389" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="529.75" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (17 samples, 0.03%; +0.03%)</title><rect x="1181.6" y="485" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1184.56" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (10 samples, 0.02%; +0.02%)</title><rect x="677.3" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="680.34" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (177 samples, 0.35%; +0.06%)</title><rect x="1134.7" y="293" width="4.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1137.67" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (5 samples, 0.01%; +0.01%)</title><rect x="612.4" y="325" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="615.41" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (169 samples, 0.34%; +0.16%)</title><rect x="1021.3" y="165" width="4.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1024.32" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (52 samples, 0.10%; +0.04%)</title><rect x="1056.7" y="229" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1059.74" y="239.5" ></text>
</g>
<g >
<title>ksys_read (7 samples, 0.01%; 0.00%)</title><rect x="26.6" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.58" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (8 samples, 0.02%; +0.02%)</title><rect x="695.1" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="698.12" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (31 samples, 0.06%; +0.06%)</title><rect x="887.4" y="197" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="890.36" y="207.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (31 samples, 0.06%; +0.02%)</title><rect x="644.6" y="261" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="647.61" y="271.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (14 samples, 0.03%; +0.02%)</title><rect x="689.7" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="692.70" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (8 samples, 0.02%; +0.02%)</title><rect x="1145.4" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1148.43" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (125 samples, 0.25%; +0.05%)</title><rect x="1154.1" y="309" width="2.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1157.06" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (23 samples, 0.05%; +0.05%)</title><rect x="278.0" y="437" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="280.97" y="447.5" ></text>
</g>
<g >
<title>scsi_io_completion (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="149" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="159.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (21 samples, 0.04%; 0.00%)</title><rect x="266.4" y="373" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="269.43" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (6 samples, 0.01%; +0.01%)</title><rect x="957.3" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="960.34" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (12 samples, 0.02%; +0.02%)</title><rect x="753.9" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="756.87" y="255.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (21 samples, 0.04%; +0.04%)</title><rect x="783.6" y="165" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="786.59" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (7 samples, 0.01%; 0.00%)</title><rect x="1138.3" y="197" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.26" y="207.5" ></text>
</g>
<g >
<title>schedule (22 samples, 0.04%; +0.00%)</title><rect x="397.8" y="309" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="400.76" y="319.5" ></text>
</g>
<g >
<title>[merSort] (5 samples, 0.01%; +0.01%)</title><rect x="681.5" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="684.51" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.01%; 0.00%)</title><rect x="1189.6" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (6 samples, 0.01%; +0.01%)</title><rect x="633.8" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="636.85" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (329 samples, 0.65%; +0.01%)</title><rect x="562.4" y="325" width="7.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="565.45" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (440 samples, 0.87%; +0.15%)</title><rect x="735.5" y="245" width="10.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="738.51" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (138 samples, 0.27%; +0.07%)</title><rect x="729.5" y="213" width="3.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="732.46" y="223.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (9 samples, 0.02%; +0.02%)</title><rect x="917.2" y="149" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="920.25" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (78 samples, 0.16%; +0.02%)</title><rect x="1106.2" y="229" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1109.19" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (14 samples, 0.03%; +0.03%)</title><rect x="738.5" y="197" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="741.53" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (7 samples, 0.01%; +0.01%)</title><rect x="1142.2" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1145.20" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (33 samples, 0.07%; +0.07%)</title><rect x="773.0" y="213" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="776.04" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (8 samples, 0.02%; +0.01%)</title><rect x="1175.5" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1178.48" y="415.5" ></text>
</g>
<g >
<title>merge (768 samples, 1.53%; +0.19%)</title><rect x="594.7" y="373" width="18.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="597.75" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_copy_data (5 samples, 0.01%; +0.01%)</title><rect x="964.3" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="967.28" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (41 samples, 0.08%; +0.08%)</title><rect x="706.4" y="245" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="709.45" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;false, int const*, int*&gt; (15 samples, 0.03%; +0.00%)</title><rect x="1083.5" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1086.46" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (33 samples, 0.07%; +0.06%)</title><rect x="636.3" y="309" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="639.29" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (7 samples, 0.01%; +0.01%)</title><rect x="1089.9" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1092.93" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (45 samples, 0.09%; +0.03%)</title><rect x="899.9" y="149" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="902.89" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (12 samples, 0.02%; +0.02%)</title><rect x="687.1" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="690.09" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (6 samples, 0.01%; +0.01%)</title><rect x="711.0" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="714.00" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (9 samples, 0.02%; +0.01%)</title><rect x="1120.8" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1123.76" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (21 samples, 0.04%; +0.04%)</title><rect x="1053.1" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1056.06" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (225 samples, 0.45%; +0.09%)</title><rect x="1143.7" y="293" width="5.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1146.67" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (367 samples, 0.73%; +0.16%)</title><rect x="1125.4" y="277" width="8.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1128.45" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (16 samples, 0.03%; +0.03%)</title><rect x="817.7" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="820.65" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (12 samples, 0.02%; +0.02%)</title><rect x="845.8" y="213" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="848.82" y="223.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (9 samples, 0.02%; 0.00%)</title><rect x="21.2" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.19" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (6 samples, 0.01%; +0.01%)</title><rect x="973.1" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="976.10" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (13 samples, 0.03%; +0.03%)</title><rect x="906.5" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="909.46" y="207.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (15 samples, 0.03%; 0.00%)</title><rect x="21.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.07" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (9 samples, 0.02%; +0.02%)</title><rect x="774.2" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="777.21" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (49 samples, 0.10%; +0.02%)</title><rect x="1180.1" y="469" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1183.15" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (10 samples, 0.02%; +0.02%)</title><rect x="891.2" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="894.19" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (679 samples, 1.35%; +0.03%)</title><rect x="1095.7" y="277" width="15.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1098.71" y="287.5" ></text>
</g>
<g >
<title>__sched_text_start (16 samples, 0.03%; 0.00%)</title><rect x="516.2" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.21" y="271.5" ></text>
</g>
<g >
<title>[merSort] (6 samples, 0.01%; +0.01%)</title><rect x="764.6" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="767.59" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (43 samples, 0.09%; +0.08%)</title><rect x="270.1" y="437" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="273.09" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (20 samples, 0.04%; +0.01%)</title><rect x="1095.0" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1098.05" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (27 samples, 0.05%; +0.01%)</title><rect x="1168.5" y="357" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1171.51" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (59 samples, 0.12%; +0.01%)</title><rect x="1119.7" y="261" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1122.68" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (404 samples, 0.80%; +0.16%)</title><rect x="600.8" y="341" width="9.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="603.75" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (15 samples, 0.03%; +0.03%)</title><rect x="846.1" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="849.11" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (29 samples, 0.06%; +0.00%)</title><rect x="681.5" y="229" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="684.46" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (5,018 samples, 9.97%; +0.05%)</title><rect x="282.2" y="405" width="117.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="285.17" y="415.5" >std::__copy_mo..</text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (34 samples, 0.07%; +0.01%)</title><rect x="517.5" y="357" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="520.48" y="367.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (8 samples, 0.02%; 0.00%)</title><rect x="471.2" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="474.18" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (512 samples, 1.02%; +0.15%)</title><rect x="580.5" y="357" width="12.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="583.51" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (6 samples, 0.01%; +0.00%)</title><rect x="715.5" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="718.48" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (9 samples, 0.02%; +0.02%)</title><rect x="600.4" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="603.40" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (30 samples, 0.06%; +0.06%)</title><rect x="518.3" y="389" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="521.35" y="399.5" ></text>
</g>
<g >
<title>[merSort] (6 samples, 0.01%; +0.01%)</title><rect x="1089.0" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1092.04" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (11 samples, 0.02%; +0.02%)</title><rect x="599.5" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="602.48" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (28 samples, 0.06%; +0.06%)</title><rect x="723.5" y="245" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="726.47" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (5 samples, 0.01%; +0.01%)</title><rect x="746.6" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="749.58" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (174 samples, 0.35%; +0.06%)</title><rect x="686.3" y="277" width="4.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="689.34" y="287.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="626.6" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="629.62" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (68 samples, 0.14%; +0.01%)</title><rect x="743.6" y="229" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="746.58" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (644 samples, 1.28%; +0.01%)</title><rect x="532.4" y="341" width="15.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="535.35" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (11 samples, 0.02%; +0.02%)</title><rect x="772.7" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="775.69" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (34 samples, 0.07%; +0.04%)</title><rect x="972.2" y="197" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="975.23" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (52 samples, 0.10%; +0.10%)</title><rect x="591.3" y="341" width="1.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="594.30" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (49 samples, 0.10%; +0.01%)</title><rect x="648.0" y="309" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="651.04" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="711.7" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="714.75" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (9 samples, 0.02%; +0.00%)</title><rect x="1141.9" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1144.94" y="271.5" ></text>
</g>
<g >
<title>schedule (16 samples, 0.03%; 0.00%)</title><rect x="516.2" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.21" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (34 samples, 0.07%; +0.07%)</title><rect x="677.6" y="261" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="680.57" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (369 samples, 0.73%; +0.15%)</title><rect x="637.7" y="309" width="8.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="640.69" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (15 samples, 0.03%; +0.03%)</title><rect x="618.3" y="325" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="621.27" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (28 samples, 0.06%; +0.06%)</title><rect x="1009.2" y="229" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1012.15" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (16 samples, 0.03%; +0.03%)</title><rect x="1069.1" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1072.13" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (20 samples, 0.04%; +0.04%)</title><rect x="874.2" y="197" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="877.23" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (6 samples, 0.01%; 0.00%)</title><rect x="1145.9" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1148.85" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (7 samples, 0.01%; +0.01%)</title><rect x="976.9" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="979.90" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (9 samples, 0.02%; +0.01%)</title><rect x="1123.8" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1126.83" y="239.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (37 samples, 0.07%; +0.03%)</title><rect x="269.1" y="405" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="272.05" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (18 samples, 0.04%; +0.01%)</title><rect x="1114.8" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1117.80" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (13 samples, 0.03%; +0.00%)</title><rect x="1141.8" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1144.84" y="287.5" ></text>
</g>
<g >
<title>do_IRQ (5 samples, 0.01%; 0.00%)</title><rect x="267.8" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="270.83" y="271.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (8 samples, 0.02%; +0.02%)</title><rect x="744.9" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="747.94" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (15 samples, 0.03%; +0.03%)</title><rect x="486.1" y="389" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="489.07" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (10 samples, 0.02%; +0.02%)</title><rect x="600.2" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="603.16" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.01%; 0.00%)</title><rect x="272.7" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="275.71" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (6 samples, 0.01%; +0.01%)</title><rect x="1039.1" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1042.10" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (14 samples, 0.03%; +0.00%)</title><rect x="1156.2" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1159.18" y="287.5" ></text>
</g>
<g >
<title>new_sync_read (6 samples, 0.01%; 0.00%)</title><rect x="26.6" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.58" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (23 samples, 0.05%; +0.05%)</title><rect x="761.1" y="213" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="764.12" y="223.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (17 samples, 0.03%; +0.00%)</title><rect x="21.0" y="405" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="24.02" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (195 samples, 0.39%; +0.17%)</title><rect x="910.8" y="197" width="4.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="913.82" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (1,081 samples, 2.15%; +0.44%)</title><rect x="810.1" y="213" width="25.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="813.05" y="223.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (9 samples, 0.02%; +0.02%)</title><rect x="1170.8" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1173.81" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (5 samples, 0.01%; +0.01%)</title><rect x="917.9" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="920.93" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (82 samples, 0.16%; +0.01%)</title><rect x="1122.2" y="277" width="1.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1125.21" y="287.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (102 samples, 0.20%; +0.15%)</title><rect x="831.5" y="165" width="2.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="834.49" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (7 samples, 0.01%; +0.01%)</title><rect x="405.6" y="437" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="408.57" y="447.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (105 samples, 0.21%; +0.03%)</title><rect x="805.1" y="197" width="2.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="808.08" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (34 samples, 0.07%; +0.03%)</title><rect x="1142.8" y="293" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1145.78" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (61 samples, 0.12%; +0.02%)</title><rect x="1170.2" y="389" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1173.23" y="399.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (11 samples, 0.02%; +0.02%)</title><rect x="831.2" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="834.23" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (9 samples, 0.02%; +0.02%)</title><rect x="550.9" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="553.91" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (17 samples, 0.03%; +0.03%)</title><rect x="1091.5" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1094.53" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (8 samples, 0.02%; +0.01%)</title><rect x="1151.5" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1154.48" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (1,141 samples, 2.27%; +0.46%)</title><rect x="1001.1" y="245" width="26.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1004.06" y="255.5" >s..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (7 samples, 0.01%; +0.01%)</title><rect x="1148.6" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1151.58" y="287.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (52 samples, 0.10%; +0.07%)</title><rect x="743.9" y="197" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="746.93" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (8 samples, 0.02%; +0.02%)</title><rect x="574.0" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="577.01" y="367.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (22 samples, 0.04%; +0.04%)</title><rect x="989.0" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="991.98" y="223.5" ></text>
</g>
<g >
<title>[merSort] (7 samples, 0.01%; +0.01%)</title><rect x="585.6" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="588.57" y="303.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%; +0.01%)</title><rect x="611.7" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="614.73" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (32 samples, 0.06%; +0.01%)</title><rect x="836.8" y="229" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="839.77" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (109 samples, 0.22%; +0.03%)</title><rect x="1160.0" y="341" width="2.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1163.00" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1121.1" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1124.11" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (37 samples, 0.07%; +0.07%)</title><rect x="660.6" y="245" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="663.61" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (6 samples, 0.01%; +0.01%)</title><rect x="707.6" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="710.62" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (63 samples, 0.13%; +0.02%)</title><rect x="1076.9" y="229" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1079.87" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (5 samples, 0.01%; +0.01%)</title><rect x="931.9" y="181" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="934.93" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (17 samples, 0.03%; +0.03%)</title><rect x="1136.7" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1139.73" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (10 samples, 0.02%; +0.02%)</title><rect x="675.2" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="678.22" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (12 samples, 0.02%; +0.01%)</title><rect x="1094.4" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1097.37" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (11 samples, 0.02%; +0.02%)</title><rect x="702.4" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="705.41" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (299 samples, 0.59%; +0.06%)</title><rect x="1018.7" y="229" width="7.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1021.65" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (178 samples, 0.35%; +0.15%)</title><rect x="777.9" y="213" width="4.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="780.87" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (15 samples, 0.03%; +0.03%)</title><rect x="1024.1" y="133" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1027.14" y="143.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (6 samples, 0.01%; 0.00%)</title><rect x="1183.3" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.29" y="447.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="600.6" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="603.61" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (8 samples, 0.02%; +0.02%)</title><rect x="1075.5" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1078.51" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (31 samples, 0.06%; +0.03%)</title><rect x="1086.1" y="245" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1089.11" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (20 samples, 0.04%; +0.04%)</title><rect x="485.6" y="389" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="488.58" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (626 samples, 1.24%; +0.09%)</title><rect x="578.1" y="373" width="14.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="581.07" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (9 samples, 0.02%; +0.02%)</title><rect x="1119.5" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1122.47" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (12 samples, 0.02%; +0.00%)</title><rect x="746.4" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="749.42" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (93 samples, 0.18%; +0.03%)</title><rect x="610.6" y="357" width="2.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="613.58" y="367.5" ></text>
</g>
<g >
<title>mergesort (116 samples, 0.23%; +0.04%)</title><rect x="876.1" y="229" width="2.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="879.11" y="239.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="594.0" y="357" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="597.02" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (11 samples, 0.02%; +0.02%)</title><rect x="958.1" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="961.11" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (541 samples, 1.08%; +0.19%)</title><rect x="796.5" y="229" width="12.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="799.54" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (28 samples, 0.06%; +0.06%)</title><rect x="1093.1" y="245" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1096.10" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_read (7 samples, 0.01%; 0.00%)</title><rect x="26.6" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.58" y="479.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="626.7" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="629.74" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (62 samples, 0.12%; +0.01%)</title><rect x="1116.7" y="229" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1119.70" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (7 samples, 0.01%; +0.01%)</title><rect x="665.9" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="668.89" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (239 samples, 0.48%; +0.01%)</title><rect x="938.9" y="181" width="5.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="941.88" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1146.3" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1149.28" y="271.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (41 samples, 0.08%; +0.02%)</title><rect x="1137.6" y="229" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1140.57" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (378 samples, 0.75%; +0.11%)</title><rect x="1027.8" y="245" width="8.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1030.82" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (15 samples, 0.03%; +0.03%)</title><rect x="745.2" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="748.17" y="239.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (171 samples, 0.34%; +0.06%)</title><rect x="728.8" y="229" width="4.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="731.75" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1155.7" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1158.73" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (15 samples, 0.03%; +0.02%)</title><rect x="402.5" y="421" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="405.47" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (64 samples, 0.13%; +0.01%)</title><rect x="1055.2" y="213" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1058.22" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (54 samples, 0.11%; +0.03%)</title><rect x="1131.1" y="245" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1134.08" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (10 samples, 0.02%; +0.02%)</title><rect x="720.7" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="723.71" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (141 samples, 0.28%; +0.07%)</title><rect x="826.8" y="181" width="3.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="829.78" y="191.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (7 samples, 0.01%; 0.00%)</title><rect x="546.8" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="549.78" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (85 samples, 0.17%; +0.05%)</title><rect x="818.3" y="197" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="821.31" y="207.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="482.5" y="405" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="485.51" y="415.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (46 samples, 0.09%; +0.09%)</title><rect x="878.8" y="229" width="1.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="881.83" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (527 samples, 1.05%; +0.12%)</title><rect x="634.5" y="325" width="12.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="637.46" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (11 samples, 0.02%; +0.01%)</title><rect x="1095.2" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1098.19" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (39 samples, 0.08%; +0.04%)</title><rect x="708.2" y="261" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="711.20" y="271.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (6 samples, 0.01%; +0.01%)</title><rect x="398.3" y="373" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="401.27" y="383.5" ></text>
</g>
<g >
<title>merge (1,449 samples, 2.88%; +0.31%)</title><rect x="842.1" y="229" width="34.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="845.12" y="239.5" >me..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (9 samples, 0.02%; +0.02%)</title><rect x="728.5" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="731.54" y="239.5" ></text>
</g>
<g >
<title>search_binary_handler (6 samples, 0.01%; 0.00%)</title><rect x="26.4" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.40" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (17 samples, 0.03%; +0.03%)</title><rect x="701.9" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="704.89" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (13 samples, 0.03%; +0.03%)</title><rect x="408.0" y="421" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="411.01" y="431.5" ></text>
</g>
<g >
<title>__sched_text_start (9 samples, 0.02%; +0.00%)</title><rect x="471.5" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="474.46" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (151 samples, 0.30%; +0.05%)</title><rect x="679.9" y="245" width="3.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="682.94" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (9 samples, 0.02%; +0.01%)</title><rect x="1168.7" y="341" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1171.75" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (6 samples, 0.01%; +0.01%)</title><rect x="854.2" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="857.22" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (18 samples, 0.04%; +0.04%)</title><rect x="554.7" y="389" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="557.66" y="399.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (22 samples, 0.04%; +0.04%)</title><rect x="1036.7" y="261" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1039.69" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (20 samples, 0.04%; +0.04%)</title><rect x="758.1" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="761.12" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (30 samples, 0.06%; +0.06%)</title><rect x="949.7" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="952.69" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (8 samples, 0.02%; +0.02%)</title><rect x="590.7" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="593.73" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (11 samples, 0.02%; +0.02%)</title><rect x="752.6" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="755.56" y="255.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (7 samples, 0.01%; +0.01%)</title><rect x="1108.6" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1111.58" y="223.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="656.2" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="659.20" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (33 samples, 0.07%; +0.00%)</title><rect x="1147.8" y="277" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1150.80" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (24 samples, 0.05%; +0.05%)</title><rect x="1179.5" y="469" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1182.47" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="672.2" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="675.25" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (30 samples, 0.06%; +0.02%)</title><rect x="1167.8" y="357" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1170.79" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (53 samples, 0.11%; +0.01%)</title><rect x="742.2" y="213" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="745.24" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (79 samples, 0.16%; +0.07%)</title><rect x="780.2" y="181" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="783.19" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (646 samples, 1.28%; +0.27%)</title><rect x="903.2" y="213" width="15.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="906.24" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (9 samples, 0.02%; +0.02%)</title><rect x="1143.1" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1146.13" y="287.5" ></text>
</g>
<g >
<title>ret_from_intr (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (530 samples, 1.05%; +0.13%)</title><rect x="695.5" y="277" width="12.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="698.47" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (5 samples, 0.01%; 0.00%)</title><rect x="1177.5" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1180.47" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (15 samples, 0.03%; +0.03%)</title><rect x="859.7" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="862.69" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1019.3" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1022.33" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (15 samples, 0.03%; +0.03%)</title><rect x="908.8" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="911.78" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (10 samples, 0.02%; +0.02%)</title><rect x="969.1" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="972.11" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (68 samples, 0.14%; +0.05%)</title><rect x="863.6" y="181" width="1.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="866.63" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1173.2" y="373" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1176.21" y="383.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (13 samples, 0.03%; +0.03%)</title><rect x="997.5" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1000.49" y="175.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (32 samples, 0.06%; +0.02%)</title><rect x="731.9" y="197" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="734.94" y="207.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (36 samples, 0.07%; +0.02%)</title><rect x="570.7" y="325" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="573.68" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (16 samples, 0.03%; +0.03%)</title><rect x="753.3" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="756.33" y="255.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (66 samples, 0.13%; +0.11%)</title><rect x="915.9" y="165" width="1.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="918.91" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (43 samples, 0.09%; +0.01%)</title><rect x="713.7" y="245" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="716.74" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (10 samples, 0.02%; +0.02%)</title><rect x="1129.4" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1132.37" y="255.5" ></text>
</g>
<g >
<title>merge (1,886 samples, 3.75%; +0.16%)</title><rect x="476.6" y="437" width="44.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="479.60" y="447.5" >merge</text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (8 samples, 0.02%; +0.02%)</title><rect x="1080.1" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1083.06" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (12 samples, 0.02%; +0.02%)</title><rect x="723.2" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="726.19" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (9 samples, 0.02%; +0.02%)</title><rect x="520.3" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="523.29" y="399.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (6 samples, 0.01%; +0.01%)</title><rect x="1115.9" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1118.88" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (15 samples, 0.03%; 0.00%)</title><rect x="786.3" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="789.29" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (62 samples, 0.12%; +0.07%)</title><rect x="947.8" y="213" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="950.84" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (8 samples, 0.02%; +0.02%)</title><rect x="765.9" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="768.91" y="175.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (29 samples, 0.06%; +0.03%)</title><rect x="1132.8" y="229" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1135.79" y="239.5" ></text>
</g>
<g >
<title>[merSort] (8 samples, 0.02%; +0.02%)</title><rect x="952.8" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="955.83" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (47 samples, 0.09%; +0.04%)</title><rect x="610.9" y="341" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="613.93" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (8 samples, 0.02%; +0.02%)</title><rect x="474.7" y="421" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="477.70" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (6 samples, 0.01%; +0.01%)</title><rect x="1133.7" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1136.73" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (83 samples, 0.16%; +0.03%)</title><rect x="969.7" y="197" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="972.74" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (9 samples, 0.02%; +0.02%)</title><rect x="711.3" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="714.35" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (20 samples, 0.04%; +0.00%)</title><rect x="689.0" y="245" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="692.04" y="255.5" ></text>
</g>
<g >
<title>[merSort] (5 samples, 0.01%; +0.01%)</title><rect x="1083.5" y="149" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1086.51" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (29 samples, 0.06%; +0.06%)</title><rect x="523.0" y="405" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="525.97" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (910 samples, 1.81%; +0.39%)</title><rect x="1048.5" y="245" width="21.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1051.49" y="255.5" >s..</text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (24 samples, 0.05%; +0.05%)</title><rect x="682.1" y="229" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="685.14" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (8 samples, 0.02%; +0.02%)</title><rect x="281.7" y="421" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="284.72" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (34 samples, 0.07%; +0.04%)</title><rect x="550.4" y="389" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="553.39" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.01%; 0.00%)</title><rect x="1185.9" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1188.90" y="495.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (6 samples, 0.01%; +0.01%)</title><rect x="900.8" y="133" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="903.81" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (5 samples, 0.01%; +0.00%)</title><rect x="1142.0" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1144.98" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (16 samples, 0.03%; +0.03%)</title><rect x="685.6" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="688.62" y="271.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (7 samples, 0.01%; +0.01%)</title><rect x="571.4" y="309" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="574.36" y="319.5" ></text>
</g>
<g >
<title>merSort (50,305 samples, 100.00%; 0.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >merSort</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (50 samples, 0.10%; +0.10%)</title><rect x="663.6" y="277" width="1.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="666.59" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (10 samples, 0.02%; +0.02%)</title><rect x="1160.5" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1163.52" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (38 samples, 0.08%; +0.07%)</title><rect x="829.0" y="149" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="831.96" y="159.5" ></text>
</g>
<g >
<title>do_IRQ (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (7 samples, 0.01%; +0.01%)</title><rect x="523.6" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="526.65" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (85 samples, 0.17%; +0.04%)</title><rect x="993.2" y="181" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="996.20" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (12 samples, 0.02%; 0.00%)</title><rect x="1158.1" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.12" y="319.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (225 samples, 0.45%; +0.10%)</title><rect x="1020.2" y="181" width="5.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1023.15" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (56 samples, 0.11%; +0.06%)</title><rect x="776.2" y="213" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="779.18" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (97 samples, 0.19%; +0.02%)</title><rect x="1065.9" y="229" width="2.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1068.94" y="239.5" ></text>
</g>
<g >
<title>mergesort (10,658 samples, 21.19%; +0.35%)</title><rect x="786.7" y="261" width="250.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="789.69" y="271.5" >mergesort</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (7 samples, 0.01%; +0.01%)</title><rect x="967.1" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="970.12" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (24 samples, 0.05%; +0.05%)</title><rect x="970.8" y="181" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="973.82" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (304 samples, 0.60%; +0.13%)</title><rect x="848.1" y="213" width="7.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="851.10" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (10 samples, 0.02%; +0.02%)</title><rect x="737.2" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="740.24" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (24 samples, 0.05%; +0.05%)</title><rect x="487.8" y="357" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="490.76" y="367.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (17 samples, 0.03%; +0.03%)</title><rect x="1017.4" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1020.38" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (28 samples, 0.06%; +0.06%)</title><rect x="909.7" y="181" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="912.74" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (21 samples, 0.04%; +0.04%)</title><rect x="727.2" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="730.18" y="239.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (34 samples, 0.07%; +0.07%)</title><rect x="1024.5" y="149" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1027.49" y="159.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (11 samples, 0.02%; +0.02%)</title><rect x="872.9" y="133" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="875.92" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (9 samples, 0.02%; +0.02%)</title><rect x="1124.2" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1127.16" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (10 samples, 0.02%; +0.02%)</title><rect x="646.3" y="309" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="649.35" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (46 samples, 0.09%; +0.05%)</title><rect x="592.9" y="357" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="595.94" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (9 samples, 0.02%; +0.02%)</title><rect x="21.4" y="501" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="24.45" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (48 samples, 0.10%; +0.05%)</title><rect x="688.4" y="261" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="691.38" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (12 samples, 0.02%; +0.02%)</title><rect x="878.0" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="881.01" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (14 samples, 0.03%; +0.03%)</title><rect x="1035.8" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1038.75" y="207.5" ></text>
</g>
<g >
<title>std::__alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (11 samples, 0.02%; +0.00%)</title><rect x="1043.2" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1046.21" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (13 samples, 0.03%; +0.03%)</title><rect x="593.5" y="341" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="596.53" y="351.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (225 samples, 0.45%; +0.11%)</title><rect x="939.2" y="165" width="5.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="942.20" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (9 samples, 0.02%; 0.00%)</title><rect x="710.9" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.95" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (7 samples, 0.01%; +0.01%)</title><rect x="918.0" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="921.05" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (6 samples, 0.01%; +0.01%)</title><rect x="849.9" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="852.90" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (20 samples, 0.04%; +0.04%)</title><rect x="1169.5" y="389" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1172.55" y="399.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (6 samples, 0.01%; +0.01%)</title><rect x="738.4" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="741.37" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (11 samples, 0.02%; +0.02%)</title><rect x="1013.4" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1016.37" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (12 samples, 0.02%; +0.02%)</title><rect x="603.8" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="606.75" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::~allocator (9 samples, 0.02%; +0.02%)</title><rect x="893.8" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="896.77" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (8 samples, 0.02%; +0.02%)</title><rect x="808.4" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="811.36" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (17 samples, 0.03%; +0.03%)</title><rect x="643.8" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="646.77" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (31 samples, 0.06%; +0.03%)</title><rect x="1170.4" y="373" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1173.44" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (34 samples, 0.07%; +0.07%)</title><rect x="1010.9" y="213" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1013.91" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (11 samples, 0.02%; +0.02%)</title><rect x="1007.3" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1010.25" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (17 samples, 0.03%; +0.03%)</title><rect x="1174.0" y="421" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1177.00" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (11 samples, 0.02%; +0.02%)</title><rect x="659.1" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="662.09" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (8 samples, 0.02%; +0.02%)</title><rect x="664.9" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="667.90" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (16 samples, 0.03%; +0.02%)</title><rect x="1096.4" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1099.39" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.04%; 0.00%)</title><rect x="21.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.98" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (6 samples, 0.01%; +0.01%)</title><rect x="690.4" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="693.42" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1181.4" y="485" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1184.39" y="495.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (35 samples, 0.07%; +0.02%)</title><rect x="662.7" y="245" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="665.65" y="255.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (2,566 samples, 5.10%; +0.04%)</title><rect x="413.4" y="405" width="60.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="416.38" y="415.5" >std::m..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1037.8" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1040.77" y="271.5" ></text>
</g>
<g >
<title>malloc (7 samples, 0.01%; +0.01%)</title><rect x="1128.5" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1131.50" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (5 samples, 0.01%; +0.01%)</title><rect x="706.1" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="709.14" y="207.5" ></text>
</g>
<g >
<title>merge (979 samples, 1.95%; +0.18%)</title><rect x="551.6" y="405" width="23.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="554.61" y="415.5" >m..</text>
</g>
<g >
<title>dl_main (23 samples, 0.05%; +0.01%)</title><rect x="21.9" y="501" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="24.89" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (9 samples, 0.02%; +0.02%)</title><rect x="1055.3" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1058.34" y="207.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (8 samples, 0.02%; +0.01%)</title><rect x="1066.3" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1069.34" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (35 samples, 0.07%; +0.04%)</title><rect x="665.5" y="293" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="668.47" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (22 samples, 0.04%; +0.04%)</title><rect x="559.9" y="357" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="562.94" y="367.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (7 samples, 0.01%; +0.01%)</title><rect x="942.1" y="133" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="945.14" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (213 samples, 0.42%; +0.20%)</title><rect x="865.6" y="181" width="5.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="868.62" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (40 samples, 0.08%; +0.01%)</title><rect x="774.1" y="197" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="777.14" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (5 samples, 0.01%; +0.01%)</title><rect x="486.5" y="389" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="489.47" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (18 samples, 0.04%; +0.04%)</title><rect x="556.6" y="373" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="559.61" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (61 samples, 0.12%; +0.03%)</title><rect x="1043.6" y="229" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1046.63" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (26 samples, 0.05%; +0.00%)</title><rect x="1114.6" y="245" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1117.63" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (14 samples, 0.03%; +0.03%)</title><rect x="701.0" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="703.96" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (8 samples, 0.02%; 0.00%)</title><rect x="1162.8" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1165.84" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (8 samples, 0.02%; +0.02%)</title><rect x="652.3" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="655.28" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (5 samples, 0.01%; +0.01%)</title><rect x="473.1" y="357" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="476.10" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (13 samples, 0.03%; +0.03%)</title><rect x="640.9" y="293" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="643.86" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (5 samples, 0.01%; +0.01%)</title><rect x="1134.5" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1137.55" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (5 samples, 0.01%; +0.01%)</title><rect x="861.2" y="149" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="864.19" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (13 samples, 0.03%; +0.03%)</title><rect x="720.4" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="723.38" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (15 samples, 0.03%; +0.00%)</title><rect x="775.4" y="197" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="778.43" y="207.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (126 samples, 0.25%; +0.07%)</title><rect x="1081.3" y="197" width="3.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1084.33" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (6 samples, 0.01%; +0.01%)</title><rect x="876.6" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="879.60" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (78 samples, 0.16%; +0.00%)</title><rect x="782.3" y="197" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="785.26" y="207.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1129.7" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1132.74" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (16 samples, 0.03%; +0.03%)</title><rect x="640.3" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="643.35" y="303.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (7 samples, 0.01%; +0.01%)</title><rect x="868.2" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="871.20" y="175.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (4,890 samples, 9.72%; +9.64%)</title><rect x="283.6" y="373" width="114.7" height="15.0" fill="rgb(255,103,103)" rx="2" ry="2" />
<text  x="286.57" y="383.5" >__memmove_sse2..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (20 samples, 0.04%; +0.04%)</title><rect x="1163.5" y="357" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1166.47" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (7 samples, 0.01%; +0.01%)</title><rect x="901.2" y="149" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="904.16" y="159.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%; +0.02%)</title><rect x="822.3" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="825.34" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (16 samples, 0.03%; +0.03%)</title><rect x="1168.0" y="341" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1171.02" y="351.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (7 samples, 0.01%; +0.01%)</title><rect x="897.8" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="900.83" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (8 samples, 0.02%; +0.01%)</title><rect x="574.4" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="577.39" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (9 samples, 0.02%; +0.00%)</title><rect x="687.7" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="690.70" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (10 samples, 0.02%; +0.00%)</title><rect x="1155.1" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1158.12" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (6 samples, 0.01%; +0.01%)</title><rect x="474.9" y="421" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="477.88" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (27 samples, 0.05%; +0.05%)</title><rect x="693.9" y="277" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="696.92" y="287.5" ></text>
</g>
<g >
<title>blk_update_request (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="117" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="127.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (11 samples, 0.02%; +0.02%)</title><rect x="590.9" y="293" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="593.92" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (9 samples, 0.02%; +0.02%)</title><rect x="746.2" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="749.20" y="255.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (5,032 samples, 10.00%; +0.02%)</title><rect x="281.9" y="421" width="118.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="284.91" y="431.5" >std::move&lt;__gn..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (20 samples, 0.04%; +0.04%)</title><rect x="280.9" y="421" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="283.95" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (6 samples, 0.01%; +0.01%)</title><rect x="1101.1" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1104.10" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (1,105 samples, 2.20%; +0.12%)</title><rect x="524.3" y="405" width="25.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="527.33" y="415.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (14 samples, 0.03%; +0.03%)</title><rect x="657.8" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="660.82" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (13 samples, 0.03%; +0.03%)</title><rect x="1110.2" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1113.18" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (1,554 samples, 3.09%; +0.17%)</title><rect x="482.6" y="405" width="36.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="485.62" y="415.5" >std..</text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (22 samples, 0.04%; +0.04%)</title><rect x="963.3" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="966.27" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (24 samples, 0.05%; +0.01%)</title><rect x="986.4" y="197" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="989.42" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (25 samples, 0.05%; +0.04%)</title><rect x="1044.1" y="197" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1047.15" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (5 samples, 0.01%; +0.01%)</title><rect x="768.6" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="771.63" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (11 samples, 0.02%; +0.02%)</title><rect x="1084.5" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1087.47" y="255.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (8 samples, 0.02%; +0.02%)</title><rect x="944.5" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="947.48" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (10 samples, 0.02%; +0.02%)</title><rect x="714.9" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="717.94" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (5 samples, 0.01%; +0.01%)</title><rect x="693.8" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="696.80" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (22 samples, 0.04%; +0.04%)</title><rect x="1030.0" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1032.96" y="223.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (18 samples, 0.04%; +0.04%)</title><rect x="886.9" y="197" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="889.94" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (13 samples, 0.03%; +0.01%)</title><rect x="687.6" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="690.61" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (8 samples, 0.02%; +0.00%)</title><rect x="1162.0" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1165.04" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (39 samples, 0.08%; +0.08%)</title><rect x="1069.8" y="245" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1072.83" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (15 samples, 0.03%; +0.03%)</title><rect x="611.4" y="325" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="614.38" y="335.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*&gt; (7 samples, 0.01%; +0.01%)</title><rect x="1132.6" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1135.63" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (25 samples, 0.05%; +0.01%)</title><rect x="1152.4" y="325" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1155.45" y="335.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (13 samples, 0.03%; +0.02%)</title><rect x="1067.9" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1070.86" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (26 samples, 0.05%; +0.05%)</title><rect x="701.3" y="245" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="704.28" y="255.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (34 samples, 0.07%; +0.02%)</title><rect x="472.7" y="373" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="475.75" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (23 samples, 0.05%; +0.02%)</title><rect x="1176.8" y="421" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1179.79" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (12 samples, 0.02%; +0.02%)</title><rect x="743.1" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="746.11" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (8 samples, 0.02%; +0.02%)</title><rect x="39.3" y="437" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="42.25" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (5 samples, 0.01%; +0.00%)</title><rect x="711.2" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="714.23" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (48 samples, 0.10%; +0.01%)</title><rect x="1132.4" y="261" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1135.37" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (5 samples, 0.01%; +0.01%)</title><rect x="853.1" y="181" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="856.10" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (16 samples, 0.03%; +0.03%)</title><rect x="583.1" y="341" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="586.06" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (962 samples, 1.91%; +0.15%)</title><rect x="527.3" y="389" width="22.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="530.29" y="399.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (7 samples, 0.01%; +0.01%)</title><rect x="963.1" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="966.11" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (6 samples, 0.01%; +0.01%)</title><rect x="756.2" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="759.22" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_default_n&lt;int*, unsigned long&gt; (6 samples, 0.01%; 0.00%)</title><rect x="1183.6" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.64" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (565 samples, 1.12%; +0.12%)</title><rect x="754.8" y="245" width="13.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="757.81" y="255.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (19 samples, 0.04%; +0.04%)</title><rect x="644.2" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="647.17" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (7 samples, 0.01%; +0.01%)</title><rect x="985.0" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="988.04" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (51 samples, 0.10%; +0.02%)</title><rect x="1182.1" y="485" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1185.10" y="495.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (20 samples, 0.04%; +0.04%)</title><rect x="822.7" y="197" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="825.70" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (9 samples, 0.02%; +0.01%)</title><rect x="1140.0" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1143.04" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (8 samples, 0.02%; +0.02%)</title><rect x="993.0" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="996.01" y="191.5" ></text>
</g>
<g >
<title>__libc_csu_init (9 samples, 0.02%; 0.00%)</title><rect x="21.4" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.45" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (30 samples, 0.06%; +0.06%)</title><rect x="914.6" y="149" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="917.57" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (5 samples, 0.01%; +0.01%)</title><rect x="654.3" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="657.33" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (11 samples, 0.02%; +0.00%)</title><rect x="746.4" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="749.44" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (9 samples, 0.02%; +0.02%)</title><rect x="868.0" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="870.99" y="175.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (8 samples, 0.02%; +0.02%)</title><rect x="942.9" y="117" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="945.89" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::destroy&lt;int&gt; (6 samples, 0.01%; +0.01%)</title><rect x="640.7" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="643.72" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (27 samples, 0.05%; +0.01%)</title><rect x="1151.1" y="309" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1154.09" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (7 samples, 0.01%; +0.01%)</title><rect x="684.7" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="687.68" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (25 samples, 0.05%; +0.05%)</title><rect x="987.0" y="213" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="989.98" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (37 samples, 0.07%; +0.01%)</title><rect x="712.8" y="229" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="715.80" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (217 samples, 0.43%; +0.09%)</title><rect x="896.5" y="197" width="5.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="899.47" y="207.5" ></text>
</g>
<g >
<title>scsi_end_request (6 samples, 0.01%; 0.00%)</title><rect x="698.4" y="133" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.42" y="143.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (9 samples, 0.02%; +0.01%)</title><rect x="924.4" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="927.45" y="207.5" ></text>
</g>
<g >
<title>[unknown] (161 samples, 0.32%; 0.00%)</title><rect x="16.8" y="517" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.78" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (18 samples, 0.04%; +0.04%)</title><rect x="1131.8" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1134.78" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (8 samples, 0.02%; +0.02%)</title><rect x="1166.8" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1169.80" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (7 samples, 0.01%; +0.01%)</title><rect x="695.3" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="698.30" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::get_allocator (11 samples, 0.02%; +0.02%)</title><rect x="883.4" y="213" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="886.45" y="223.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (10 samples, 0.02%; +0.02%)</title><rect x="945.3" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="948.30" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (8 samples, 0.02%; +0.02%)</title><rect x="636.1" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="639.10" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (30 samples, 0.06%; +0.02%)</title><rect x="739.8" y="229" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="742.75" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (74 samples, 0.15%; +0.02%)</title><rect x="1006.5" y="229" width="1.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1009.48" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (65 samples, 0.13%; +0.02%)</title><rect x="401.6" y="453" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="404.56" y="463.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (20 samples, 0.04%; +0.04%)</title><rect x="1030.5" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1033.47" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (2,770 samples, 5.51%; +0.17%)</title><rect x="409.7" y="421" width="65.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="412.72" y="431.5" >std::ve..</text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (132 samples, 0.26%; +0.06%)</title><rect x="703.3" y="229" width="3.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="706.30" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (62 samples, 0.12%; +0.01%)</title><rect x="743.7" y="213" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="746.72" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.01%; +0.00%)</title><rect x="924.5" y="37" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="927.54" y="47.5" ></text>
</g>
<g >
<title>mergesort (29,904 samples, 59.44%; +0.03%)</title><rect x="476.3" y="453" width="701.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="479.29" y="463.5" >mergesort</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (23 samples, 0.05%; +0.05%)</title><rect x="40.6" y="405" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="43.63" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (14 samples, 0.03%; +0.03%)</title><rect x="1085.2" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1088.22" y="255.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.01%; +0.01%)</title><rect x="1120.6" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1123.59" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (64 samples, 0.13%; +0.06%)</title><rect x="913.9" y="165" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="916.87" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (6 samples, 0.01%; +0.01%)</title><rect x="815.7" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="818.68" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (91 samples, 0.18%; +0.02%)</title><rect x="1164.3" y="357" width="2.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1167.27" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (8 samples, 0.02%; +0.02%)</title><rect x="635.9" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="638.91" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (28 samples, 0.06%; +0.06%)</title><rect x="680.5" y="229" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="683.53" y="239.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (44 samples, 0.09%; +0.00%)</title><rect x="1137.5" y="261" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1140.50" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (17 samples, 0.03%; +0.03%)</title><rect x="854.4" y="181" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="857.36" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (18 samples, 0.04%; +0.04%)</title><rect x="998.9" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1001.92" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (29 samples, 0.06%; +0.06%)</title><rect x="999.4" y="229" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1002.37" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (24 samples, 0.05%; +0.05%)</title><rect x="835.4" y="213" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="838.41" y="223.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (44 samples, 0.09%; +0.00%)</title><rect x="266.9" y="341" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="269.92" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (16 samples, 0.03%; +0.03%)</title><rect x="1111.3" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1114.26" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (171 samples, 0.34%; +0.03%)</title><rect x="1076.3" y="245" width="4.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1079.28" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (20 samples, 0.04%; +0.02%)</title><rect x="648.5" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="651.46" y="303.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (26 samples, 0.05%; +0.01%)</title><rect x="731.0" y="197" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="734.03" y="207.5" ></text>
</g>
<g >
<title>std::__alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (9 samples, 0.02%; +0.02%)</title><rect x="960.2" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="963.20" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (15 samples, 0.03%; +0.03%)</title><rect x="762.0" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="765.01" y="223.5" ></text>
</g>
<g >
<title>generic_perform_write (10 samples, 0.02%; 0.00%)</title><rect x="21.2" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.19" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (6 samples, 0.01%; +0.01%)</title><rect x="519.1" y="405" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="522.08" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (7 samples, 0.01%; +0.01%)</title><rect x="795.6" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="798.63" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (6 samples, 0.01%; 0.00%)</title><rect x="1183.3" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.29" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (31 samples, 0.06%; +0.06%)</title><rect x="1068.2" y="229" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1071.21" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (13 samples, 0.03%; +0.03%)</title><rect x="952.5" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="955.53" y="175.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="706.3" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="709.26" y="207.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (6 samples, 0.01%; +0.01%)</title><rect x="625.0" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="628.03" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (40 samples, 0.08%; +0.08%)</title><rect x="645.4" y="293" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="648.39" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (21 samples, 0.04%; +0.04%)</title><rect x="651.8" y="309" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="654.79" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (15 samples, 0.03%; +0.03%)</title><rect x="1084.9" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1087.87" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (49 samples, 0.10%; +0.02%)</title><rect x="1174.5" y="421" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1177.52" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (10 samples, 0.02%; +0.02%)</title><rect x="1062.6" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1065.56" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (27 samples, 0.05%; +0.05%)</title><rect x="1031.1" y="229" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1034.08" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (6 samples, 0.01%; +0.01%)</title><rect x="39.5" y="437" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="42.46" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (23 samples, 0.05%; +0.02%)</title><rect x="1120.2" y="229" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1123.22" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (12 samples, 0.02%; +0.01%)</title><rect x="667.4" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="670.37" y="287.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (6 samples, 0.01%; +0.01%)</title><rect x="806.7" y="149" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="809.72" y="159.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (2,394 samples, 4.76%; +4.72%)</title><rect x="415.5" y="357" width="56.2" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="418.52" y="367.5" >__mem..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (23 samples, 0.05%; +0.05%)</title><rect x="617.7" y="325" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="620.71" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (13 samples, 0.03%; +0.01%)</title><rect x="1128.7" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1131.66" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (14 samples, 0.03%; +0.03%)</title><rect x="851.5" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="854.48" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (45 samples, 0.09%; +0.09%)</title><rect x="983.4" y="213" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="986.37" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (133 samples, 0.26%; +0.01%)</title><rect x="1081.2" y="213" width="3.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1084.16" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (18 samples, 0.04%; +0.04%)</title><rect x="529.9" y="373" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="532.91" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (8 samples, 0.02%; +0.02%)</title><rect x="1149.0" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1151.95" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (10 samples, 0.02%; +0.02%)</title><rect x="280.4" y="421" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="283.43" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (86 samples, 0.17%; +0.02%)</title><rect x="915.4" y="197" width="2.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="918.44" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1030.9" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1033.94" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (6 samples, 0.01%; +0.01%)</title><rect x="479.1" y="421" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="482.11" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (57 samples, 0.11%; +0.02%)</title><rect x="862.0" y="181" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="864.99" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (96 samples, 0.19%; +0.03%)</title><rect x="868.4" y="165" width="2.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="871.37" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (10 samples, 0.02%; +0.01%)</title><rect x="1158.5" y="325" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1161.52" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1,019 samples, 2.03%; +0.05%)</title><rect x="1047.5" y="261" width="23.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1050.48" y="271.5" >s..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (5 samples, 0.01%; +0.01%)</title><rect x="707.8" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="710.76" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (6 samples, 0.01%; +0.01%)</title><rect x="1034.8" y="181" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1037.79" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (2,915 samples, 5.79%; +0.10%)</title><rect x="406.7" y="437" width="68.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="409.70" y="447.5" >std::ve..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (13 samples, 0.03%; 0.00%)</title><rect x="471.4" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="474.36" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (71 samples, 0.14%; +0.05%)</title><rect x="1033.8" y="197" width="1.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1036.83" y="207.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (7 samples, 0.01%; +0.01%)</title><rect x="908.0" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="910.98" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (12 samples, 0.02%; +0.02%)</title><rect x="621.7" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="624.65" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (100 samples, 0.20%; +0.09%)</title><rect x="827.7" y="165" width="2.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="830.74" y="175.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (16 samples, 0.03%; +0.03%)</title><rect x="865.2" y="181" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="868.25" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (7 samples, 0.01%; +0.01%)</title><rect x="970.7" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="973.66" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (16 samples, 0.03%; +0.00%)</title><rect x="1150.5" y="293" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1153.50" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (5 samples, 0.01%; 0.00%)</title><rect x="1181.2" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1184.18" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (31 samples, 0.06%; +0.03%)</title><rect x="1164.6" y="341" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1167.57" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (32 samples, 0.06%; +0.01%)</title><rect x="1094.8" y="245" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1097.77" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (12 samples, 0.02%; +0.02%)</title><rect x="998.5" y="213" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1001.50" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (8 samples, 0.02%; +0.02%)</title><rect x="707.4" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="710.43" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (5 samples, 0.01%; +0.01%)</title><rect x="1115.8" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1118.76" y="239.5" ></text>
</g>
<g >
<title>do_writev (19 samples, 0.04%; 0.00%)</title><rect x="21.0" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.00" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (103 samples, 0.20%; +0.02%)</title><rect x="628.2" y="341" width="2.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="631.22" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (10 samples, 0.02%; +0.02%)</title><rect x="38.0" y="437" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="40.98" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (66 samples, 0.13%; +0.03%)</title><rect x="984.5" y="213" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="987.45" y="223.5" ></text>
</g>
<g >
<title>load_elf_binary (6 samples, 0.01%; 0.00%)</title><rect x="26.4" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.40" y="447.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%; +0.02%)</title><rect x="1143.3" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1146.35" y="287.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (16 samples, 0.03%; +0.03%)</title><rect x="1012.8" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1015.76" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (36 samples, 0.07%; +0.00%)</title><rect x="861.1" y="165" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="864.14" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (18 samples, 0.04%; +0.04%)</title><rect x="919.2" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="922.17" y="223.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18 samples, 0.04%; +0.03%)</title><rect x="625.6" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="628.57" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (13 samples, 0.03%; +0.03%)</title><rect x="863.3" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="866.32" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (24 samples, 0.05%; +0.05%)</title><rect x="529.3" y="373" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="532.35" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (5 samples, 0.01%; +0.01%)</title><rect x="805.0" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="807.96" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (27 samples, 0.05%; +0.05%)</title><rect x="925.3" y="181" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="928.27" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (5 samples, 0.01%; +0.01%)</title><rect x="406.2" y="437" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="409.23" y="447.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.01%; 0.00%)</title><rect x="924.5" y="101" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="927.54" y="111.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (40 samples, 0.08%; +0.07%)</title><rect x="10.0" y="533" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%; +0.02%)</title><rect x="740.3" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="743.27" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::destroy&lt;int&gt; (5 samples, 0.01%; +0.01%)</title><rect x="702.3" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="705.29" y="255.5" ></text>
</g>
<g >
<title>std::__do_alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (33 samples, 0.07%; +0.07%)</title><rect x="892.9" y="181" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="895.88" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (12 samples, 0.02%; +0.02%)</title><rect x="482.0" y="405" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="485.01" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (18 samples, 0.04%; +0.04%)</title><rect x="899.5" y="149" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="902.47" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator&lt;int*&gt; (5 samples, 0.01%; +0.01%)</title><rect x="719.7" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="722.75" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (521 samples, 1.04%; +0.12%)</title><rect x="653.0" y="309" width="12.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="655.96" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (11 samples, 0.02%; +0.02%)</title><rect x="1134.3" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1137.29" y="287.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (11 samples, 0.02%; +0.02%)</title><rect x="1117.8" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1120.82" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (23 samples, 0.05%; +0.05%)</title><rect x="808.6" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="811.55" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (34 samples, 0.07%; +0.07%)</title><rect x="807.5" y="197" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="810.54" y="207.5" ></text>
</g>
<g >
<title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (6 samples, 0.01%; 0.00%)</title><rect x="1183.3" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.29" y="431.5" ></text>
</g>
<g >
<title>do_page_fault (9 samples, 0.02%; 0.00%)</title><rect x="272.7" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="275.67" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (379 samples, 0.75%; +0.19%)</title><rect x="758.7" y="229" width="8.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="761.66" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (7 samples, 0.01%; +0.01%)</title><rect x="853.5" y="181" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="856.47" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (20 samples, 0.04%; +0.04%)</title><rect x="815.2" y="197" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="818.21" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (5 samples, 0.01%; +0.01%)</title><rect x="706.0" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="709.02" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (12 samples, 0.02%; +0.02%)</title><rect x="412.8" y="405" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="415.84" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (7 samples, 0.01%; +0.00%)</title><rect x="648.9" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="651.93" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (22 samples, 0.04%; +0.04%)</title><rect x="559.4" y="357" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="562.42" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (16 samples, 0.03%; +0.03%)</title><rect x="834.8" y="197" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="837.82" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (13 samples, 0.03%; +0.03%)</title><rect x="898.2" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="901.18" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (7 samples, 0.01%; +0.01%)</title><rect x="667.8" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="670.84" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (453 samples, 0.90%; +0.05%)</title><rect x="561.0" y="357" width="10.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="564.04" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (6 samples, 0.01%; +0.01%)</title><rect x="697.1" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="700.13" y="271.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (26 samples, 0.05%; +0.02%)</title><rect x="765.6" y="181" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="768.56" y="191.5" ></text>
</g>
<g >
<title>merge (1,285 samples, 2.55%; +0.15%)</title><rect x="521.2" y="421" width="30.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="524.16" y="431.5" >me..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (10 samples, 0.02%; +0.02%)</title><rect x="1015.6" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1018.55" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (5 samples, 0.01%; +0.01%)</title><rect x="986.3" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="989.30" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (33 samples, 0.07%; +0.01%)</title><rect x="1182.3" y="469" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1185.33" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (8 samples, 0.02%; 0.00%)</title><rect x="1141.7" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.66" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (7 samples, 0.01%; +0.01%)</title><rect x="1116.2" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1119.16" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (16 samples, 0.03%; +0.03%)</title><rect x="577.2" y="373" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="580.15" y="383.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (5 samples, 0.01%; 0.00%)</title><rect x="21.2" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.19" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (6 samples, 0.01%; +0.01%)</title><rect x="880.5" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="883.52" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (13 samples, 0.03%; +0.03%)</title><rect x="639.5" y="293" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="642.50" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (6 samples, 0.01%; +0.01%)</title><rect x="837.2" y="181" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="840.19" y="191.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (9 samples, 0.02%; +0.02%)</title><rect x="681.3" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="684.25" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (84 samples, 0.17%; +0.07%)</title><rect x="820.6" y="197" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="823.63" y="207.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (159 samples, 0.32%; +0.05%)</title><rect x="762.6" y="213" width="3.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="765.55" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (9 samples, 0.02%; +0.02%)</title><rect x="713.3" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="716.34" y="207.5" ></text>
</g>
<g >
<title>irq_exit (8 samples, 0.02%; 0.00%)</title><rect x="471.2" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="474.18" y="319.5" ></text>
</g>
<g >
<title>std::__do_alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="968.9" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="971.85" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (9 samples, 0.02%; +0.02%)</title><rect x="413.2" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="416.17" y="415.5" ></text>
</g>
<g >
<title>do_iter_write (18 samples, 0.04%; 0.00%)</title><rect x="21.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.02" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (6 samples, 0.01%; +0.01%)</title><rect x="1133.9" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1136.87" y="271.5" ></text>
</g>
<g >
<title>[merSort] (5 samples, 0.01%; +0.01%)</title><rect x="985.2" y="181" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="988.20" y="191.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (5 samples, 0.01%; +0.01%)</title><rect x="781.9" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="784.93" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::allocate (5 samples, 0.01%; +0.01%)</title><rect x="1115.1" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1118.08" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (8 samples, 0.02%; +0.02%)</title><rect x="659.3" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="662.34" y="287.5" ></text>
</g>
<g >
<title>malloc (7 samples, 0.01%; +0.01%)</title><rect x="861.8" y="149" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="864.82" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (24 samples, 0.05%; +0.05%)</title><rect x="605.1" y="293" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="608.07" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (60 samples, 0.12%; +0.05%)</title><rect x="1058.4" y="229" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1061.39" y="239.5" ></text>
</g>
<g >
<title>mergesort (19,168 samples, 38.10%; +0.07%)</title><rect x="690.7" y="309" width="449.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="693.73" y="319.5" >mergesort</text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (15 samples, 0.03%; +0.01%)</title><rect x="1151.3" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1154.32" y="287.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (6 samples, 0.01%; 0.00%)</title><rect x="26.4" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.40" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (7 samples, 0.01%; +0.00%)</title><rect x="1166.0" y="309" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1168.96" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (32 samples, 0.06%; +0.01%)</title><rect x="1074.8" y="229" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1077.76" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (24 samples, 0.05%; +0.03%)</title><rect x="897.5" y="181" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="900.50" y="191.5" ></text>
</g>
<g >
<title>[merSort] (6 samples, 0.01%; +0.01%)</title><rect x="623.7" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="626.74" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (745 samples, 1.48%; +0.23%)</title><rect x="884.2" y="213" width="17.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="887.15" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;true, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (1,329 samples, 2.64%; +0.06%)</title><rect x="487.1" y="373" width="31.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="490.10" y="383.5" >st..</text>
</g>
<g >
<title>irq_exit (13 samples, 0.03%; 0.00%)</title><rect x="516.3" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.28" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (11 samples, 0.02%; +0.01%)</title><rect x="1156.2" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1159.25" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (7 samples, 0.01%; +0.01%)</title><rect x="1079.7" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1082.66" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::max_size (5 samples, 0.01%; +0.01%)</title><rect x="818.0" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="821.03" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (10 samples, 0.02%; +0.00%)</title><rect x="648.7" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="651.70" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (662 samples, 1.32%; +0.15%)</title><rect x="557.4" y="373" width="15.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="560.38" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (508 samples, 1.01%; +0.03%)</title><rect x="734.5" y="261" width="11.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="737.50" y="271.5" ></text>
</g>
<g >
<title>main (49,288 samples, 97.98%; +0.07%)</title><rect x="27.7" y="517" width="1156.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="30.71" y="527.5" >main</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (13 samples, 0.03%; +0.03%)</title><rect x="1035.2" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1038.16" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (5 samples, 0.01%; +0.01%)</title><rect x="715.4" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="718.36" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (8 samples, 0.02%; +0.02%)</title><rect x="672.0" y="293" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="675.01" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (18 samples, 0.04%; +0.04%)</title><rect x="1038.0" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1040.98" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (9,826 samples, 19.53%; +0.03%)</title><rect x="39.6" y="437" width="230.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="42.60" y="447.5" >std::move&lt;__gnu_cxx::__normal_..</text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (5 samples, 0.01%; +0.01%)</title><rect x="786.5" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="789.46" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_move_assign (7 samples, 0.01%; +0.00%)</title><rect x="1163.9" y="341" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1166.94" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (10 samples, 0.02%; +0.02%)</title><rect x="806.3" y="165" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="809.28" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::_Vector_impl (54 samples, 0.11%; +0.08%)</title><rect x="877.0" y="181" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="880.02" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (18 samples, 0.04%; +0.04%)</title><rect x="944.9" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="947.88" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1158.8" y="341" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1161.78" y="351.5" ></text>
</g>
<g >
<title>sysmalloc (5 samples, 0.01%; +0.01%)</title><rect x="1189.8" y="533" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1192.77" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (33 samples, 0.07%; +0.07%)</title><rect x="1107.2" y="197" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1110.20" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (10 samples, 0.02%; +0.02%)</title><rect x="1175.0" y="389" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1177.99" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (19 samples, 0.04%; +0.04%)</title><rect x="1127.6" y="261" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1130.61" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (41 samples, 0.08%; +0.08%)</title><rect x="683.6" y="261" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="686.55" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1084.7" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1087.73" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (5 samples, 0.01%; +0.01%)</title><rect x="827.6" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="830.60" y="175.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (294 samples, 0.58%; +0.58%)</title><rect x="562.7" y="309" width="6.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="565.68" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (211 samples, 0.42%; +0.06%)</title><rect x="1031.7" y="229" width="5.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1034.74" y="239.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (11 samples, 0.02%; +0.02%)</title><rect x="732.4" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="735.44" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (18 samples, 0.04%; +0.03%)</title><rect x="881.4" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="884.36" y="239.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (5 samples, 0.01%; 0.00%)</title><rect x="516.1" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="519.07" y="335.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="871.0" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="873.99" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (44 samples, 0.09%; +0.02%)</title><rect x="1077.3" y="197" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1080.27" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (17 samples, 0.03%; +0.01%)</title><rect x="1139.6" y="245" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1142.64" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::~new_allocator (29 samples, 0.06%; +0.06%)</title><rect x="926.9" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="929.91" y="223.5" ></text>
</g>
<g >
<title>[merSort] (5 samples, 0.01%; +0.01%)</title><rect x="731.1" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="734.14" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (5 samples, 0.01%; +0.01%)</title><rect x="641.3" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="644.28" y="303.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (216 samples, 0.43%; +0.04%)</title><rect x="604.3" y="325" width="5.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="607.27" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (17 samples, 0.03%; +0.03%)</title><rect x="1027.4" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1030.38" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;true&gt;::__destroy&lt;int*&gt; (13 samples, 0.03%; +0.02%)</title><rect x="1086.5" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1089.53" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::new_allocator (5 samples, 0.01%; +0.01%)</title><rect x="1079.5" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1082.54" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (7 samples, 0.01%; +0.01%)</title><rect x="1006.7" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1009.66" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (6 samples, 0.01%; +0.01%)</title><rect x="550.1" y="389" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="553.11" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (12 samples, 0.02%; 0.00%)</title><rect x="668.0" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="671.05" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (20 samples, 0.04%; +0.04%)</title><rect x="658.1" y="277" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="661.15" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (131 samples, 0.26%; +0.03%)</title><rect x="830.8" y="181" width="3.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="833.83" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (12 samples, 0.02%; +0.02%)</title><rect x="409.2" y="421" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="412.21" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (49,317 samples, 98.03%; 0.00%)</title><rect x="27.1" y="533" width="1156.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="30.05" y="543.5" >__libc_start_main</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (13 samples, 0.03%; +0.00%)</title><rect x="1166.4" y="357" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1169.43" y="367.5" ></text>
</g>
<g >
<title>__sched_text_start (7 samples, 0.01%; 0.00%)</title><rect x="546.8" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="549.78" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (8 samples, 0.02%; +0.00%)</title><rect x="1169.3" y="373" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1172.26" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (6 samples, 0.01%; +0.00%)</title><rect x="612.5" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="615.53" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (7 samples, 0.01%; +0.01%)</title><rect x="1127.4" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1130.37" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (11 samples, 0.02%; +0.01%)</title><rect x="1139.0" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1142.01" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (27 samples, 0.05%; +0.05%)</title><rect x="1175.9" y="437" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1178.88" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (6 samples, 0.01%; +0.01%)</title><rect x="807.3" y="149" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="810.31" y="159.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (74 samples, 0.15%; +0.11%)</title><rect x="871.4" y="149" width="1.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="874.44" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_execve (6 samples, 0.01%; 0.00%)</title><rect x="26.4" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.40" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::deallocate (5 samples, 0.01%; +0.01%)</title><rect x="1102.2" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1105.20" y="239.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.01%; +0.01%)</title><rect x="1102.5" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1105.53" y="223.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (6 samples, 0.01%; +0.01%)</title><rect x="266.6" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="269.59" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (40 samples, 0.08%; +0.02%)</title><rect x="875.1" y="213" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="878.12" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (540 samples, 1.07%; +0.11%)</title><rect x="597.9" y="357" width="12.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="600.91" y="367.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;int*, int&gt; (9 samples, 0.02%; +0.02%)</title><rect x="1040.6" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1043.61" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (17 samples, 0.03%; +0.03%)</title><rect x="621.2" y="309" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="624.20" y="319.5" ></text>
</g>
<g >
<title>merge (779 samples, 1.55%; +0.18%)</title><rect x="631.0" y="341" width="18.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="634.01" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (10 samples, 0.02%; +0.02%)</title><rect x="524.1" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="527.07" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (13 samples, 0.03%; +0.03%)</title><rect x="854.9" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="857.88" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (16 samples, 0.03%; +0.03%)</title><rect x="271.1" y="453" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="274.09" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (36 samples, 0.07%; +0.01%)</title><rect x="907.9" y="181" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="910.89" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (17 samples, 0.03%; +0.03%)</title><rect x="599.7" y="341" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="602.74" y="351.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (15 samples, 0.03%; +0.03%)</title><rect x="516.7" y="341" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="519.68" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (7 samples, 0.01%; +0.01%)</title><rect x="873.7" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="876.74" y="191.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.01%; +0.01%)</title><rect x="471.5" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="474.51" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (5 samples, 0.01%; +0.01%)</title><rect x="399.1" y="373" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="402.10" y="383.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="36.0" y="453" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="38.99" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (73 samples, 0.15%; +0.01%)</title><rect x="915.7" y="181" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="918.75" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::select_on_container_copy_construction (59 samples, 0.12%; +0.04%)</title><rect x="1006.8" y="213" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1009.83" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (7 samples, 0.01%; +0.01%)</title><rect x="1148.8" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1151.76" y="287.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (7 samples, 0.01%; 0.00%)</title><rect x="546.8" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="549.78" y="319.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (8 samples, 0.02%; 0.00%)</title><rect x="471.2" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="474.18" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (11 samples, 0.02%; +0.02%)</title><rect x="767.8" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="770.76" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (7 samples, 0.01%; +0.01%)</title><rect x="1095.3" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1098.28" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (11 samples, 0.02%; 0.00%)</title><rect x="1183.5" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1186.53" y="511.5" ></text>
</g>
<g >
<title>[merSort] (10 samples, 0.02%; +0.02%)</title><rect x="1013.1" y="165" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1016.14" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::get_allocator (38 samples, 0.08%; +0.05%)</title><rect x="967.3" y="213" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="970.28" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (25 samples, 0.05%; +0.05%)</title><rect x="737.5" y="229" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="740.48" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (41 samples, 0.08%; +0.02%)</title><rect x="1035.5" y="213" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1038.49" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (18 samples, 0.04%; +0.04%)</title><rect x="547.0" y="325" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="550.04" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (9 samples, 0.02%; +0.01%)</title><rect x="1063.3" y="197" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1066.34" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (17 samples, 0.03%; +0.03%)</title><rect x="698.0" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="701.02" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (29 samples, 0.06%; +0.06%)</title><rect x="414.5" y="373" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="417.53" y="383.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_M_swap_data (116 samples, 0.23%; +0.23%)</title><rect x="964.4" y="213" width="2.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="967.40" y="223.5" ></text>
</g>
<g >
<title>std::move&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (170 samples, 0.34%; +0.04%)</title><rect x="641.4" y="293" width="4.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="644.40" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (76 samples, 0.15%; +0.07%)</title><rect x="868.8" y="149" width="1.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="871.83" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl_data::_Vector_impl_data (9 samples, 0.02%; +0.02%)</title><rect x="1079.8" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1082.85" y="239.5" ></text>
</g>
<g >
<title>do_IRQ (5 samples, 0.01%; 0.00%)</title><rect x="924.5" y="69" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="927.54" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (50 samples, 0.10%; +0.01%)</title><rect x="1157.3" y="325" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1160.35" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (43 samples, 0.09%; +0.02%)</title><rect x="1176.6" y="437" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1179.58" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (12 samples, 0.02%; +0.02%)</title><rect x="280.7" y="421" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="283.66" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (16 samples, 0.03%; +0.03%)</title><rect x="1110.8" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1113.76" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (47 samples, 0.09%; +0.06%)</title><rect x="742.4" y="197" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="745.38" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (61 samples, 0.12%; +0.03%)</title><rect x="573.1" y="389" width="1.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="576.14" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (11 samples, 0.02%; +0.02%)</title><rect x="1118.4" y="261" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1121.41" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (51 samples, 0.10%; +0.02%)</title><rect x="475.1" y="437" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="478.07" y="447.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (8 samples, 0.02%; +0.01%)</title><rect x="711.2" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="714.16" y="255.5" ></text>
</g>
<g >
<title>[merSort] (7 samples, 0.01%; +0.01%)</title><rect x="819.6" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="822.58" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (38 samples, 0.08%; +0.07%)</title><rect x="609.3" y="325" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="612.34" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (86 samples, 0.17%; +0.01%)</title><rect x="782.1" y="213" width="2.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="785.07" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (12 samples, 0.02%; +0.02%)</title><rect x="33.4" y="469" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="36.43" y="479.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (13 samples, 0.03%; 0.00%)</title><rect x="471.4" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="474.36" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (12 samples, 0.02%; +0.02%)</title><rect x="1154.7" y="293" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1157.70" y="303.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.01%; 0.00%)</title><rect x="546.8" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="549.78" y="271.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;int&gt; (17 samples, 0.03%; +0.03%)</title><rect x="471.8" y="357" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="474.81" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (45 samples, 0.09%; +0.09%)</title><rect x="1053.7" y="229" width="1.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1056.74" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (21 samples, 0.04%; +0.02%)</title><rect x="272.4" y="437" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="275.38" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (790 samples, 1.57%; +0.34%)</title><rect x="855.7" y="197" width="18.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="858.70" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (14 samples, 0.03%; +0.01%)</title><rect x="1135.3" y="277" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1138.35" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (8 samples, 0.02%; +0.02%)</title><rect x="626.4" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="629.44" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_do_relocate (51 samples, 0.10%; +0.01%)</title><rect x="1108.4" y="229" width="1.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1111.42" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (6 samples, 0.01%; +0.01%)</title><rect x="579.2" y="357" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="582.24" y="367.5" ></text>
</g>
<g >
<title>[merSort] (15 samples, 0.03%; +0.03%)</title><rect x="1023.6" y="133" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1026.55" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator= (7 samples, 0.01%; 0.00%)</title><rect x="1163.9" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1166.94" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (11 samples, 0.02%; +0.02%)</title><rect x="674.5" y="277" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="677.52" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (14 samples, 0.03%; +0.03%)</title><rect x="1040.8" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1043.82" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (23 samples, 0.05%; +0.05%)</title><rect x="836.2" y="213" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="839.23" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (30 samples, 0.06%; 0.00%)</title><rect x="875.3" y="197" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="878.31" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (11 samples, 0.02%; +0.02%)</title><rect x="710.6" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="713.62" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (235 samples, 0.47%; +0.01%)</title><rect x="1019.9" y="197" width="5.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1022.92" y="207.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (7 samples, 0.01%; +0.01%)</title><rect x="1150.7" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1153.69" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (17 samples, 0.03%; +0.03%)</title><rect x="1075.1" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1078.11" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::max_size (6 samples, 0.01%; +0.01%)</title><rect x="913.7" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="916.71" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (5 samples, 0.01%; +0.01%)</title><rect x="1180.0" y="469" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1183.03" y="479.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (9 samples, 0.02%; +0.02%)</title><rect x="1065.5" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1068.54" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (26 samples, 0.05%; +0.05%)</title><rect x="623.0" y="277" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="625.99" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (40 samples, 0.08%; +0.05%)</title><rect x="647.1" y="309" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="650.05" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (21 samples, 0.04%; +0.04%)</title><rect x="405.7" y="437" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="408.73" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::deallocate (20 samples, 0.04%; +0.00%)</title><rect x="1057.5" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1060.49" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (7 samples, 0.01%; 0.00%)</title><rect x="1162.8" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1165.84" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (20 samples, 0.04%; +0.04%)</title><rect x="963.8" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="966.79" y="223.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (8 samples, 0.02%; +0.02%)</title><rect x="1108.2" y="229" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1111.23" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*, int&gt; (156 samples, 0.31%; +0.02%)</title><rect x="1080.7" y="245" width="3.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1083.67" y="255.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (158 samples, 0.31%; +0.31%)</title><rect x="585.7" y="293" width="3.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="588.74" y="303.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (44 samples, 0.09%; 0.00%)</title><rect x="266.9" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="269.92" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (26 samples, 0.05%; +0.01%)</title><rect x="1128.1" y="261" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1131.05" y="271.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.01%; +0.01%)</title><rect x="1046.7" y="165" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1049.68" y="175.5" ></text>
</g>
<g >
<title>_dl_map_object (8 samples, 0.02%; 0.00%)</title><rect x="1184.2" y="533" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1187.16" y="543.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (45 samples, 0.09%; +0.05%)</title><rect x="401.9" y="437" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="404.86" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (14 samples, 0.03%; +0.03%)</title><rect x="721.1" y="261" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="724.13" y="271.5" ></text>
</g>
<g >
<title>page_fault (9 samples, 0.02%; 0.00%)</title><rect x="272.7" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="275.67" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::erase (17 samples, 0.03%; +0.03%)</title><rect x="1171.9" y="405" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1174.89" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (13 samples, 0.03%; +0.03%)</title><rect x="803.5" y="197" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="806.46" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::destroy&lt;int&gt; (6 samples, 0.01%; +0.01%)</title><rect x="560.9" y="357" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="563.90" y="367.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (5 samples, 0.01%; 0.00%)</title><rect x="1189.6" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (6 samples, 0.01%; +0.01%)</title><rect x="722.8" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="725.84" y="255.5" ></text>
</g>
<g >
<title>[merSort] (7 samples, 0.01%; +0.01%)</title><rect x="1034.6" y="181" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1037.62" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (17 samples, 0.03%; +0.03%)</title><rect x="727.7" y="229" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="730.67" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;int&gt;, int&gt;::_S_select_on_copy (6 samples, 0.01%; +0.00%)</title><rect x="1157.5" y="309" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1160.51" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (11 samples, 0.02%; +0.02%)</title><rect x="721.5" y="261" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="724.48" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::__normal_iterator (15 samples, 0.03%; +0.02%)</title><rect x="529.0" y="373" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="532.00" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (62 samples, 0.12%; +0.01%)</title><rect x="519.4" y="421" width="1.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="522.38" y="431.5" ></text>
</g>
<g >
<title>[merSort] (8 samples, 0.02%; +0.02%)</title><rect x="532.5" y="325" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="535.47" y="335.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (18 samples, 0.04%; +0.03%)</title><rect x="705.3" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="708.34" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (15 samples, 0.03%; +0.03%)</title><rect x="785.9" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="788.87" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;int&gt;::allocator (13 samples, 0.03%; +0.03%)</title><rect x="971.4" y="181" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="974.39" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (7 samples, 0.01%; 0.00%)</title><rect x="648.9" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="651.93" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (16 samples, 0.03%; +0.03%)</title><rect x="795.2" y="229" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="798.16" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (24 samples, 0.05%; +0.02%)</title><rect x="1153.4" y="309" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1156.41" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (6 samples, 0.01%; +0.01%)</title><rect x="1111.6" y="277" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1114.63" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_check_len (105 samples, 0.21%; +0.10%)</title><rect x="1129.9" y="261" width="2.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1132.88" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (126 samples, 0.25%; +0.11%)</title><rect x="851.8" y="197" width="3.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="854.80" y="207.5" ></text>
</g>
<g >
<title>std::__do_alloc_on_move&lt;std::allocator&lt;int&gt; &gt; (7 samples, 0.01%; +0.01%)</title><rect x="1043.2" y="213" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1046.23" y="223.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="649.0" y="261" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="651.95" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (24 samples, 0.05%; +0.05%)</title><rect x="730.3" y="197" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="733.28" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (37 samples, 0.07%; +0.00%)</title><rect x="1101.1" y="229" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1104.05" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (6 samples, 0.01%; +0.01%)</title><rect x="664.8" y="293" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="667.76" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (7 samples, 0.01%; +0.01%)</title><rect x="406.4" y="437" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="409.37" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::allocate (5 samples, 0.01%; +0.01%)</title><rect x="1146.0" y="277" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1149.00" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="530.4" y="373" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="533.38" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_use_relocate (7 samples, 0.01%; +0.01%)</title><rect x="714.7" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="717.75" y="255.5" ></text>
</g>
<g >
<title>mergesort (27,920 samples, 55.50%; +0.03%)</title><rect x="520.8" y="437" width="654.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="523.83" y="447.5" >mergesort</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (30 samples, 0.06%; +0.06%)</title><rect x="799.9" y="213" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="802.90" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (110 samples, 0.22%; +0.03%)</title><rect x="992.6" y="197" width="2.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="995.61" y="207.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.01%; 0.00%)</title><rect x="924.5" y="133" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="927.54" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (12 samples, 0.02%; +0.01%)</title><rect x="710.9" y="245" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="713.88" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (5 samples, 0.01%; +0.01%)</title><rect x="549.9" y="389" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="552.85" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (20 samples, 0.04%; +0.04%)</title><rect x="975.9" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="978.91" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (5 samples, 0.01%; +0.01%)</title><rect x="1114.5" y="245" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1117.52" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_base (319 samples, 0.63%; +0.05%)</title><rect x="1010.3" y="229" width="7.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1013.32" y="239.5" ></text>
</g>
<g >
<title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (39 samples, 0.08%; +0.03%)</title><rect x="1117.2" y="197" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1120.17" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (7 samples, 0.01%; +0.00%)</title><rect x="1177.4" y="421" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1180.43" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_max_size (38 samples, 0.08%; +0.03%)</title><rect x="1131.5" y="229" width="0.8" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1134.45" y="239.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (70 samples, 0.14%; +0.11%)</title><rect x="1066.5" y="197" width="1.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1069.53" y="207.5" ></text>
</g>
<g >
<title>schedule (42 samples, 0.08%; 0.00%)</title><rect x="267.0" y="325" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="269.97" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::cbegin (5 samples, 0.01%; +0.01%)</title><rect x="847.6" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="850.61" y="223.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (6 samples, 0.01%; +0.01%)</title><rect x="471.7" y="357" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="474.67" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::begin (5 samples, 0.01%; +0.01%)</title><rect x="847.5" y="213" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="850.49" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (848 samples, 1.69%; +0.02%)</title><rect x="855.2" y="213" width="19.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="858.23" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (5 samples, 0.01%; 0.00%)</title><rect x="1189.6" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.62" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (43 samples, 0.09%; +0.05%)</title><rect x="628.5" y="325" width="1.0" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="631.48" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (17 samples, 0.03%; +0.03%)</title><rect x="776.9" y="197" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="779.86" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::end (53 samples, 0.11%; +0.11%)</title><rect x="766.3" y="213" width="1.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="769.28" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (131 samples, 0.26%; +0.05%)</title><rect x="898.5" y="181" width="3.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="901.48" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;int const&amp;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1175.3" y="405" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1178.34" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::max_size (16 samples, 0.03%; +0.03%)</title><rect x="784.6" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="787.65" y="223.5" ></text>
</g>
<g >
<title>std::__fill_n_a&lt;int*, unsigned long, int&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1183.7" y="405" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1186.67" y="415.5" ></text>
</g>
<g >
<title>std::__niter_base&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; (7 samples, 0.01%; +0.01%)</title><rect x="269.8" y="389" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="272.76" y="399.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (5 samples, 0.01%; 0.00%)</title><rect x="924.5" y="149" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="927.54" y="159.5" ></text>
</g>
<g >
<title>std::__niter_wrap&lt;__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (17 samples, 0.03%; +0.02%)</title><rect x="807.1" y="165" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="810.07" y="175.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (10 samples, 0.02%; +0.02%)</title><rect x="829.8" y="149" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="832.85" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_get_Tp_allocator (5 samples, 0.01%; +0.01%)</title><rect x="779.7" y="197" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="782.65" y="207.5" ></text>
</g>
<g >
<title>merge (10,356 samples, 20.59%; +0.18%)</title><rect x="30.4" y="485" width="242.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="33.41" y="495.5" >merge</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (16 samples, 0.03%; +0.03%)</title><rect x="847.1" y="213" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="850.11" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (176 samples, 0.35%; +0.02%)</title><rect x="1153.1" y="325" width="4.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1156.10" y="335.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (28 samples, 0.06%; +0.00%)</title><rect x="661.6" y="245" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="664.62" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_Vector_impl::~_Vector_impl (15 samples, 0.03%; +0.01%)</title><rect x="975.4" y="181" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="978.44" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;, int*&gt; (10 samples, 0.02%; 0.00%)</title><rect x="1158.2" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.17" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (7 samples, 0.01%; +0.01%)</title><rect x="1053.6" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1056.55" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (56 samples, 0.11%; +0.02%)</title><rect x="1045.8" y="213" width="1.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1048.79" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_erase (5,210 samples, 10.36%; +0.13%)</title><rect x="278.9" y="437" width="122.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="281.90" y="447.5" >std::vector&lt;int..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_S_relocate (13 samples, 0.03%; 0.00%)</title><rect x="668.0" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="671.02" y="287.5" ></text>
</g>
<g >
<title>merge (808 samples, 1.61%; +0.17%)</title><rect x="649.8" y="325" width="18.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="652.75" y="335.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (13 samples, 0.03%; +0.00%)</title><rect x="266.4" y="325" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="269.43" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (24 samples, 0.05%; +0.01%)</title><rect x="1114.7" y="229" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1117.66" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;int&gt;::construct&lt;int, int const&amp;&gt; (28 samples, 0.06%; +0.06%)</title><rect x="864.2" y="165" width="0.7" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="867.24" y="175.5" ></text>
</g>
<g >
<title>std::__copy_move_a&lt;true, int*, int*&gt; (29 samples, 0.06%; +0.01%)</title><rect x="704.7" y="213" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="707.66" y="223.5" ></text>
</g>
<g >
<title>mergesort (26,544 samples, 52.77%; +0.02%)</title><rect x="551.3" y="421" width="622.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="554.30" y="431.5" >mergesort</text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.01%; +0.01%)</title><rect x="546.8" y="229" width="0.1" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="549.78" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (7 samples, 0.01%; +0.01%)</title><rect x="753.7" y="245" width="0.2" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="756.71" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_allocate (38 samples, 0.08%; +0.02%)</title><rect x="738.1" y="229" width="0.9" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="741.09" y="239.5" ></text>
</g>
<g >
<title>std::__relocate_a_1&lt;int, int&gt; (17 samples, 0.03%; +0.03%)</title><rect x="833.5" y="149" width="0.4" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="836.46" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;int&gt; &gt;::construct&lt;int, int const&amp;&gt; (28 samples, 0.06%; +0.02%)</title><rect x="1178.6" y="437" width="0.6" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="1181.58" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::base (14 samples, 0.03%; +0.03%)</title><rect x="620.9" y="309" width="0.3" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="623.88" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_create_storage (20 samples, 0.04%; +0.04%)</title><rect x="927.6" y="213" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="930.59" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;int*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt;::operator+ (20 samples, 0.04%; +0.04%)</title><rect x="38.7" y="437" width="0.5" height="15.0" fill="rgb(255,209,209)" rx="2" ry="2" />
<text  x="41.73" y="447.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;int*, int*, std::allocator&lt;int&gt; &gt; (73 samples, 0.15%; +0.10%)</title><rect x="782.4" y="181" width="1.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="785.37" y="191.5" ></text>
</g>
</g>
</svg>
